{"version":3,"file":"GetManufacturerDetails.js","sources":["../../src/api/actions/GetManufacturerDetails.ts"],"sourcesContent":["/**\n * @module api/actions/GetManufacturerDetails\n * @category Actions\n * @description GetManufacturerDetails NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetManufacturerDetails](module-api_actions_GetManufacturerDetails.GetManufacturerDetails.html)\n * >\n * > **Types**\n * > - Type: [GetManufacturerDetailsResponse](#GetManufacturerDetailsResponse)\n * > - Type: [GetManufacturerDetailsResults](#GetManufacturerDetailsResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetManufacturerDetails extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This provides the details for a specific manufacturer that is requested.\n   * - If supplied `manufacturer` is a number - method will do exact match on Manufacturer's Id.\n   * - If supplied `manufacturer` is a string - it will look for manufacturers whose name is LIKE the provided name,\n   *   (it accepts a partial manufacturer name as an input).\n   * - Multiple results are returned in case of multiple matches.\n   *\n   * @async\n   * @param {string|number} manufacturer - Manufacturer Name (string) or Manufacturer ID (number).\n   * @returns {(Promise<GetManufacturerDetailsResponse>)} Api Response object.\n   */\n  public async GetManufacturerDetails(\n    manufacturer: string | number\n  ): Promise<GetManufacturerDetailsResponse> {\n    const action = 'GetManufacturerDetails';\n\n    /* Runtime typechecking */\n    const typeofManufacturer = getTypeof(manufacturer);\n    if (typeofManufacturer !== 'string' && typeofManufacturer !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"manufacturer\" argument is required and must be of type string or number, got: ` +\n            `<${typeofManufacturer}> ${manufacturer}`\n        )\n      );\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString().catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${manufacturer}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetManufacturerDetailsResponse}.Results' array.\n *\n * @memberof module:api/actions/GetManufacturerDetails\n * @alias GetManufacturerDetailsResults\n */\nexport type GetManufacturerDetailsResults = {\n  Address: string;\n  Address2: string;\n  City: string;\n  ContactEmail: string;\n  ContactFax: string;\n  ContactPhone: string;\n  Country: string;\n  DBAs: string;\n  EquipmentItems: Array<Record<string, unknown>>;\n  LastUpdated: string;\n  ManufacturerTypes: Array<{\n    Name: string;\n  }>;\n  Mfr_CommonName: string;\n  Mfr_ID: number;\n  Mfr_Name: string;\n  OtherManufacturerDetails: string;\n  PostalCode: string;\n  PrimaryProduct: string;\n  PrincipalFirstName: string;\n  PrincipalLastName: string;\n  PrincipalPosition: string;\n  StateProvince: string;\n  SubmittedName: string;\n  SubmittedOn: string;\n  SubmittedPosition: string;\n  VehicleTypes: Array<{\n    GVWRFrom: string;\n    GVWRTo: string;\n    IsPrimary: boolean;\n    Name: string;\n  }>;\n};\n\n/**\n * Type representing the complete response returned by the GetManufacturerDetails API Action.\n *\n * @memberof module:api/actions/GetManufacturerDetails\n * @alias GetManufacturerDetailsResponse\n */\nexport type GetManufacturerDetailsResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetManufacturerDetailsResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["GetManufacturerDetails","Fetch","constructor","userConfig","super","manufacturer","action","typeofManufacturer","getTypeof","Promise","reject","Error","queryString","this","buildQueryString","catch","err","url","baseUrl","get","then","response"],"mappings":"4DAgCaA,UAA+BC,EAC1CC,YAAYC,GACVC,MAAMD,GAcKH,uBACXK,4CAEA,MAAMC,EAAS,yBAGTC,EAAqBC,EAAUH,GACrC,GAA2B,WAAvBE,GAA0D,WAAvBA,EACrC,OAAOE,QAAQC,OACb,IAAIC,MACF,GAAGL,sFACGC,MAAuBF,MAMnC,MAAMO,QAAoBC,KAAKC,mBAAmBC,OAAOC,GACvDP,QAAQC,OACN,IAAIC,MAAM,GAAGL,mCAAwCU,QAKnDC,EAAM,GAAGJ,KAAKK,WAAWZ,KAAUD,IAAeO,IAGxD,aAAaC,KAAKM,IAAIF,GACnBG,MAAMC,GAAaA,IACnBN,OAAOC,GACNP,QAAQC,OAAO,IAAIC,MAAM,GAAGL,yBAA8BU"}