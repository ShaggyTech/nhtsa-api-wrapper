import{F as r,_ as e,g as t}from"./Fetch-d0e51133.js";class n extends r{constructor(r){super(r)}GetAllManufacturers(r={}){return e(this,void 0,void 0,(function*(){const e="GetAllManufacturers",n=t(r);if("object"!==n)return Promise.reject(new Error(`${e}, "params" argument must be of type object, got: <${n}> ${r}`));const s=t(r.manufacturerType);if(r.manufacturerType&&"string"!==s)return Promise.reject(new Error(`${e}, "params.manufacturerType" argument must be of type string, got: <${s}> ${r.manufacturerType}`));const a=t(r.page);if(r.page&&"number"!==a)return Promise.reject(new Error(`${e}, "params.page" argument must be of type number, got: <${a}> ${r.page}`));const o=yield this.buildQueryString(r).catch((r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`)))),u=`${this.baseUrl}/${e}${o}`;return yield this.get(u).then((r=>r)).catch((r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`))))}))}}export{n as GetAllManufacturers};
//# sourceMappingURL=GetAllManufacturers.js.map
