{"version":3,"file":"GetModelsForMakeIdYear.js","sources":["../../src/api/actions/GetModelsForMakeIdYear.ts"],"sourcesContent":["/**\n * @module api/actions/GetModelsForMakeIdYear\n * @category Actions\n * @description GetModelsForMakeIdYear NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetModelsForMakeIdYear](module-api_actions_GetModelsForMakeIdYear.GetModelsForMakeIdYear.html)\n * >\n * > **Types**\n * > - Type: [GetModelsForMakeIdYearResponse](#GetModelsForMakeIdYearResponse)\n * > - Type: [GetModelsForMakeIdYearResults](#GetModelsForMakeIdYearResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetModelsForMakeIdYear extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This returns the Models in the vPIC dataset for a specified Model Year\n   * and Make whose name is LIKE the Make in the vPIC Dataset.\n   *   - `params.makeId` is a number and is a required query parameter.\n   *\n   * A minimum of one of the following are required (or a combination of both):\n   *   - `params.modelYear` is a number (greater than 1995)\n   *   - `params.vehicleType` can be a partial name, or a full name for more specificity\n   *     (e.g., \"Vehicle\", \"Moto\", \"Low Speed Vehicle\", etc.).\n   *\n   * @async\n   * @param {object} params - Query Search Parameters to append to the URL.\n   * @param {number} params.makeId - Make ID to search.\n   * @param {number} [params.modelYear] - A number representing the model year to search (greater than 1995).\n   * @param {string} [params.vehicleType] - String representing the vehicle type to search.\n   * @returns {(Promise<GetModelsForMakeIdYearResponse>)} Api Response object.\n   */\n  async GetModelsForMakeIdYear(params: {\n    makeId: number;\n    modelYear?: number;\n    vehicleType?: string;\n  }): Promise<GetModelsForMakeIdYearResponse> {\n    const action = 'GetModelsForMakeIdYear';\n\n    const makeId: number = params?.makeId;\n    const modelYear: number | undefined = params?.modelYear;\n    const vehicleType: string | undefined = params?.vehicleType;\n\n    /* Valid params object */\n    const typeofParams = getTypeof(params);\n    if (typeofParams !== 'object') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params\" argument must be of type object, got: ` +\n            `<${typeofParams}> ${params}`\n        )\n      );\n    }\n    /* Required makeId param of type number */\n    const typeofMakeId = getTypeof(makeId);\n    if (typeofMakeId !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.makeId\" argument is required and must be of type number, got: ` +\n            `<${typeofMakeId}> ${makeId}`\n        )\n      );\n    }\n    /* At least one of modelYear or vehicleType params is required */\n    if (!modelYear && !vehicleType) {\n      return Promise.reject(\n        new Error(\n          `${action}, either one of \"params.modelYear\" or \"params.vehicleType\" is required, got: ` +\n            `${modelYear} | ${vehicleType}`\n        )\n      );\n    }\n    /* valid modelYear param of type number */\n    const typeofModelYear = getTypeof(modelYear);\n    if (modelYear && typeofModelYear !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.modelYear\" must be of type number, got: ` +\n            `<${typeofModelYear}> ${modelYear}`\n        )\n      );\n    }\n    /* valid vehicleType param of type string */\n    const typeofVehicleType = getTypeof(vehicleType);\n    if (vehicleType && typeofVehicleType !== 'string') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.vehicleType\" must be of type string, got: ` +\n            `<${typeofVehicleType}> ${vehicleType}`\n        )\n      );\n    }\n\n    /* Beginning of the the actionUrl */\n    let actionUrl = `${action}/makeId/${makeId}/`;\n\n    /* Append params.modelYear and params.vehicleType to the actionUrl, at least one is required by the API */\n    if (modelYear && vehicleType) {\n      actionUrl += `modelYear/${modelYear}/vehicleType/${vehicleType}`;\n    } else if (modelYear) {\n      actionUrl += `modelYear/${modelYear}`;\n    } else {\n      actionUrl += `vehicleType/${vehicleType}`;\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString().catch((err: Error) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${actionUrl}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err: Error) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetModelsForMakeIdYearResponse}.Results' array.\n *\n * @memberof module:api/actions/GetModelsForMakeIdYear\n * @alias GetModelsForMakeIdYearResults\n */\nexport type GetModelsForMakeIdYearResults = {\n  Make_ID: number;\n  Make_Name: string;\n  Model_ID: number;\n  Model_Name: string;\n};\n\n/**\n * Type representing the complete response returned by the GetModelsForMakeIdYear API Action.\n *\n * @memberof module:api/actions/GetModelsForMakeIdYear\n * @alias GetModelsForMakeIdYearResponse\n */\nexport type GetModelsForMakeIdYearResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetModelsForMakeIdYearResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["Fetch","getTypeof"],"mappings":"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"}