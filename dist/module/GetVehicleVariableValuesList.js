import{F as e,_ as r,g as t}from"./Fetch-d0e51133.js";class i extends e{constructor(e){super(e)}GetVehicleVariableValuesList(e){return r(this,void 0,void 0,(function*(){const r="GetVehicleVariableValuesList",i=t(e);if("string"!==i&&"number"!==i)return Promise.reject(new Error(`${r}, "variableValue" argument is required and must be of type string or number, got: <${i}> ${e}`));"string"===i&&(e=encodeURI(e));const s=yield this.buildQueryString().catch((e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`)))),n=`${this.baseUrl}/${r}/${e}${s}`;return yield this.get(n).then((e=>e)).catch((e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`))))}))}}export{i as GetVehicleVariableValuesList};
//# sourceMappingURL=GetVehicleVariableValuesList.js.map
