import{F as r,_ as e,g as t}from"./Fetch-d0e51133.js";class n extends r{constructor(r){super(r)}GetMakeForManufacturer(r){return e(this,void 0,void 0,(function*(){const e="GetMakeForManufacturer",n=t(r);if("string"!==n&&"number"!==n)return Promise.reject(new Error(`${e}, "manufacturer" argument is required and must be of type string or number, got: <${n}> ${r}`));const s=yield this.buildQueryString().catch((r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`)))),i=`${this.baseUrl}/${e}/${r}${s}`;return yield this.get(i).then((r=>r)).catch((r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`))))}))}}export{n as GetMakeForManufacturer};
//# sourceMappingURL=GetMakeForManufacturer.js.map
