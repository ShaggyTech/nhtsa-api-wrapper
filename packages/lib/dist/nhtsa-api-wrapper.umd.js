(function(u,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(u=typeof globalThis<"u"?globalThis:u||self,i(u.NHTSA={}))})(this,function(u){"use strict";const i=({args:e,mode:t="default"})=>{if(f(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(t==="default")e.forEach(n=>{b(n)});else if(t==="atLeast"&&!e.find(r=>!!r.value))throw Error(`must provide at least one of the following arguments: ${e.map(r=>r.name).join(", ")}`)},b=({name:e,value:t,required:n,types:r,errorMode:o="error"})=>{if(f(e)!=="string")throw Error("'name', is required and must be of type string");let c="";const s=f(t),a=`error validating argument named "${e}",`,l=`received value: ${t} - of type: <${s}>`;if(r&&f(r)!=="array"&&!r.length)throw Error(`${a} 'types' must be an array of strings`);const h=r?`<${r.join(" | ")}>`:"";if(n&&!r?t||(c=`${a} is required, ${l}`):r&&!n?t!==void 0&&!r.includes(s)&&(c=`${a} must be of type(s) ${h}, ${l}`):n&&r&&(!t||!r.includes(s))&&(c=`${a} is required and must be of type(s) ${h}, ${l}`),c.length){if(o==="boolean")return!1;throw Error(c)}return!0},M=e=>f(e)==="error",k=e=>{let t="an unknown error occurred.";return M(e)?e:(f(e)==="string"&&(t=e),Error(t))},d=async e=>(M(e)||(e=k(e)),Promise.reject(e)),f=e=>{const t=Object.prototype.toString.call(e).toLowerCase();return t.slice(8,t.length-1)},q={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},$=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function A(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const t=e.split(""),n=t[8];if(isNaN(parseInt(n))&&n!=="X")return!1;const r=n==="X"?10:parseInt(n);return t.map((c,s)=>{let a;isNaN(parseInt(c))?a=q[c]:a=parseInt(c);const l=$[s];return a*l}).reduce((c,s)=>c+s,0)%11===r}const N="https://vpic.nhtsa.dot.gov/api/vehicles",V="json",j=(e={},t=!1)=>{b({name:"params",value:e,types:["object"]});const n=p({...e,format:V});return"?"+Object.entries(n).map(([r,o],c,s)=>o.length||t&&o===""?`${r}=${o}${c<s.length-1?"&":""}`:"").join("")},p=e=>Object.entries(e).filter(([n,r])=>b({name:n,types:["string","number","boolean"],value:r,errorMode:"boolean"})).reduce((n,[r,o])=>(n[r]=encodeURIComponent(o),n),{}),I=async(e,t,n=!0)=>{const r="DecodeVin";typeof t=="boolean"&&(n=t,t=void 0);try{const o=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];i({args:o});const{get:c,cacheUrl:s,getUrl:a}=g();return s({endpointName:r,path:e,params:t}),n?c():a()}catch(o){return d(o)}},E=async(e,t,n=!0)=>{const r="DecodeVinExtended";typeof t=="boolean"&&(n=t,t=void 0);try{const o=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];i({args:o});const{get:c,cacheUrl:s,getUrl:a}=g();return s({endpointName:r,path:e,params:t}),n?c():a()}catch(o){return d(o)}},S=async(e,t,n=!0)=>{const r="DecodeVinValues";typeof t=="boolean"&&(n=t,t=void 0);try{const o=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];i({args:o});const{get:c,cacheUrl:s,getUrl:a}=g();return s({endpointName:r,path:e,params:t}),n?c():a()}catch(o){return d(o)}},D=async(e,t=!0)=>{const n="DecodeVinValuesBatch";try{i({args:[{name:"inputString",value:e,required:!0,types:["string"]}]});const{post:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,includeQueryString:!1}),t?o(s(),{body:e}):s()}catch(r){return d(r)}},Y=async(e,t,n=!0)=>{const r="DecodeVinValuesExtended";typeof t=="boolean"&&(n=t,t=void 0);try{const o=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];i({args:o});const{get:c,cacheUrl:s,getUrl:a}=g();return s({endpointName:r,path:e,params:t}),n?c():a()}catch(o){return d(o)}},F=async(e,t=!0)=>{const n="DecodeWMI";try{i({args:[{name:"WMI",value:e,required:!0,types:["string"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e}),t?o():s()}catch(r){return d(r)}},w=async(e=!1)=>{const t="GetAllMakes";try{const{get:n,cacheUrl:r,getUrl:o}=g();return r({endpointName:t}),e?n():o()}catch(n){return d(n)}},P=async(e,t=!0)=>{const n="GetAllManufacturers";typeof e=="boolean"&&(t=e,e=void 0);try{const r=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];i({args:r});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,params:e}),t?o():s()}catch(r){return d(r)}},L=async(e,t=!0)=>{const n="GetCanadianVehicleSpecifications";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];i({args:r});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0}),t?o():s()}catch(r){return d(r)}},R=async(e,t=!0)=>{const n="GetEquipmentPlantCodes";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];i({args:r});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,params:e}),t?o():s()}catch(r){return d(r)}},O=async(e,t=!0)=>{const n="GetMakeForManufacturer";try{i({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e.toString()}),t?o():s()}catch(r){return d(r)}},C=async(e,t,n=!0)=>{const r="GetMakesForManufacturerAndYear";try{const o=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:t,required:!0,types:["object"]},{name:"year",value:t.year,required:!0,types:["string","number"]}];i({args:o});const{get:c,cacheUrl:s,getUrl:a}=g();return s({endpointName:r,path:e.toString(),params:t}),n?c():a()}catch(o){return d(o)}},_=async(e,t=!0)=>{const n="GetMakesForVehicleType";try{i({args:[{name:"typeName",value:e,required:!0,types:["string"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e}),t?o():s()}catch(r){return d(r)}},W=async(e,t=!0)=>{const n="GetManufacturerDetails";try{i({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e.toString()}),t?o():s()}catch(r){return d(r)}},B=async(e,t=!0)=>{const n="GetModelsForMake";try{i({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e}),t?o():s()}catch(r){return d(r)}},H=async(e,t=!0)=>{const n="GetModelsForMakeId";try{i({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e.toString()}),t?o():s()}catch(r){return d(r)}},J=async(e,t=!0)=>{const n="GetModelsForMakeIdYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],o=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...r];i({args:o}),i({args:r,mode:"atLeast"});const{makeId:c,modelYear:s,vehicleType:a}=p(e);let l=`/make/${c}/`;l+=s?`modelYear/${s}`:"",l+=a?`${s?"/":""}vehicleType/${a}/`:"";const{get:h,cacheUrl:y,getUrl:m}=g();return y({endpointName:n,path:l}),t?h():m()}catch(r){return d(r)}},Q=async(e,t=!0)=>{const n="GetModelsForMakeYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],o=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...r];i({args:o}),i({args:r,mode:"atLeast"});const{make:c,modelYear:s,vehicleType:a}=p(e);let l=`/make/${c}/`;l+=s?`modelYear/${s}`:"",l+=a?`${s?"/":""}vehicleType/${a}/`:"";const{get:h,cacheUrl:y,getUrl:m}=g();return y({endpointName:n,path:l}),t?h():m()}catch(r){return d(r)}},X=async(e,t=!0)=>{const n="GetParts";typeof e=="boolean"&&(t=e,e=void 0);try{const r=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];i({args:r});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,params:e}),t?o():s()}catch(r){return d(r)}},K=async(e,t=!0)=>{const n="GetVehicleTypesForMake";try{i({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e}),t?o():s()}catch(r){return d(r)}},Z=async(e,t=!0)=>{const n="GetVehicleTypesForMakeId";try{i({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e.toString()}),t?o():s()}catch(r){return d(r)}},z=async(e=!0)=>{const t="GetVehicleVariableList";try{const{get:n,cacheUrl:r,getUrl:o}=g();return r({endpointName:t}),e?n():o()}catch(n){return d(n)}},x=async(e,t=!0)=>{const n="GetVehicleVariableValuesList";try{i({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]});const{get:o,cacheUrl:c,getUrl:s}=g();return c({endpointName:n,path:e.toString()}),t?o():s()}catch(r){return d(r)}},ee=async(e,t=!0)=>{const n="GetWMIsForManufacturer";try{const r=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],o=[{name:"params",value:e,required:!0,types:["object"]},...r];i({args:o}),i({args:r,mode:"atLeast"});const c=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",s=(e==null?void 0:e.vehicleType)||"",{get:a,cacheUrl:l,getUrl:h}=g();return l({endpointName:n,path:c,params:{vehicleType:s}}),t?a():h()}catch(r){return d(r)}},g=()=>{let e;const t=()=>e,n=a=>encodeURI(`DATA=${a}&format=${V}`),r=({endpointName:a,allowEmptyParams:l=!1,includeQueryString:h=!0,path:y="",params:m,saveUrl:v=!0})=>{if(!a)throw Error("Endpoint name is required to create URL string");const G=h?j(m,l):"",U=encodeURI(`${N}/${a}/${y}${G}`);return v&&(e=U),U},o=a=>r({...a,saveUrl:!1}),c=async(a,l={saveUrl:!0})=>(a&&f(a)==="object"&&(a=r({...a,saveUrl:l.saveUrl})),a=f(a)==="string"?a:t(),i({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:l,types:["object"]}]}),l.saveUrl&&(e=a),await fetch(a,l).then(async y=>{if(!y)throw Error("APi responded with an error, no response object returned");const m=y.headers.get("content-type"),v=`content-type: ${m},responseStatus: ${y.status},responseUrl: ${y.url}`;if(!y.ok)throw Error(`APi responded with an error, got ${v}`);if(!["application/json","text/json"].some(te=>m==null?void 0:m.includes(te)))throw Error(`API response is not in JSON format, got ${v}`);const T=await y.json();if(T)return T;throw Error(`API response OK but returned no data, got ${v}`)}).catch(y=>(y.message=`There was an error fetching API data: ${y.message}`,d(y))));return{getUrl:t,cacheUrl:r,createUrl:o,createPostBody:n,get:c,post:async(a,l={saveUrl:!0})=>(a&&f(a)==="object"&&(a=r({...a,saveUrl:l.saveUrl,includeQueryString:!1})),a=f(a)==="string"?a:t(),i({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:l,types:["object"]},{name:"options.body",value:l.body,types:["string"]}]}),await c(a,{...l,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:n(l.body)}))}};u.DecodeVin=I,u.DecodeVinExtended=E,u.DecodeVinValues=S,u.DecodeVinValuesBatch=D,u.DecodeVinValuesExtended=Y,u.DecodeWMI=F,u.GetAllMakes=w,u.GetAllManufacturers=P,u.GetCanadianVehicleSpecifications=L,u.GetEquipmentPlantCodes=R,u.GetMakeForManufacturer=O,u.GetMakesForManufacturerAndYear=C,u.GetMakesForVehicleType=_,u.GetManufacturerDetails=W,u.GetModelsForMake=B,u.GetModelsForMakeId=H,u.GetModelsForMakeIdYear=J,u.GetModelsForMakeYear=Q,u.GetParts=X,u.GetVehicleTypesForMake=K,u.GetVehicleTypesForMakeId=Z,u.GetVehicleVariableList=z,u.GetVehicleVariableValuesList=x,u.GetWMIsForManufacturer=ee,u.isValidVin=A,u.useNHTSA=g,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=nhtsa-api-wrapper.umd.js.map
