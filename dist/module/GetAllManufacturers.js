import{_ as r}from"./tslib.es6-e8a9b979.js";import{F as e,g as t}from"./Fetch-55acb681.js";class s extends e{constructor(r){super(r)}GetAllManufacturers(e={}){return r(this,void 0,void 0,(function*(){const r="GetAllManufacturers",s=t(e);if("object"!==s)return Promise.reject(new Error(`${r}, "params" argument must be of type object, got: `+`<${s}> ${e}`));const n=t(e.manufacturerType);if(e.manufacturerType&&"string"!==n)return Promise.reject(new Error(`${r}, "params.manufacturerType" argument must be of type string, got: `+`<${n}> ${e.manufacturerType}`));const a=t(e.page);if(e.page&&"number"!==a)return Promise.reject(new Error(`${r}, "params.page" argument must be of type number, got: `+`<${a}> ${e.page}`));const o=yield this.buildQueryString(e).catch(e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`))),u=`${this.baseUrl}/${r}${o}`;return yield this.get(u).then(r=>r).catch(e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`)))}))}}export{s as GetAllManufacturers};
//# sourceMappingURL=GetAllManufacturers.js.map
