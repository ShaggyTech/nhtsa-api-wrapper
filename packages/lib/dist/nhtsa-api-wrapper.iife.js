var NHTSA=function(s){"use strict";const u=({args:e,mode:t="default"})=>{if(h(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(t==="default")e.forEach(r=>{M(r)});else if(t==="atLeast"&&!e.find(n=>!!n.value))throw Error(`must provide at least one of the following arguments: ${e.map(n=>n.name).join(", ")}`)},M=({name:e,value:t,required:r,types:n,errorMode:a="error"})=>{if(h(e)!=="string")throw Error("'name', is required and must be of type string");let c="";const d=h(t),o=`error validating argument named "${e}",`,y=`received value: ${t} - of type: <${d}>`;if(n&&h(n)!=="array"&&!n.length)throw Error(`${o} 'types' must be an array of strings`);const g=n?`<${n.join(" | ")}>`:"";if(r&&!n?t||(c=`${o} is required, ${y}`):n&&!r?t!==void 0&&!n.includes(d)&&(c=`${o} must be of type(s) ${g}, ${y}`):r&&n&&(!t||!n.includes(d))&&(c=`${o} is required and must be of type(s) ${g}, ${y}`),c.length){if(a==="boolean")return!1;throw Error(c)}return!0},p=e=>h(e)==="error",G=e=>{let t="an unknown error occurred.";return p(e)?e:(h(e)==="string"&&(t=e),Error(t))},i=async e=>(p(e)||(e=G(e)),Promise.reject(e)),h=e=>{const t=Object.prototype.toString.call(e).toLowerCase();return t.slice(8,t.length-1)},k={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},T=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function q(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const t=e.split(""),r=t[8];if(isNaN(parseInt(r))&&r!=="X")return!1;const n=r==="X"?10:parseInt(r);return t.map((c,d)=>{let o;isNaN(parseInt(c))?o=k[c]:o=parseInt(c);const y=T[d];return o*y}).reduce((c,d)=>c+d,0)%11===n}const $="https://vpic.nhtsa.dot.gov/api/vehicles",b="json",l=()=>{let e;const t=({endpointName:a,allowEmptyParams:c=!1,includeQueryString:d=!0,path:o="",params:y,saveUrl:g=!0})=>{if(!a)throw Error("Endpoint name is required to create URL string");const v=d?U(y,c):"",m=encodeURI(`${$}/${a}/${o}${v}`);return g&&(e=m),m},r=async(a,c={saveUrl:!0})=>(a=a??e,u({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:c,types:["object"]}]}),c.saveUrl&&(e=a),await fetch(a,c).then(async o=>{if(!o.ok)throw Error(`${o.status} ${o.url}`);const y=o.headers.get("content-type"),v=["application/json","text/json"].some(z=>y==null?void 0:y.includes(z)),m=`content-type: ${y},responseStatus: ${o.status},responseUrl: ${o.url}`;if(!v)throw Error(`API response is not in JSON format, got ${m}`);const V=await o.json();if(!V)throw Error(`API responded but returned no data, got ${m}`);return V}).catch(o=>(o.message=`There was an error fetching API data: ${o.message}`,i(o))));return{createUrl:t,get:r,post:async(a,c={saveUrl:!0})=>(a=a??e,u({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:c,types:["object"]},{name:"options.body",value:c,types:["string"]}]}),await r(a,{...c,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:encodeURI(`${c==null?void 0:c.body}&format=${b}`)}))}},U=(e,t=!1)=>{const r={format:b},n=h(e)==="object"?{...e,...r}:r;return"?"+Object.entries(f(n)).map(([c,d],o,y)=>d.length||t&&d===""?`${c}=${d}${o<y.length-1?"&":""}`:"").join("")},f=e=>Object.entries(e).filter(([t,r])=>M({name:t,types:["string","number","boolean"],value:r,errorMode:"boolean"})).reduce((t,[r,n])=>(t[r]=encodeURIComponent(n),t),{}),I=async(e,t)=>{const r="DecodeVin";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];u({args:n});const{createUrl:a,get:c}=l();return a({endpointName:r,path:e,params:t}),c()}catch(n){return i(n)}},N=async(e,t)=>{const r="DecodeVinExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];u({args:n});const{createUrl:a,get:c}=l();return a({endpointName:r,path:e,params:t}),c()}catch(n){return i(n)}},A=async(e,t)=>{const r="DecodeVinValues";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];u({args:n});const{createUrl:a,get:c}=l();return a({endpointName:r,path:e,params:t}),await c()}catch(n){return i(n)}},F=async e=>{const t="DecodeVinValuesBatch";try{u({args:[{name:"inputString",value:e,required:!0,types:["string"]}]});const n=`DATA=${e}`,{createUrl:a,post:c}=l();return a({endpointName:t,includeQueryString:!1}),c(void 0,{body:n})}catch(r){return i(r)}},j=async(e,t)=>{const r="DecodeVinValuesExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];u({args:n});const{createUrl:a,get:c}=l();return a({endpointName:r,path:e,params:t}),await c()}catch(n){return i(n)}},E=async e=>{const t="DecodeWMI";try{u({args:[{name:"WMI",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},S=async()=>{const e="GetAllMakes";try{const{createUrl:t,get:r}=l();return t({endpointName:e}),r()}catch(t){return i(t)}},D=async e=>{const t="GetAllManufacturers";try{const r=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];u({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},Y=async e=>{const t="GetCanadianVehicleSpecifications";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];u({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0}),a()}catch(r){return i(r)}},w=async e=>{const t="GetEquipmentPlantCodes";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];u({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},L=async e=>{const t="GetMakeForManufacturer";try{u({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},P=async(e,t)=>{const r="GetMakesForManufacturerAndYear";try{const n=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:t,required:!0,types:["object"]},{name:"year",value:t.year,required:!0,types:["string","number"]}];u({args:n});const{createUrl:a,get:c}=l();return a({endpointName:r,path:e.toString(),params:t}),c()}catch(n){return i(n)}},R=async e=>{const t="GetMakesForVehicleType";try{u({args:[{name:"typeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},O=async e=>{const t="GetManufacturerDetails";try{u({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},C=async e=>{const t="GetModelsForMake";try{u({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},W=async e=>{const t="GetModelsForMakeId";try{u({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},_=async e=>{const t="GetModelsForMakeIdYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...r];u({args:n}),u({args:r,mode:"atLeast"});const{makeId:a,modelYear:c,vehicleType:d}=f(e);let o=`/make/${a}/`;o+=c?`modelYear/${c}`:"",o+=d?`${c?"/":""}vehicleType/${d}/`:"";const{createUrl:y,get:g}=l();return y({endpointName:t,path:o}),g()}catch(r){return i(r)}},B=async e=>{const t="GetModelsForMakeYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...r];u({args:n}),u({args:r,mode:"atLeast"});const{make:a,modelYear:c,vehicleType:d}=f(e);let o=`/make/${a}/`;o+=c?`modelYear/${c}`:"",o+=d?`${c?"/":""}vehicleType/${d}/`:"";const{createUrl:y,get:g}=l();return y({endpointName:t,path:o}),g()}catch(r){return i(r)}},H=async e=>{const t="GetParts";try{const r=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];u({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},J=async e=>{const t="GetVehicleTypesForMake";try{u({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},Q=async e=>{const t="GetVehicleTypesForMakeId";try{u({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},X=async()=>{const e="GetVehicleVariableList";try{const{createUrl:t,get:r}=l();return t({endpointName:e}),r()}catch(t){return i(t)}},K=async e=>{const t="GetVehicleVariableValuesList";try{u({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},Z=async e=>{const t="GetWMIsForManufacturer";try{const r=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],n=[{name:"params",value:e,required:!0,types:["object"]},...r];u({args:n}),u({args:r,mode:"atLeast"});const a=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",c=(e==null?void 0:e.vehicleType)||"",{createUrl:d,get:o}=l();return d({endpointName:t,path:a,params:{vehicleType:c}}),o()}catch(r){return i(r)}};return s.DecodeVin=I,s.DecodeVinExtended=N,s.DecodeVinValues=A,s.DecodeVinValuesBatch=F,s.DecodeVinValuesExtended=j,s.DecodeWMI=E,s.GetAllMakes=S,s.GetAllManufacturers=D,s.GetCanadianVehicleSpecifications=Y,s.GetEquipmentPlantCodes=w,s.GetMakeForManufacturer=L,s.GetMakesForManufacturerAndYear=P,s.GetMakesForVehicleType=R,s.GetManufacturerDetails=O,s.GetModelsForMake=C,s.GetModelsForMakeId=W,s.GetModelsForMakeIdYear=_,s.GetModelsForMakeYear=B,s.GetParts=H,s.GetVehicleTypesForMake=J,s.GetVehicleTypesForMakeId=Q,s.GetVehicleVariableList=X,s.GetVehicleVariableValuesList=K,s.GetWMIsForManufacturer=Z,s.isValidVin=q,Object.defineProperty(s,Symbol.toStringTag,{value:"Module"}),s}({});
//# sourceMappingURL=nhtsa-api-wrapper.iife.js.map
