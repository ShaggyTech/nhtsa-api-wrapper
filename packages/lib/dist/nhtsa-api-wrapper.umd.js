(function(u,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(u=typeof globalThis<"u"?globalThis:u||self,s(u.NHTSA={}))})(this,function(u){"use strict";const s=({args:e,mode:t="default"})=>{if(h(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(t==="default")e.forEach(r=>{p(r)});else if(t==="atLeast"&&!e.find(n=>!!n.value))throw Error(`must provide at least one of the following arguments: ${e.map(n=>n.name).join(", ")}`)},p=({name:e,value:t,required:r,types:n,errorMode:a="error"})=>{if(h(e)!=="string")throw Error("'name', is required and must be of type string");let o="";const d=h(t),c=`error validating argument named "${e}",`,y=`received value: ${t} - of type: <${d}>`;if(n&&h(n)!=="array"&&!n.length)throw Error(`${c} 'types' must be an array of strings`);const g=n?`<${n.join(" | ")}>`:"";if(r&&!n?t||(o=`${c} is required, ${y}`):n&&!r?t!==void 0&&!n.includes(d)&&(o=`${c} must be of type(s) ${g}, ${y}`):r&&n&&(!t||!n.includes(d))&&(o=`${c} is required and must be of type(s) ${g}, ${y}`),o.length){if(a==="boolean")return!1;throw Error(o)}return!0},M=e=>h(e)==="error",G=e=>{let t="an unknown error occurred.";return M(e)?e:(h(e)==="string"&&(t=e),Error(t))},i=async e=>(M(e)||(e=G(e)),Promise.reject(e)),h=e=>{const t=Object.prototype.toString.call(e).toLowerCase();return t.slice(8,t.length-1)},k={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},T=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function q(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const t=e.split(""),r=t[8];if(isNaN(parseInt(r))&&r!=="X")return!1;const n=r==="X"?10:parseInt(r);return t.map((o,d)=>{let c;isNaN(parseInt(o))?c=k[o]:c=parseInt(o);const y=T[d];return c*y}).reduce((o,d)=>o+d,0)%11===n}const $="https://vpic.nhtsa.dot.gov/api/vehicles",b="json",l=()=>{let e;const t=({endpointName:a,allowEmptyParams:o=!1,includeQueryString:d=!0,path:c="",params:y,saveUrl:g=!0})=>{if(!a)throw Error("Endpoint name is required to create URL string");const v=d?U(y,o):"",m=encodeURI(`${$}/${a}/${c}${v}`);return g&&(e=m),m},r=async(a,o={saveUrl:!0})=>(a=a??e,s({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:o,types:["object"]}]}),o.saveUrl&&(e=a),await fetch(a,o).then(async c=>{if(!c.ok)throw Error(`${c.status} ${c.url}`);const y=c.headers.get("content-type"),v=["application/json","text/json"].some(z=>y==null?void 0:y.includes(z)),m=`content-type: ${y},responseStatus: ${c.status},responseUrl: ${c.url}`;if(!v)throw Error(`API response is not in JSON format, got ${m}`);const V=await c.json();if(!V)throw Error(`API responded but returned no data, got ${m}`);return V}).catch(c=>(c.message=`There was an error fetching API data: ${c.message}`,i(c))));return{createUrl:t,get:r,post:async(a,o={saveUrl:!0})=>(a=a??e,s({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:o,types:["object"]},{name:"options.body",value:o,types:["string"]}]}),await r(a,{...o,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:encodeURI(`${o==null?void 0:o.body}&format=${b}`)}))}},U=(e,t=!1)=>{const r={format:b},n=h(e)==="object"?{...e,...r}:r;return"?"+Object.entries(f(n)).map(([o,d],c,y)=>d.length||t&&d===""?`${o}=${d}${c<y.length-1?"&":""}`:"").join("")},f=e=>Object.entries(e).filter(([t,r])=>p({name:t,types:["string","number","boolean"],value:r,errorMode:"boolean"})).reduce((t,[r,n])=>(t[r]=encodeURIComponent(n),t),{}),I=async(e,t)=>{const r="DecodeVin";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:a,get:o}=l();return a({endpointName:r,path:e,params:t}),o()}catch(n){return i(n)}},N=async(e,t)=>{const r="DecodeVinExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:a,get:o}=l();return a({endpointName:r,path:e,params:t}),o()}catch(n){return i(n)}},j=async(e,t)=>{const r="DecodeVinValues";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:a,get:o}=l();return a({endpointName:r,path:e,params:t}),await o()}catch(n){return i(n)}},A=async e=>{const t="DecodeVinValuesBatch";try{s({args:[{name:"inputString",value:e,required:!0,types:["string"]}]});const n=`DATA=${e}`,{createUrl:a,post:o}=l();return a({endpointName:t,includeQueryString:!1}),o(void 0,{body:n})}catch(r){return i(r)}},F=async(e,t)=>{const r="DecodeVinValuesExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:a,get:o}=l();return a({endpointName:r,path:e,params:t}),await o()}catch(n){return i(n)}},E=async e=>{const t="DecodeWMI";try{s({args:[{name:"WMI",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},S=async()=>{const e="GetAllMakes";try{const{createUrl:t,get:r}=l();return t({endpointName:e}),r()}catch(t){return i(t)}},D=async e=>{const t="GetAllManufacturers";try{const r=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];s({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},Y=async e=>{const t="GetCanadianVehicleSpecifications";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];s({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0}),a()}catch(r){return i(r)}},w=async e=>{const t="GetEquipmentPlantCodes";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];s({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},L=async e=>{const t="GetMakeForManufacturer";try{s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},P=async(e,t)=>{const r="GetMakesForManufacturerAndYear";try{const n=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:t,required:!0,types:["object"]},{name:"year",value:t.year,required:!0,types:["string","number"]}];s({args:n});const{createUrl:a,get:o}=l();return a({endpointName:r,path:e.toString(),params:t}),o()}catch(n){return i(n)}},R=async e=>{const t="GetMakesForVehicleType";try{s({args:[{name:"typeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},O=async e=>{const t="GetManufacturerDetails";try{s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},C=async e=>{const t="GetModelsForMake";try{s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},W=async e=>{const t="GetModelsForMakeId";try{s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},_=async e=>{const t="GetModelsForMakeIdYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const{makeId:a,modelYear:o,vehicleType:d}=f(e);let c=`/make/${a}/`;c+=o?`modelYear/${o}`:"",c+=d?`${o?"/":""}vehicleType/${d}/`:"";const{createUrl:y,get:g}=l();return y({endpointName:t,path:c}),g()}catch(r){return i(r)}},B=async e=>{const t="GetModelsForMakeYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const{make:a,modelYear:o,vehicleType:d}=f(e);let c=`/make/${a}/`;c+=o?`modelYear/${o}`:"",c+=d?`${o?"/":""}vehicleType/${d}/`:"";const{createUrl:y,get:g}=l();return y({endpointName:t,path:c}),g()}catch(r){return i(r)}},H=async e=>{const t="GetParts";try{const r=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];s({args:r});const{createUrl:n,get:a}=l();return n({endpointName:t,params:e}),a()}catch(r){return i(r)}},J=async e=>{const t="GetVehicleTypesForMake";try{s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e}),a()}catch(r){return i(r)}},Q=async e=>{const t="GetVehicleTypesForMakeId";try{s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},X=async()=>{const e="GetVehicleVariableList";try{const{createUrl:t,get:r}=l();return t({endpointName:e}),r()}catch(t){return i(t)}},K=async e=>{const t="GetVehicleVariableValuesList";try{s({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:a}=l();return n({endpointName:t,path:e.toString()}),a()}catch(r){return i(r)}},Z=async e=>{const t="GetWMIsForManufacturer";try{const r=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],n=[{name:"params",value:e,required:!0,types:["object"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const a=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",o=(e==null?void 0:e.vehicleType)||"",{createUrl:d,get:c}=l();return d({endpointName:t,path:a,params:{vehicleType:o}}),c()}catch(r){return i(r)}};u.DecodeVin=I,u.DecodeVinExtended=N,u.DecodeVinValues=j,u.DecodeVinValuesBatch=A,u.DecodeVinValuesExtended=F,u.DecodeWMI=E,u.GetAllMakes=S,u.GetAllManufacturers=D,u.GetCanadianVehicleSpecifications=Y,u.GetEquipmentPlantCodes=w,u.GetMakeForManufacturer=L,u.GetMakesForManufacturerAndYear=P,u.GetMakesForVehicleType=R,u.GetManufacturerDetails=O,u.GetModelsForMake=C,u.GetModelsForMakeId=W,u.GetModelsForMakeIdYear=_,u.GetModelsForMakeYear=B,u.GetParts=H,u.GetVehicleTypesForMake=J,u.GetVehicleTypesForMakeId=Q,u.GetVehicleVariableList=X,u.GetVehicleVariableValuesList=K,u.GetWMIsForManufacturer=Z,u.isValidVin=q,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=nhtsa-api-wrapper.umd.js.map
