import{F as e,_ as r,g as t}from"./Fetch-d0e51133.js";class n extends e{constructor(e){super(e)}GetEquipmentPlantCodes(e){return r(this,void 0,void 0,(function*(){const r="GetEquipmentPlantCodes",n=t(e);if("object"!==n)return Promise.reject(new Error(`${r}, "params" argument must be of type object, got: <${n}> ${e}`));const o=t(e.year);if("number"!==o)return Promise.reject(new Error(`${r}, "params.year" argument is required and must be of type number, got: <${o}> ${e.year}`));const s=t(e.equipmentType);if("number"!==s)return Promise.reject(new Error(`${r}, "params.equipmentType" argument is required and must be of type number, got: <${s}> ${e.equipmentType}`));const i=t(e.reportType);if("string"!==i)return Promise.reject(new Error(`${r}, "params.reportType" argument is required and must be of type string, got: <${i}> ${e.reportType}`));const u=yield this.buildQueryString(e).catch((e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`)))),m=`${this.baseUrl}/${r}${u}`;return yield this.get(m).then((e=>e)).catch((e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`))))}))}}export{n as GetEquipmentPlantCodes};
//# sourceMappingURL=GetEquipmentPlantCodes.js.map
