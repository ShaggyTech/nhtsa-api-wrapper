{"version":3,"file":"DecodeVin.js","sources":["../../src/api/actions/DecodeVin.ts"],"sourcesContent":["/**\n * @module api/actions/DecodeVin\n * @category Actions\n * @description DecodeVin NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [DecodeVin](module-api_actions_DecodeVin.DecodeVin.html)\n * >\n * > **Types**\n * > - Type: [DecodeVinResponse](#DecodeVinResponse)\n * > - Type: [DecodeVinResults](#DecodeVinResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class DecodeVin extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * The DecodeVin API Action will decode the VIN and the decoded output will be made available in the format of Key-value pairs.\n   * - Providing `params.modelYear` allows for the decoding to specifically be done in the current,\n   *   or older (pre-1980), model year ranges.\n   *   - It is recommended to always provide `params.modelYear` if the model year is known at the time of decoding.\n   * - This API also supports partial VIN decoding (VINs that are less than 17 characters).\n   *   - In this case, the VIN will be decoded partially with the available characters.\n   *   - In case of partial VINs, a \"*\" could be used to indicate the unavailable characters.\n   *   - The 9th digit is not necessary.\n   *\n   * @async\n   * @param {string} vin - Vehicle Identification Number (full or partial).\n   * @param {object} [params={}] - Query Search Parameters to append to the URL.\n   * @param {number} [params.modelYear] - Optional Model Year search parameter.\n   * @returns {(Promise<DecodeVinResponse>)} - Api Response object.\n   */\n  async DecodeVin(\n    vin: string,\n    params?: {\n      modelYear?: number;\n    }\n  ): Promise<DecodeVinResponse> {\n    const action = 'DecodeVin';\n\n    /* Runtime typechecking */\n    const typeofParams = getTypeof(params);\n    if (params && typeofParams !== 'object') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params\" argument must be of type object, got: ` +\n            `<${typeofParams}> ${params}`\n        )\n      );\n    }\n\n    const typeofVin = getTypeof(vin);\n    if (typeofVin !== 'string') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"vin\" argument is required and must be of type string, got: ` +\n            `<${typeofVin}> ${vin}`\n        )\n      );\n    }\n\n    const typeofModelYear = getTypeof(params?.modelYear);\n    if (params?.modelYear && typeofModelYear !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.modelYear\" argument is required and must be of type string or number, got: ` +\n            `<${typeofModelYear}> ${params.modelYear}`\n        )\n      );\n    }\n\n    /* Build the query string to be appended to the URL*/\n    const queryString = await this.buildQueryString(params).catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${vin}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link DecodeVinResponse}.Results' array.\n *\n * @memberof module:api/actions/DecodeVin\n * @alias DecodeVinResults\n */\nexport type DecodeVinResults = {\n  Value: string | null;\n  ValueId: string | null;\n  Variable: string;\n  VariableId: number;\n};\n\n/**\n * Type representing the complete response returned by the DecodeVin API Action.\n *\n * @memberof module:api/actions/DecodeVin\n * @alias DecodeVinResponse\n */\nexport type DecodeVinResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<DecodeVinResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,SAAU,SAAQA,WAAK;IAClC,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;;;;;;;IAkBK,SAAS,CACb,GAAW,EACX,MAEC;;YAED,MAAM,MAAM,GAAG,WAAW,CAAC;;YAG3B,MAAM,YAAY,GAAGC,eAAS,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,MAAM,IAAI,YAAY,KAAK,QAAQ,EAAE;gBACvC,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,mDAAmD;oBAC1D,IAAI,YAAY,KAAK,MAAM,EAAE,CAChC,CACF,CAAC;aACH;YAED,MAAM,SAAS,GAAGA,eAAS,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,SAAS,KAAK,QAAQ,EAAE;gBAC1B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,gEAAgE;oBACvE,IAAI,SAAS,KAAK,GAAG,EAAE,CAC1B,CACF,CAAC;aACH;YAED,MAAM,eAAe,GAAGA,eAAS,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC,CAAC;YACrD,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,KAAI,eAAe,KAAK,QAAQ,EAAE;gBACrD,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,uFAAuF;oBAC9F,IAAI,eAAe,KAAK,MAAM,CAAC,SAAS,EAAE,CAC7C,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAChE,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,GAAG,GAAG,WAAW,EAAE,CAAC;;YAG7D,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;iBAC5B,KAAK,CAAC,CAAC,GAAG,KACT,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}