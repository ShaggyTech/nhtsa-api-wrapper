import{_ as r}from"./tslib.es6-e8a9b979.js";import{F as e,g as t}from"./Fetch-55acb681.js";class o extends e{constructor(r){super(r)}DecodeVinValues(e,o){return r(this,void 0,void 0,(function*(){const r="DecodeVinValues",s=t(o);if(o&&"object"!==s)return Promise.reject(new Error(`${r}, "params" argument must be of type object, got: `+`<${s}> ${o}`));const i=t(e);if("string"!==i)return Promise.reject(new Error(`${r}, "vin" argument is required and must be of type string, got: `+`<${i}> ${e}`));const n=t(null==o?void 0:o.modelYear);if((null==o?void 0:o.modelYear)&&"string"!==n&&"number"!==n)return Promise.reject(new Error(`${r}, "params.modelYear" argument is required and must be of type string or number, got: `+`<${n}> ${o.modelYear}`));const u=yield this.buildQueryString(o).catch(e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`))),a=`${this.baseUrl}/${r}/${e}${u}`;return yield this.get(a).then(r=>r).catch(e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`)))}))}}export{o as DecodeVinValues};
//# sourceMappingURL=DecodeVinValues.js.map
