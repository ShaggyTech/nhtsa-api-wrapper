{"version":3,"file":"Fetch-d7540537.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/utils/getTypeof.ts","../../src/utils/makeQueryString.ts","../../src/api/Fetch.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @module utils/getTypeof\r\n * @category Utils\r\n */\r\n\r\n/**\r\n * Gets type of `value` using `Object.prototype.toString.call(value)`.\r\n *\r\n * @param {any} value - Any kind of value (string, object, array, function, etc).\r\n *\r\n * @returns {string} - Type of value, normalized to a lowercase string.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function getTypeof(value: any): string {\r\n  const toString: string = Object.prototype.toString\r\n    .call(value)\r\n    .toLowerCase(); /* ex: => '[object string]' or '[object array], etc. */\r\n  return toString.slice(8, toString.length - 1);\r\n}\r\n","import { getTypeof } from './getTypeof';\n\n/**\n * @module utils/makeQueryString\n * @category Utils\n */\n\n/**\n * Utility method to generate a query string compatible with the NHSTA API, for use in an API URL string.\n *\n * @async\n *\n * @param {object} params - Object of Type [QueryStringParameters](module-utils_makeQueryString.html#.QueryStringParameters).\n * @param {boolean} [allowEmptyStringValues=false] - Set to `true` to add empty parameter values to the returned query string.\n * - Given params of `{ paramName: \"\" }` , setting this to true will use 'paramName=' in the final query string.\n * - GetCanadianVehicleSpecifications is the only API Action that requires this functionality.\n *\n * @returns {Promise<string>} A query string of search parameters for use in a final Fetch.get URL.\n *\n * @example <caption>When loaded from the browser via html script tags</caption>\n * // <script type=\"text/javascript\" src=\"https://www.npmjs.com/package/@shaggytools/nhtsa-api-wrapper\"></script>\n * const qs = await NHTSA.makeQueryString({ modelYear: 2010 }).catch(error => error)\n * console.log(qs) // \"?modelYear=2010\"\n *\n * @example <caption>When loaded as a module</caption>\n * import { makeQueryString } from '@shaggytools/nhtsa-api-wrapper'\n * const qs = await makeQueryString({ modelYear: 2010 }).catch(error => error)\n * console.log(qs) // \"?modelYear=2010\"\n *\n * @example <caption>Single Param:</caption>\n * const qs = await makeQueryString({\n *   modelYear: 2019\n * }).catch(error => error)\n * console.log(qs) // \"?modelYear=2019\"\n *\n * @example <caption>Multiple Params:</caption>\n * const qs = await makeQueryString({\n *   whatever: 'some value',\n *   modelYear: 2006,\n *   page: \"2\"\n * }).catch(error => error)\n *\n * console.log(qs) // \"?whatever=some%20value&modelYear=2006&page=2\"\n *\n * @example <caption>Empty Params Object:</caption>\n * const qs = await makeQueryString({}).catch(error => error)\n *\n * console.log(qs) // \"\"\n *\n * @example <caption>Using allowEmptyStringValues option:</caption>\n * const qs = await makeQueryString({\n *   year: 2016,\n *   vehicleType: '',\n *   make: 'Audi'\n * }, true).catch(error => error)\n *\n * console.log(qs) // \"?year=2016&vehicleType=&make=Audi\"\n *\n */\nexport function makeQueryString(\n  params: QueryStringParameters = {},\n  allowEmptyStringValues = false\n): Promise<string> {\n  /* Beginning of error message string */\n  const errorBase =\n    'queryString(params) - expected params in the form of an object, got:';\n\n  /* Runtime type guard params argument, must be of type object */\n  if (getTypeof(params) !== 'object') {\n    return Promise.reject(new Error(`${errorBase} ${params}`));\n  }\n\n  /* Setup QueryString for Array mapping */\n  const entries = Object.entries(params);\n  const paramsLength = entries.length;\n\n  /* Return an empty string if params are an empty object */\n  if (paramsLength < 1) return Promise.resolve('');\n\n  /* Used to check if we've already prepended a valid query param */\n  let isPrepended = false;\n\n  /* Map [key]:value entries to \"key=value\" strings in an array */\n  const queryStringArray = entries.map(([key, value], index) => {\n    let prepend = '';\n    let append = '';\n\n    const typeofValue = getTypeof(value);\n\n    /* Convert any number values to a string */\n    if (value && typeofValue === 'number') {\n      value = value.toString();\n    }\n\n    /* Skip any invalid values, only string and number value types are valid */\n    if (\n      (value || allowEmptyStringValues) &&\n      (typeofValue === 'string' || typeofValue === 'number')\n    ) {\n      /* if this is the first param we need to prepend the '?' char */\n      if (!isPrepended) {\n        prepend = '?';\n        isPrepended = true;\n      }\n      /* if there is another param coming after this one we need to append the '&' char */\n      if (index < paramsLength - 1) {\n        append = '&';\n      }\n\n      /* Add the completed partial query string to queryStringArray */\n      return `${prepend}${key}=${value}${append}`;\n    }\n    return;\n  });\n\n  /* Join and return the completed query string after URI encoding */\n  return Promise.resolve(encodeURI(queryStringArray.join('')));\n}\n\n/**\n * Object containing Key:Value pairs to build the URL query string with.\n * - Parameter values may be either strings or numbers.\n *\n * @memberof module:utils/makeQueryString\n * @alias QueryStringParameters\n * @example\n * {\n * modelYear: 2009,\n * whatever: 'something'\n * }\n *\n */\nexport type QueryStringParameters = {\n  [propName: string]: string | number | undefined;\n};\n","/**\r\n * @module api/Fetch\r\n * @category API\r\n * @description API Fetch Logic.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [Fetch](module-api_Fetch.Fetch.html)\r\n * > - Constant: [BASE_URL](#~BASE_URL)\r\n * > - Constant: [DEFAULT_CONFIG](#~DEFAULT_CONFIG)\r\n * >\r\n * > **Types**\r\n * > - Type: [ApiResponse](#ApiResponse)\r\n * > - Type: [FetchConfig](#FetchConfig)\r\n * > - Type: [FetchRequestOptions](#FetchRequestOptions)\r\n * > - Type: [FetchRequestBodyTypes](https://github.github.io/fetch/#request-body)\r\n * > - Type: [FetchResponse](#FetchResponse)\r\n * > - Type: [NhtsaResponse](#NhtsaResponse)\r\n */\r\n\r\n/* Module Dependencies */\r\nimport fetch from 'cross-fetch';\r\n/* Utilities */\r\nimport { getTypeof, makeQueryString } from '../utils';\r\n/* Types */\r\nimport { QueryStringParameters } from '../utils/types';\r\n\r\n/*****************\r\n * CONSTANTS\r\n ****************/\r\n\r\n/**\r\n * @constant {string} BASE_URL Default Fetch base URL string\r\n * @default 'https://vpic.nhtsa.dot.gov/api/vehicles'\r\n */\r\nexport const BASE_URL = 'https://vpic.nhtsa.dot.gov/api/vehicles';\r\n\r\n/**\r\n * @constant {module:api/Fetch.FetchConfig} DEFAULT_CONFIG Default Fetch configuration options\r\n * @property {string} apiResponseFormat=json\r\n * @property {string} baseUrl=BASE_URL Default: [BASE_URL](module-api_Fetch.html#~BASE_URL)\r\n * @property {FetchRequestOptions} options={method:\"GET\"}\r\n */\r\nexport const DEFAULT_CONFIG: FetchConfig = {\r\n  apiResponseFormat: 'json',\r\n  baseUrl: BASE_URL,\r\n  options: {},\r\n};\r\n\r\n/*****************\r\n * Fetch Class\r\n ****************/\r\n\r\n/**\r\n * Class wrapper containing API wrapper HTTP Fetch logic.\r\n *\r\n * > **Static Methods**:\r\n * > - [buildQueryString](#buildQueryString)\r\n * > - [get](#get)\r\n *\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n * @category API\r\n */\r\nexport class Fetch {\r\n  apiResponseFormat: string;\r\n  baseUrl?: string;\r\n  options?: FetchRequestOptions;\r\n\r\n  constructor(userConfig?: FetchConfig) {\r\n    let finalConfig: FetchConfig;\r\n\r\n    /* userConfig takes precedence over DEFAULT_CONFIG */\r\n    if (userConfig && getTypeof(userConfig) === 'object') {\r\n      finalConfig = {\r\n        ...DEFAULT_CONFIG,\r\n        ...userConfig,\r\n        options: { ...DEFAULT_CONFIG.options, ...userConfig.options },\r\n      };\r\n    } else {\r\n      finalConfig = { ...DEFAULT_CONFIG };\r\n    }\r\n\r\n    /** @private */\r\n    this.apiResponseFormat = 'json';\r\n    /** @private */\r\n    this.baseUrl = finalConfig.baseUrl;\r\n    /** @private */\r\n    this.options = finalConfig.options;\r\n  }\r\n\r\n  /**\r\n   * Builds a query string from QueryStringParameters.\r\n   *\r\n   * @param {QueryStringParameters} params - Object containing Key:Value pairs to build the URL query string with.\r\n   * @param {boolean} [allowEmptyStringValues=false] - Set to `true` to add empty parameter values to the returned query string.\r\n   * - Given params of `{paramName: \"\"}` , setting this to true will use 'paramName=' in the final query string.\r\n   * - GetCanadianVehicleSpecifications is the only API Action that requires this functionality.\r\n   * @returns {(Promise<string>)} A formatted NHSTA.dot.gov Vehicles API query string.\r\n   */\r\n  async buildQueryString(\r\n    params?: QueryStringParameters,\r\n    allowEmptyStringValues = false\r\n  ): Promise<string> {\r\n    /*\r\n     * Make sure we're always using 'format=json' in the url Query parameters\r\n     * If the user provides a 'format' key in the params, during class instantiation we want to override it to 'json'\r\n     * This package may provide support for the other formats (CSV and XML) if requested.\r\n     */\r\n    if (!params || getTypeof(params) !== 'object') {\r\n      params = {\r\n        format: this.apiResponseFormat,\r\n      };\r\n    } else {\r\n      params = { ...params, format: this.apiResponseFormat };\r\n    }\r\n\r\n    /* Return the completed query string */\r\n    return await makeQueryString(params, allowEmptyStringValues);\r\n  }\r\n\r\n  /**\r\n   * Uses the `cross-fetch` npm package to send HTTP requests and retrieve data from an API.\r\n   * - In browser environments, [whatwg-fetch](https://github.com/github/fetch/) window.fetch is used.\r\n   * - In node environments, [node-fetch](https://github.com/bitinn/node-fetch/) NPM package is used.\r\n   *\r\n   * @param {string} url - URL to fetch data from.\r\n   * @param {FetchRequestOptions} [options] - [Fetch options](https://github.github.io/fetch/#options).\r\n   * @returns {(Promise<module:api/Fetch.ApiResponse>)} Response from the API.\r\n   */\r\n  async get(\r\n    url: string,\r\n    options: FetchRequestOptions = {}\r\n  ): Promise<ApiResponse> {\r\n    /* Runtime typechecking */\r\n    const typeofUrl = getTypeof(url);\r\n    if (typeofUrl !== 'string') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `Fetch.get(url) - url argument must be of type string, got: ${typeofUrl}`\r\n        )\r\n      );\r\n    }\r\n    const typeofOptions = getTypeof(options);\r\n    if (typeofOptions !== 'object') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `Fetch.get(url, options) - options argument must be of type object, got: ${typeofOptions}`\r\n        )\r\n      );\r\n    }\r\n\r\n    /* Combine user provided 'options' and class property 'this.options', user options overwrite class options */\r\n    const combinedOptions = { ...this.options, ...options };\r\n\r\n    /* Use the cross-fetch package to perform an HTTP request */\r\n    const response: Response = await fetch(url, combinedOptions)\r\n      .then((result) => {\r\n        if (!result?.status || result.status >= 400) {\r\n          throw new Error(\r\n            `Bad response from server, code: ${result?.status}, text: ${result?.statusText}, headers: ${result?.headers}`\r\n          );\r\n        } else return result;\r\n      })\r\n      .catch((err) =>\r\n        Promise.reject(new Error(`Fetch.get() http error: ${err}`))\r\n      );\r\n\r\n    /* Convert the NHTSA API data to JSON */\r\n    const NhtsaResponse: NhtsaResponse = await response\r\n      .json()\r\n      .then((json: NhtsaResponse): NhtsaResponse => json);\r\n\r\n    /* Add the fetch response information to the returned NHSTA API data */\r\n    const finalResult: ApiResponse = {\r\n      ...NhtsaResponse,\r\n      FetchResponse: {\r\n        headers: response.headers,\r\n        ok: response.ok,\r\n        redirected: response.redirected,\r\n        status: response.status,\r\n        statusText: response.statusText,\r\n        url: response.url,\r\n      },\r\n    };\r\n\r\n    /* Return the completed ApiResponse */\r\n    return Promise.resolve(finalResult);\r\n  }\r\n}\r\n\r\n/*****************\r\n * Types\r\n ****************/\r\n\r\n/**\r\n * Various fetch request body types.\r\n *\r\n * @typedef FetchRequestBodyTypes\r\n * @type {URLSearchParams | FormData | Blob | ArrayBuffer | DataView}\r\n *\r\n * @memberof module:api/Fetch\r\n */\r\nexport type FetchRequestBodyTypes =\r\n  | URLSearchParams\r\n  | FormData\r\n  | Blob\r\n  | ArrayBuffer\r\n  | DataView;\r\n\r\n/**\r\n * Options object provided as the 2nd argument to {@link module:api/Fetch.Fetch#get}.\r\n *\r\n * @memberof module:api/Fetch\r\n * @alias FetchRequestOptions\r\n */\r\nexport type FetchRequestOptions = {\r\n  /**HTTP request method - Default: \"GET\". */\r\n  method?: string;\r\n  /** HTTP request body - [FetchRequestBodyTypes](https://github.github.io/fetch/#request-body). */\r\n  body?: string | FetchRequestBodyTypes;\r\n  /** [Object, Headers](https://github.github.io/fetch/#Headers) - Default: {}. */\r\n  headers?: Record<string, string> | Headers;\r\n  /**\r\n   * Default: \"omit\" - Authentication credentials mode.\r\n   * - \"omit\" - don't include authentication credentials (e.g. Cookies) in the request.\r\n   * - \"same-origin\" - include credentials in requests to the same site\r\n   * - \"include\" - include credentials in requests to all sites.\r\n   */\r\n  credentials?: 'omit' | 'same-origin' | 'include';\r\n};\r\n\r\n/**\r\n * Used when instantiating a Fetch class or related subclass.\r\n *\r\n * @memberof module:api/Fetch\r\n * @alias FetchConfig\r\n */\r\nexport type FetchConfig = {\r\n  /** Requested response format from the NHSTA API (hardcoded to 'json' for now). */\r\n  apiResponseFormat?: string;\r\n  /** Base of the URL to build fetch URLs from. */\r\n  baseUrl?: string;\r\n  /** Options object provided as the 2nd argument to {@link module:api/Fetch.Fetch#get}. */\r\n  options?: FetchRequestOptions;\r\n};\r\n\r\n/**\r\n * [Fetch API Response](https://github.github.io/fetch/#Response) properties.\r\n *\r\n * @memberof module:api/Fetch\r\n * @alias FetchResponse\r\n */\r\nexport type FetchResponse = {\r\n  /** The [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) object associated with the response. */\r\n  headers: Headers;\r\n  /** A boolean indicating whether the response was successful (status in the range 200–299) or not. */\r\n  ok: boolean;\r\n  /** Indicates whether or not the response is the result of a redirect (that is, its URL list has more than one entry). */\r\n  redirected: boolean;\r\n  /** The status code of the response. (This will be 200 for a success). */\r\n  status: number;\r\n  /** The status message corresponding to the status code. (e.g., OK for 200). */\r\n  statusText: string;\r\n  /** The URL of the response. */\r\n  url: string;\r\n};\r\n\r\n/**\r\n * Response data returned from the NHSTA API.\r\n *\r\n * @memberof module:api/Fetch\r\n * @alias NhtsaResponse\r\n */\r\nexport type NhtsaResponse = {\r\n  /** The number of items returned in the Results object. */\r\n  Count: number;\r\n  /** A message describing the Results. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, etc) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** An array of Results returned by NHSTA, specific to each individual API Action. */\r\n  Results: Array<any>;\r\n};\r\n\r\n/**\r\n * Complete response returned by {@link module:api/Fetch.Fetch#get}.\r\n *\r\n * @see {@link module:api/Fetch.NhtsaResponse}\r\n * @see {@link module:api/Fetch.FetchResponse}\r\n * @memberof module:api/Fetch\r\n * @alias ApiResponse\r\n */\r\nexport type ApiResponse = {\r\n  /** The number of items returned in the Results object. */\r\n  Count: number;\r\n  /** A message describing the Results. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, etc) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** An array of Results returned by NHSTA, specific to each individual API Action. */\r\n  Results: Array<any>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) Properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["fetch"],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqDA;AACO,SAAS,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS,EAAE;AAC7D,IAAI,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM,EAAE;AAC/D,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACnG,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACtG,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;AACvJ,QAAQ,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9E,KAAK,CAAC,CAAC;AACP;;AC1EA;;;;AAKA;;;;;;;AAOA;SACgB,SAAS,CAAC,KAAU;IAClC,MAAM,QAAQ,GAAW,MAAM,CAAC,SAAS,CAAC,QAAQ;SAC/C,IAAI,CAAC,KAAK,CAAC;SACX,WAAW,EAAE,CAAC;IACjB,OAAO,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAChD;;AChBA;;;;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAoDgB,eAAe,CAC7B,SAAgC,EAAE,EAClC,sBAAsB,GAAG,KAAK;;IAG9B,MAAM,SAAS,GACb,sEAAsE,CAAC;;IAGzE,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;QAClC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,SAAS,IAAI,MAAM,EAAE,CAAC,CAAC,CAAC;KAC5D;;IAGD,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvC,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC;;IAGpC,IAAI,YAAY,GAAG,CAAC;QAAE,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;;IAGjD,IAAI,WAAW,GAAG,KAAK,CAAC;;IAGxB,MAAM,gBAAgB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE,KAAK;QACvD,IAAI,OAAO,GAAG,EAAE,CAAC;QACjB,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,MAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;;QAGrC,IAAI,KAAK,IAAI,WAAW,KAAK,QAAQ,EAAE;YACrC,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;SAC1B;;QAGD,IACE,CAAC,KAAK,IAAI,sBAAsB;aAC/B,WAAW,KAAK,QAAQ,IAAI,WAAW,KAAK,QAAQ,CAAC,EACtD;;YAEA,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,GAAG,GAAG,CAAC;gBACd,WAAW,GAAG,IAAI,CAAC;aACpB;;YAED,IAAI,KAAK,GAAG,YAAY,GAAG,CAAC,EAAE;gBAC5B,MAAM,GAAG,GAAG,CAAC;aACd;;YAGD,OAAO,GAAG,OAAO,GAAG,GAAG,IAAI,KAAK,GAAG,MAAM,EAAE,CAAC;SAC7C;QACD,OAAO;KACR,CAAC,CAAC;;IAGH,OAAO,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/D;;ACrHA;;;;;;;;;;;;;;;;;;AA0BA;;;AAIA;;;;AAIO,MAAM,QAAQ,GAAG,yCAAyC,CAAC;AAElE;;;;;;AAMO,MAAM,cAAc,GAAgB;IACzC,iBAAiB,EAAE,MAAM;IACzB,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,EAAE;CACZ,CAAC;AAEF;;;AAIA;;;;;;;;;;MAUa,KAAK;IAKhB,YAAY,UAAwB;QAClC,IAAI,WAAwB,CAAC;;QAG7B,IAAI,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAE;YACpD,WAAW,iDACN,cAAc,GACd,UAAU,KACb,OAAO,kCAAO,cAAc,CAAC,OAAO,GAAK,UAAU,CAAC,OAAO,IAC5D,CAAC;SACH;aAAM;YACL,WAAW,qBAAQ,cAAc,CAAE,CAAC;SACrC;;QAGD,IAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;;QAEhC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;;QAEnC,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;KACpC;;;;;;;;;;IAWK,gBAAgB,CACpB,MAA8B,EAC9B,sBAAsB,GAAG,KAAK;;;;;;;YAO9B,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,QAAQ,EAAE;gBAC7C,MAAM,GAAG;oBACP,MAAM,EAAE,IAAI,CAAC,iBAAiB;iBAC/B,CAAC;aACH;iBAAM;gBACL,MAAM,mCAAQ,MAAM,KAAE,MAAM,EAAE,IAAI,CAAC,iBAAiB,GAAE,CAAC;aACxD;;YAGD,OAAO,MAAM,eAAe,CAAC,MAAM,EAAE,sBAAsB,CAAC,CAAC;SAC9D;KAAA;;;;;;;;;;IAWK,GAAG,CACP,GAAW,EACX,UAA+B,EAAE;;;YAGjC,MAAM,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,SAAS,KAAK,QAAQ,EAAE;gBAC1B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,8DAA8D,SAAS,EAAE,CAC1E,CACF,CAAC;aACH;YACD,MAAM,aAAa,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;YACzC,IAAI,aAAa,KAAK,QAAQ,EAAE;gBAC9B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,2EAA2E,aAAa,EAAE,CAC3F,CACF,CAAC;aACH;;YAGD,MAAM,eAAe,mCAAQ,IAAI,CAAC,OAAO,GAAK,OAAO,CAAE,CAAC;;YAGxD,MAAM,QAAQ,GAAa,MAAMA,yBAAK,CAAC,GAAG,EAAE,eAAe,CAAC;iBACzD,IAAI,CAAC,CAAC,MAAM;gBACX,IAAI,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,CAAA,IAAI,MAAM,CAAC,MAAM,IAAI,GAAG,EAAE;oBAC3C,MAAM,IAAI,KAAK,CACb,mCAAmC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,MAAM,WAAW,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,UAAU,cAAc,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,EAAE,CAC9G,CAAC;iBACH;;oBAAM,OAAO,MAAM,CAAC;aACtB,CAAC;iBACD,KAAK,CAAC,CAAC,GAAG,KACT,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,2BAA2B,GAAG,EAAE,CAAC,CAAC,CAC5D,CAAC;;YAGJ,MAAM,aAAa,GAAkB,MAAM,QAAQ;iBAChD,IAAI,EAAE;iBACN,IAAI,CAAC,CAAC,IAAmB,KAAoB,IAAI,CAAC,CAAC;;YAGtD,MAAM,WAAW,mCACZ,aAAa,KAChB,aAAa,EAAE;oBACb,OAAO,EAAE,QAAQ,CAAC,OAAO;oBACzB,EAAE,EAAE,QAAQ,CAAC,EAAE;oBACf,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAC/B,MAAM,EAAE,QAAQ,CAAC,MAAM;oBACvB,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAC/B,GAAG,EAAE,QAAQ,CAAC,GAAG;iBAClB,GACF,CAAC;;YAGF,OAAO,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SACrC;KAAA;;;;;;;"}