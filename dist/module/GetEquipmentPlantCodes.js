import{_ as e}from"./isValidVin-a63c6e15.js";import{F as r,g as t}from"./Fetch-3b3744ac.js";class n extends r{constructor(e){super(e)}GetEquipmentPlantCodes(r){return e(this,void 0,void 0,(function*(){const e="GetEquipmentPlantCodes",n=t(r);if("object"!==n)return Promise.reject(new Error(`${e}, "params" argument must be of type object, got: `+`<${n}> ${r}`));const o=t(r.year);if("number"!==o)return Promise.reject(new Error(`${e}, "params.year" argument is required and must be of type number, got: `+`<${o}> ${r.year}`));const s=t(r.equipmentType);if("number"!==s)return Promise.reject(new Error(`${e}, "params.equipmentType" argument is required and must be of type number, got: `+`<${s}> ${r.equipmentType}`));const i=t(r.reportType);if("string"!==i)return Promise.reject(new Error(`${e}, "params.reportType" argument is required and must be of type string, got: `+`<${i}> ${r.reportType}`));const u=yield this.buildQueryString(r).catch(r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`))),m=`${this.baseUrl}/${e}${u}`;return yield this.get(m).then(e=>e).catch(r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`)))}))}}export{n as GetEquipmentPlantCodes};
//# sourceMappingURL=GetEquipmentPlantCodes.js.map
