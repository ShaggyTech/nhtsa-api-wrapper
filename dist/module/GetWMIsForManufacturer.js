import{F as r,_ as e,g as t}from"./Fetch-d0e51133.js";class n extends r{constructor(r){super(r)}GetWMIsForManufacturer(r,n){return e(this,void 0,void 0,(function*(){const e="GetWMIsForManufacturer",o=t(n);if(n&&"object"!==o)return Promise.reject(new Error(`${e}, "params" argument must be of type object, got: <${o}> ${n}`));const i=t(r);if("string"!==i&&"number"!==i)return Promise.reject(new Error(`${e}, "manufacturer" argument is required and must be of type string or number, got: <${i}> ${r}`));const s=t(null==n?void 0:n.vehicleType);if((null==n?void 0:n.vehicleType)&&"string"!==s&&"number"!==s)return Promise.reject(new Error(`${e}, "vehicleType" argument must be of type string or number, got: <${s}> ${n.vehicleType}`));const u=yield this.buildQueryString(n).catch((r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`)))),c=`${this.baseUrl}/${e}/${r}${u}`;return yield this.get(c).then((r=>r)).catch((r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`))))}))}}export{n as GetWMIsForManufacturer};
//# sourceMappingURL=GetWMIsForManufacturer.js.map
