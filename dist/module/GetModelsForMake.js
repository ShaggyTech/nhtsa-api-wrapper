import{F as e,_ as r,g as t}from"./Fetch-10b9b85c.js";class s extends e{constructor(e){super(e)}GetModelsForMake(e){return r(this,void 0,void 0,(function*(){const r="GetModelsForMake",s=t(e);if("string"!==s)return Promise.reject(new Error(`GetModelsForMake, "makeName" argument is required and must be of type string, got: <${s}> ${e}`));const o=yield this.buildQueryString().catch(e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`))),i=`${this.baseUrl}/${r}/${e}${o}`;return yield this.get(i).then(e=>e).catch(e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`)))}))}}export{s as GetModelsForMake};
