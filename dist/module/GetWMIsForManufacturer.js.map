{"version":3,"file":"GetWMIsForManufacturer.js","sources":["../../src/api/actions/GetWMIsForManufacturer.ts"],"sourcesContent":["/**\n * @module api/actions/GetWMIsForManufacturer\n * @category Actions\n * @description GetWMIsForManufacturer NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetWMIsForManufacturer](module-api_actions_GetWMIsForManufacturer.GetWMIsForManufacturer.html)\n * >\n * > **Types**\n * > - Type: [GetWMIsForManufacturerResponse](#GetWMIsForManufacturerResponse)\n * > - Type: [GetWMIsForManufacturerResults](#GetWMIsForManufacturerResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetWMIsForManufacturer extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * Provides information on the World Manufacturer Identifier (WMI) for a specified `manufacturer`.\n   * - Only WMIs registered in vPICList are displayed.\n   * - `manufacturer` can be a partial name, or a full name for more specificity, or WMI ID number\n   *   (e.g., \"Merc\", \"Mercedes Benz\", 987, etc.).\n   * - `vehicleType` can be a string or number (e.g., \"car\", 1)\n   *\n   * @async\n   * @param {string|number} manufacturer - Manufacturer Name.\n   * @param {object} [params={}] - Query Search Parameters to append to the URL.\n   * @param {string|number} [params.vehicleType] - Optional Vehicle Type search parameter.\n   * @returns {(Promise<GetWMIsForManufacturerResponse>)} Api Response object.\n   */\n  async GetWMIsForManufacturer(\n    manufacturer: string | number,\n    params?: {\n      vehicleType?: string | number;\n    }\n  ): Promise<GetWMIsForManufacturerResponse> {\n    const action = 'GetWMIsForManufacturer';\n\n    /* Runtime typechecking */\n    const typeofParams = getTypeof(params);\n    if (params && typeofParams !== 'object') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params\" argument must be of type object, got: ` +\n            `<${typeofParams}> ${params}`\n        )\n      );\n    }\n\n    const typeofManufacturer = getTypeof(manufacturer);\n    if (typeofManufacturer !== 'string' && typeofManufacturer !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"manufacturer\" argument is required and must be of type string or number, got: ` +\n            `<${typeofManufacturer}> ${manufacturer}`\n        )\n      );\n    }\n\n    const typeofVehicleType = getTypeof(params?.vehicleType);\n    if (\n      params?.vehicleType &&\n      typeofVehicleType !== 'string' &&\n      typeofVehicleType !== 'number'\n    ) {\n      return Promise.reject(\n        new Error(\n          `${action}, \"vehicleType\" argument must be of type string or number, got: ` +\n            `<${typeofVehicleType}> ${params.vehicleType}`\n        )\n      );\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString(params).catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${manufacturer}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetWMIsForManufacturerResponse}.Results' array.\n *\n * @memberof module:api/actions/GetWMIsForManufacturer\n * @alias GetWMIsForManufacturerResults\n */\nexport type GetWMIsForManufacturerResults = {\n  Country: string;\n  CreatedOn: string;\n  DateAvailableToPublic: string;\n  Id: number;\n  Name: string;\n  UpdatedOn: string;\n  VehicleType: string;\n  WMI: string;\n};\n\n/**\n * Type representing the complete response returned by the GetWMIsForManufacturer API Action.\n *\n * @memberof module:api/actions/GetWMIsForManufacturer\n * @alias GetWMIsForManufacturerResponse\n */\nexport type GetWMIsForManufacturerResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetWMIsForManufacturerResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["GetWMIsForManufacturer","Fetch","constructor","userConfig","super","manufacturer","params","action","typeofParams","getTypeof","Promise","reject","Error","typeofManufacturer","typeofVehicleType","vehicleType","queryString","this","buildQueryString","catch","err","url","baseUrl","get","then","response"],"mappings":"4DAgCaA,UAA+BC,EAC1CC,YAAYC,GACVC,MAAMD,GAgBFH,uBACJK,EACAC,4CAIA,MAAMC,EAAS,yBAGTC,EAAeC,EAAUH,GAC/B,GAAIA,GAA2B,WAAjBE,EACZ,OAAOE,QAAQC,OACb,IAAIC,MACF,GAAGL,sDACGC,MAAiBF,MAK7B,MAAMO,EAAqBJ,EAAUJ,GACrC,GAA2B,WAAvBQ,GAA0D,WAAvBA,EACrC,OAAOH,QAAQC,OACb,IAAIC,MACF,GAAGL,sFACGM,MAAuBR,MAKnC,MAAMS,EAAoBL,EAAUH,MAAAA,SAAAA,EAAQS,aAC5C,IACET,MAAAA,SAAAA,EAAQS,cACc,WAAtBD,GACsB,WAAtBA,EAEA,OAAOJ,QAAQC,OACb,IAAIC,MACF,GAAGL,qEACGO,MAAsBR,EAAOS,gBAMzC,MAAMC,QAAoBC,KAAKC,iBAAiBZ,GAAQa,OAAOC,GAC7DV,QAAQC,OACN,IAAIC,MAAM,GAAGL,mCAAwCa,QAKnDC,EAAM,GAAGJ,KAAKK,WAAWf,KAAUF,IAAeW,IAGxD,aAAaC,KAAKM,IAAIF,GACnBG,MAAMC,GAAaA,IACnBN,OAAOC,GACNV,QAAQC,OAAO,IAAIC,MAAM,GAAGL,yBAA8Ba"}