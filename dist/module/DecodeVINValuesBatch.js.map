{"version":3,"file":"DecodeVINValuesBatch.js","sources":["../../src/api/actions/DecodeVINValuesBatch.ts"],"sourcesContent":["/**\n * @module api/actions/DecodeVINValuesBatch\n * @category Actions\n * @description DecodeVINValuesBatch NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [DecodeVINValuesBatch](module-api_actions_DecodeVINValuesBatch.DecodeVINValuesBatch.html)\n * >\n * > **Types**\n * > - Type: [DecodeVINValuesBatchResponse](#DecodeVINValuesBatchResponse)\n * > - Type: [DecodeVINValuesBatchResults](#DecodeVINValuesBatchResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class DecodeVINValuesBatch extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This decodes a batch of VINs that are submitted in a standardized format in a string\n   * and returns multiple decodes in a flat format.\n   *\n   * The `inputString` parameter should be in the following format:\n   * - `vin , modelYear ; vin , modelYear ; vin , modelYear ...`\n   *\n   * \"modelYear\" is optional, the output for each VIN decode is in the same format as produced by the \"Decode VIN (flat format)\" method.\n   *\n   * @async\n   * @param {string} inputString - A string of Vehicle Identification Numbers (full or partial) following the format listed in the description.\n   * @returns {(Promise<DecodeVINValuesBatchResponse>)} - Api Response object.\n   */\n  async DecodeVINValuesBatch(\n    inputString: string\n  ): Promise<DecodeVINValuesBatchResponse> {\n    const action = 'DecodeVINValuesBatch';\n\n    /* Runtime typechecking */\n    const typeofInputString = getTypeof(inputString);\n    if (typeofInputString !== 'string') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"inputString\" argument is required and must be of type string, got: ` +\n            `<${typeofInputString}> ${inputString}`\n        )\n      );\n    }\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/`;\n\n    const body = encodeURI(`DATA=${inputString}&format=json`);\n\n    /* Return the result */\n    return await this.get(url, {\n      method: 'POST',\n      headers: { 'content-type': 'application/x-www-form-urlencoded' },\n      body,\n    })\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link DecodeVINValuesBatchResponse}.Results' array.\n *\n * @memberof module:api/actions/DecodeVINValuesBatch\n * @alias DecodeVINValuesBatchResults\n */\nexport type DecodeVINValuesBatchResults = {\n  ABS: string;\n  ActiveSafetySysNote: string;\n  AdaptiveCruiseControl: string;\n  AdaptiveDrivingBeam: string;\n  AdaptiveHeadlights: string;\n  AdditionalErrorText: string;\n  AirBagLocCurtain: string;\n  AirBagLocFront: string;\n  AirBagLocKnee: string;\n  AirBagLocSeatCushion: string;\n  AirBagLocSide: string;\n  AutoReverseSystem: string;\n  AutomaticPedestrianAlertingSound: string;\n  AxleConfiguration: string;\n  Axles: string;\n  BasePrice: string;\n  BatteryA: string;\n  BatteryA_to: string;\n  BatteryCells: string;\n  BatteryInfo: string;\n  BatteryKWh: string;\n  BatteryKWh_to: string;\n  BatteryModules: string;\n  BatteryPacks: string;\n  BatteryType: string;\n  BatteryV: string;\n  BatteryV_to: string;\n  BedLengthIN: string;\n  BedType: string;\n  BlindSpotMon: string;\n  BodyCabType: string;\n  BodyClass: string;\n  BrakeSystemDesc: string;\n  BrakeSystemType: string;\n  BusFloorConfigType: string;\n  BusLength: string;\n  BusType: string;\n  CAN_AACN: string;\n  CIB: string;\n  CashForClunkers: string;\n  ChargerLevel: string;\n  ChargerPowerKW: string;\n  CoolingType: string;\n  CurbWeightLB: string;\n  CustomMotorcycleType: string;\n  DaytimeRunningLight: string;\n  DestinationMarket: string;\n  DisplacementCC: string;\n  DisplacementCI: string;\n  DisplacementL: string;\n  Doors: string;\n  DriveType: string;\n  DriverAssist: string;\n  DynamicBrakeSupport: string;\n  EDR: string;\n  ESC: string;\n  EVDriveUnit: string;\n  ElectrificationLevel: string;\n  EngineConfiguration: string;\n  EngineCycles: string;\n  EngineCylinders: string;\n  EngineHP: string;\n  EngineHP_to: string;\n  EngineKW: string;\n  EngineManufacturer: string;\n  EngineModel: string;\n  EntertainmentSystem: string;\n  ErrorCode: string;\n  ErrorText: string;\n  ForwardCollisionWarning: string;\n  FuelInjectionType: string;\n  FuelTypePrimary: string;\n  FuelTypeSecondary: string;\n  GCWR: string;\n  GCWR_to: string;\n  GVWR: string;\n  GVWR_to: string;\n  KeylessIgnition: string;\n  LaneDepartureWarning: string;\n  LaneKeepSystem: string;\n  LowerBeamHeadlampLightSource: string;\n  Make: string;\n  Manufacturer: string;\n  ManufacturerId: string;\n  Model: string;\n  ModelYear: string;\n  MotorcycleChassisType: string;\n  MotorcycleSuspensionType: string;\n  NCSABodyType: string;\n  NCSAMake: string;\n  NCSAMapExcApprovedBy: string;\n  NCSAMapExcApprovedOn: string;\n  NCSAMappingException: string;\n  NCSAModel: string;\n  NCSANote: string;\n  Note: string;\n  OtherBusInfo: string;\n  OtherEngineInfo: string;\n  OtherMotorcycleInfo: string;\n  OtherRestraintSystemInfo: string;\n  OtherTrailerInfo: string;\n  ParkAssist: string;\n  PedestrianAutomaticEmergencyBraking: string;\n  PlantCity: string;\n  PlantCompanyName: string;\n  PlantCountry: string;\n  PlantState: string;\n  PossibleValues: string;\n  Pretensioner: string;\n  RearCrossTrafficAlert: string;\n  RearVisibilitySystem: string;\n  SAEAutomationLevel: string;\n  SAEAutomationLevel_to: string;\n  SeatBeltsAll: string;\n  SeatRows: string;\n  Seats: string;\n  SemiautomaticHeadlampBeamSwitching: string;\n  Series: string;\n  Series2: string;\n  SteeringLocation: string;\n  SuggestedVIN: string;\n  TPMS: string;\n  TopSpeedMPH: string;\n  TrackWidth: string;\n  TractionControl: string;\n  TrailerBodyType: string;\n  TrailerLength: string;\n  TrailerType: string;\n  TransmissionSpeeds: string;\n  TransmissionStyle: string;\n  Trim: string;\n  Trim2: string;\n  Turbo: string;\n  VIN: string;\n  ValveTrainDesign: string;\n  VehicleType: string;\n  WheelBaseLong: string;\n  WheelBaseShort: string;\n  WheelBaseType: string;\n  WheelSizeFront: string;\n  WheelSizeRear: string;\n  Wheels: string;\n  Windows: string;\n};\n\n/**\n * Type representing the complete response returned by the DecodeVINValuesBatch API Action.\n *\n * @memberof module:api/actions/DecodeVINValuesBatch\n * @alias DecodeVINValuesBatchResponse\n */\nexport type DecodeVINValuesBatchResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<DecodeVINValuesBatchResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["DecodeVINValuesBatch","Fetch","constructor","userConfig","super","inputString","action","typeofInputString","getTypeof","Promise","reject","Error","url","this","baseUrl","body","encodeURI","get","method","headers","then","response","catch","err"],"mappings":"4DAgCaA,UAA6BC,EACxCC,YAAYC,GACVC,MAAMD,GAgBFH,qBACJK,4CAEA,MAAMC,EAAS,uBAGTC,EAAoBC,EAAUH,GACpC,GAA0B,WAAtBE,EACF,OAAOE,QAAQC,OACb,IAAIC,MACF,GAAGL,2EACGC,MAAsBF,MAMlC,MAAMO,EAAM,GAAGC,KAAKC,WAAWR,KAEzBS,EAAOC,UAAU,QAAQX,iBAG/B,aAAaQ,KAAKI,IAAIL,EAAK,CACzBM,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BJ,KAAAA,IAECK,MAAMC,GAAaA,IACnBC,OAAOC,GACNd,QAAQC,OAAO,IAAIC,MAAM,GAAGL,yBAA8BiB"}