import{_ as r}from"./tslib.es6-e8a9b979.js";import{F as e,g as t}from"./Fetch-980165d1.js";class o extends e{constructor(r){super(r)}DecodeVinValues(e,o){var i,s;return r(this,void 0,void 0,(function*(){const r="DecodeVinValues",n=t(o);if(o&&"object"!==n)return Promise.reject(new Error(`${r}, "params" argument must be of type object, got: `+`<${n}> ${o}`));const u=t(e);if("string"!==u)return Promise.reject(new Error(`${r}, "vin" argument is required and must be of type string, got: `+`<${u}> ${e}`));const a=t(null===(i=o)||void 0===i?void 0:i.modelYear);if((null===(s=o)||void 0===s?void 0:s.modelYear)&&"string"!==a&&"number"!==a)return Promise.reject(new Error(`${r}, "params.modelYear" argument is required and must be of type string or number, got: `+`<${a}> ${o.modelYear}`));const c=yield this.buildQueryString(o).catch(e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`))),m=`${this.baseUrl}/${r}/${e}${c}`;return yield this.get(m).then(r=>r).catch(e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`)))}))}}export{o as DecodeVinValues};
//# sourceMappingURL=DecodeVinValues.js.map
