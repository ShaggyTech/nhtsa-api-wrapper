{"version":3,"file":"DecodeVinExtended.js","sources":["../../src/api/actions/DecodeVinExtended.ts"],"sourcesContent":["/**\r\n * @module api/actions/DecodeVinExtended\r\n * @category Actions\r\n * @description DecodeVinExtended NHSTA Api Action.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [DecodeVinExtended](module-api_actions_DecodeVinExtended.DecodeVinExtended.html)\r\n * >\r\n * > **Types**\r\n * > - Type: [DecodeVinExtendedResponse](#DecodeVinExtendedResponse)\r\n * > - Type: [DecodeVinExtendedResults](#DecodeVinExtendedResults)\r\n *\r\n */\r\n\r\n/* Parent Class and Fetch Types */\r\nimport {\r\n  Fetch /* Class */,\r\n  FetchConfig /* Type */,\r\n  FetchResponse /* Type */\r\n} from '../Fetch';\r\n\r\n/* Utility Functions */\r\nimport { getTypeof } from '../../utils';\r\n\r\n/**\r\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\r\n *\r\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\r\n *\r\n * @category Actions\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n */\r\nexport class DecodeVinExtended extends Fetch {\r\n  constructor(userConfig?: FetchConfig) {\r\n    super(userConfig);\r\n  }\r\n\r\n  /**\r\n   * This is exactly like the DecodeVin method but provides additional information on variables\r\n   * related to other NHTSA programs like\r\n   * [NCSA](https://www.nhtsa.gov/research-data/national-center-statistics-and-analysis-ncsa), etc.\r\n   * - This will decode the VIN and the decoded output will be made available\r\n   *   in the format of Key-value pairs.\r\n   * - In the returned 'Results` object:\r\n   *   - The IDs (VariableID and ValueID) represent the unique ID associated with the Variable/Value.\r\n   *   - In case of text variables, the ValueID is not applicable.\r\n   * - Providing `params.modelYear` allows for the decoding to specifically be done in the current,\r\n   *   or older (pre-1980), model year ranges.\r\n   *   - It is recommended to always provide `params.modelYear` if the model year is known at the time of decoding.\r\n   * - This Action also supports partial VIN decoding (VINs that are less than 17 characters).\r\n   *   - In this case, the VIN will be decoded partially with the available characters.\r\n   *   - In case of partial VINs, a \"*\" could be used to indicate the unavailable characters.\r\n   *   - The 9th digit is not necessary.\r\n   *\r\n   * @async\r\n   * @param {string} vin - Vehicle Identification Number (full or partial).\r\n   * @param {object} [params={}] - Query Search Parameters to append to the URL.\r\n   * @param {string|number} [params.modelYear] - Optional Model Year search parameter.\r\n   * @returns {(Promise<DecodeVinExtendedResponse | Error>)} - Api Response object.\r\n   */\r\n  async DecodeVinExtended(\r\n    vin: string,\r\n    params?: {\r\n      modelYear?: string | number;\r\n    }\r\n  ): Promise<DecodeVinExtendedResponse | Error> {\r\n    const action = 'DecodeVinExtended';\r\n\r\n    /* Runtime typechecking */\r\n    const typeofParams = getTypeof(params);\r\n    if (params && typeofParams !== 'object') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"params\" argument must be of type object, got: ` +\r\n            `<${typeofParams}> ${params}`\r\n        )\r\n      );\r\n    }\r\n\r\n    const typeofVin = getTypeof(vin);\r\n    if (typeofVin !== 'string') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"vin\" argument is required and must be of type string, got: ` +\r\n            `<${typeofVin}> ${vin}`\r\n        )\r\n      );\r\n    }\r\n\r\n    const typeofModelYear = getTypeof(params?.modelYear);\r\n    if (params?.modelYear && typeofModelYear !== 'number') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"params.modelYear\" argument is required and must be of type string or number, got: ` +\r\n            `<${typeofModelYear}> ${params.modelYear}`\r\n        )\r\n      );\r\n    }\r\n\r\n    /* Build the query string to be appended to the URL*/\r\n    const queryString = await this.buildQueryString(params).catch(err =>\r\n      Promise.reject(\r\n        new Error(`${action}, Error building query string: ${err}`)\r\n      )\r\n    );\r\n\r\n    /* Build the final request URL*/\r\n    const url = `${this.baseUrl}/${action}/${vin}${queryString}`;\r\n\r\n    /* Return the result */\r\n    return await this.get(url)\r\n      .then(response => response)\r\n      .catch(err =>\r\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\r\n      );\r\n  }\r\n}\r\n\r\n/**\r\n * Type representing the structure of objects found in the '{@link DecodeVinExtendedResponse}.Results' array.\r\n *\r\n * @memberof module:api/actions/DecodeVinExtended\r\n * @alias DecodeVinExtendedResults\r\n */\r\nexport type DecodeVinExtendedResults = {\r\n  Value: string | null;\r\n  ValueId: string | null;\r\n  Variable: string;\r\n  VariableId: number;\r\n};\r\n\r\n/**\r\n * Type representing the complete response returned by the DecodeVinExtended API Action.\r\n *\r\n * @memberof module:api/actions/DecodeVinExtended\r\n * @alias DecodeVinExtendedResponse\r\n */\r\nexport type DecodeVinExtendedResponse = {\r\n  /** A count of the items returned in the Results array. */\r\n  Count: number;\r\n  /** A message describing the Results array. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** The search results returned by the NHSTA API request. */\r\n  Results: Array<DecodeVinExtendedResults>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,iBAAkB,SAAQA,WAAK;IAC1C,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;;;;;;;;;;;;;;IAyBK,iBAAiB,CACrB,GAAW,EACX,MAEC;;YAED,MAAM,MAAM,GAAG,mBAAmB,CAAC;;YAGnC,MAAM,YAAY,GAAGC,eAAS,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,MAAM,IAAI,YAAY,KAAK,QAAQ,EAAE;gBACvC,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,mDAAmD;oBAC1D,IAAI,YAAY,KAAK,MAAM,EAAE,CAChC,CACF,CAAC;aACH;YAED,MAAM,SAAS,GAAGA,eAAS,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,SAAS,KAAK,QAAQ,EAAE;gBAC1B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,gEAAgE;oBACvE,IAAI,SAAS,KAAK,GAAG,EAAE,CAC1B,CACF,CAAC;aACH;YAED,MAAM,eAAe,GAAGA,eAAS,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,CAAC,CAAC;YACrD,IAAI,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,KAAI,eAAe,KAAK,QAAQ,EAAE;gBACrD,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,uFAAuF;oBAC9F,IAAI,eAAe,KAAK,MAAM,CAAC,SAAS,EAAE,CAC7C,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,IAC/D,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,GAAG,GAAG,WAAW,EAAE,CAAC;;YAG7D,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;iBAC1B,KAAK,CAAC,GAAG,IACR,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}