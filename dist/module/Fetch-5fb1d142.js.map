{"version":3,"file":"Fetch-5fb1d142.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/utils/getTypeof.ts","../../src/api/Fetch.ts","../../src/utils/makeQueryString.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","var __self__ = (function (root) {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = root.DOMException\n}\nF.prototype = root;\nreturn new F();\n})(typeof self !== 'undefined' ? self : this);\n(function(self) {\n\nvar irrelevant = (function (exports) {\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  return exports;\n\n}({}));\n})(__self__);\ndelete __self__.fetch.polyfill\nexports = __self__.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = __self__.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = __self__.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = __self__.Headers\nexports.Request = __self__.Request\nexports.Response = __self__.Response\nmodule.exports = exports\n","/**\n * @module utils/getTypeof\n * @category Utils\n */\n\n/**\n * Gets type of `value` using `Object.prototype.toString.call(value)`.\n *\n * @param {any} value - Any kind of value (string, object, array, function, etc).\n *\n * @returns {string} - Type of value, normalized to a lowercase string.\n */\nexport function getTypeof(value: any): string {\n  const toString: string = Object.prototype.toString\n    .call(value)\n    .toLowerCase(); /* ex: => '[object string]' or '[object array], etc. */\n  return toString.slice(8, toString.length - 1);\n}\n","/**\n * @module api/Fetch\n * @category API\n * @description API Fetch Logic.\n *\n * > **Module Exports**:\n * > - Class: [Fetch](module-api_Fetch.Fetch.html)\n * > - Constant: [BASE_URL](#~BASE_URL)\n * > - Constant: [DEFAULT_CONFIG](#~DEFAULT_CONFIG)\n * >\n * > **Types**\n * > - Type: [ApiResponse](#ApiResponse)\n * > - Type: [FetchConfig](#FetchConfig)\n * > - Type: [FetchRequestOptions](#FetchRequestOptions)\n * > - Type: [FetchRequestBodyTypes](https://github.github.io/fetch/#request-body)\n * > - Type: [FetchResponse](#FetchResponse)\n * > - Type: [NhtsaResponse](#NhtsaResponse)\n */\n\n/* Module Dependencies */\nimport fetch from 'cross-fetch';\n/* Utilities */\nimport { getTypeof, makeQueryString } from '../utils';\n/* Types */\nimport { QueryStringParameters } from '../utils/types';\n\n/*****************\n * CONSTANTS\n ****************/\n\n/**\n * @constant {string} BASE_URL Default Fetch base URL string\n * @default 'https://vpic.nhtsa.dot.gov/api/vehicles'\n */\nexport const BASE_URL = 'https://vpic.nhtsa.dot.gov/api/vehicles';\n\n/**\n * @constant {module:api/Fetch.FetchConfig} DEFAULT_CONFIG Default Fetch configuration options\n * @property {string} apiResponseFormat=json\n * @property {string} baseUrl=BASE_URL Default: [BASE_URL](module-api_Fetch.html#~BASE_URL)\n * @property {FetchRequestOptions} options={method:\"GET\"}\n */\nexport const DEFAULT_CONFIG: FetchConfig = {\n  apiResponseFormat: 'json',\n  baseUrl: BASE_URL,\n  options: {}\n};\n\n/*****************\n * Fetch Class\n ****************/\n\n/**\n * Class wrapper containing API wrapper HTTP Fetch logic.\n *\n * > **Static Methods**:\n * > - [buildQueryString](#buildQueryString)\n * > - [get](#get)\n *\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n * @category API\n */\nexport class Fetch {\n  apiResponseFormat: string;\n  baseUrl?: string;\n  options?: FetchRequestOptions;\n\n  constructor(userConfig?: FetchConfig) {\n    let finalConfig: FetchConfig;\n\n    /* userConfig takes precedence over DEFAULT_CONFIG */\n    if (userConfig && getTypeof(userConfig) === 'object') {\n      finalConfig = {\n        ...DEFAULT_CONFIG,\n        ...userConfig,\n        options: { ...DEFAULT_CONFIG.options, ...userConfig.options }\n      };\n    } else {\n      finalConfig = { ...DEFAULT_CONFIG };\n    }\n\n    /** @private */\n    this.apiResponseFormat = 'json';\n    /** @private */\n    this.baseUrl = finalConfig.baseUrl;\n    /** @private */\n    this.options = finalConfig.options;\n  }\n\n  /**\n   * Builds a query string from QueryStringParameters.\n   *\n   * @param {QueryStringParameters} params - Object containing Key:Value pairs to build the URL query string with.\n   * @param {boolean} [allowEmptyStringValues=false] - Set to `true` to add empty parameter values to the returned query string.\n   * - Given params of `{paramName: \"\"}` , setting this to true will use 'paramName=' in the final query string.\n   * - GetCanadianVehicleSpecifications is the only API Action that requires this functionality.\n   * @returns {(Promise<string | Error>)} A formatted NHSTA.dot.gov Vehicles API query string.\n   */\n  async buildQueryString(\n    params?: QueryStringParameters,\n    allowEmptyStringValues = false\n  ): Promise<string | Error> {\n    /*\n     * Make sure we're always using 'format=json' in the url Query parameters\n     * If the user provides a 'format' key in the params, during class instantiation we want to override it to 'json'\n     * This package may provide support for the other formats (CSV and XML) if requested.\n     */\n    if (!params || getTypeof(params) !== 'object') {\n      params = {\n        format: this.apiResponseFormat\n      };\n    } else {\n      params = { ...params, format: this.apiResponseFormat };\n    }\n\n    /* Return the completed query string */\n    return await makeQueryString(params, allowEmptyStringValues);\n  }\n\n  /**\n   * Uses the `cross-fetch` npm package to send HTTP requests and retrieve data from an API.\n   * - In browser environments, [whatwg-fetch](https://github.com/github/fetch/) window.fetch is used.\n   * - In node environments, [node-fetch](https://github.com/bitinn/node-fetch/) NPM package is used.\n   *\n   * @param {string} url - URL to fetch data from.\n   * @param {FetchRequestOptions} [options] - [Fetch options](https://github.github.io/fetch/#options).\n   * @returns {(Promise<module:api/Fetch.ApiResponse | Error>)} Response from the API.\n   */\n  async get(\n    url: string,\n    options: FetchRequestOptions = {}\n  ): Promise<ApiResponse | Error> {\n    /* Runtime typechecking */\n    const typeofUrl = getTypeof(url);\n    if (typeofUrl !== 'string') {\n      return Promise.reject(\n        new Error(\n          `Fetch.get(url) - url argument must be of type string, got: ${typeofUrl}`\n        )\n      );\n    }\n    const typeofOptions = getTypeof(options);\n    if (typeofOptions !== 'object') {\n      return Promise.reject(\n        new Error(\n          `Fetch.get(url, options) - options argument must be of type object, got: ${typeofOptions}`\n        )\n      );\n    }\n\n    /* Combine user provided 'options' and class property 'this.options', user options overwrite class options */\n    const combinedOptions = { ...this.options, ...options };\n\n    /* Use the cross-fetch package to perform an HTTP request */\n    const response: Response = await fetch(url, combinedOptions)\n      .then(result => {\n        if (!result?.status || result.status >= 400) {\n          throw new Error(\n            `Bad response from server, code: ${result?.status}, text: ${result?.statusText}, headers: ${result?.headers}`\n          );\n        } else return result;\n      })\n      .catch(err =>\n        Promise.reject(new Error(`Fetch.get() http error: ${err}`))\n      );\n\n    /* Convert the NHTSA API data to JSON */\n    const NhtsaResponse: NhtsaResponse = await response\n      .json()\n      .then((json: NhtsaResponse): NhtsaResponse => json);\n\n    /* Add the fetch response information to the returned NHSTA API data */\n    const finalResult: ApiResponse = {\n      ...NhtsaResponse,\n      FetchResponse: {\n        headers: response.headers,\n        ok: response.ok,\n        redirected: response.redirected,\n        status: response.status,\n        statusText: response.statusText,\n        url: response.url\n      }\n    };\n\n    /* Return the completed ApiResponse */\n    return Promise.resolve(finalResult);\n  }\n}\n\n/*****************\n * Types\n ****************/\n\n/**\n * Various fetch request body types.\n *\n * @typedef FetchRequestBodyTypes\n * @type {URLSearchParams | FormData | Blob | ArrayBuffer | DataView}\n *\n * @memberof module:api/Fetch\n */\nexport type FetchRequestBodyTypes =\n  | URLSearchParams\n  | FormData\n  | Blob\n  | ArrayBuffer\n  | DataView;\n\n/**\n * Options object provided as the 2nd argument to {@link module:api/Fetch.Fetch#get}.\n *\n * @memberof module:api/Fetch\n * @alias FetchRequestOptions\n */\nexport type FetchRequestOptions = {\n  /**HTTP request method - Default: \"GET\". */\n  method?: string;\n  /** HTTP request body - [FetchRequestBodyTypes](https://github.github.io/fetch/#request-body). */\n  body?: string | FetchRequestBodyTypes;\n  /** [Object, Headers](https://github.github.io/fetch/#Headers) - Default: {}. */\n  headers?: {} | Headers;\n  /**\n   * Default: \"omit\" - Authentication credentials mode.\n   * - \"omit\" - don't include authentication credentials (e.g. Cookies) in the request.\n   * - \"same-origin\" - include credentials in requests to the same site\n   * - \"include\" - include credentials in requests to all sites.\n   */\n  credentials?: 'omit' | 'same-origin' | 'include';\n};\n\n/**\n * Used when instantiating a Fetch class or related subclass.\n *\n * @memberof module:api/Fetch\n * @alias FetchConfig\n */\nexport type FetchConfig = {\n  /** Requested response format from the NHSTA API (hardcoded to 'json' for now). */\n  apiResponseFormat?: string;\n  /** Base of the URL to build fetch URLs from. */\n  baseUrl?: string;\n  /** Options object provided as the 2nd argument to {@link module:api/Fetch.Fetch#get}. */\n  options?: FetchRequestOptions;\n};\n\n/**\n * [Fetch API Response](https://github.github.io/fetch/#Response) properties.\n *\n * @memberof module:api/Fetch\n * @alias FetchResponse\n */\nexport type FetchResponse = {\n  /** The [Headers](https://developer.mozilla.org/en-US/docs/Web/API/Headers) object associated with the response. */\n  headers: Headers;\n  /** A boolean indicating whether the response was successful (status in the range 200–299) or not. */\n  ok: boolean;\n  /** Indicates whether or not the response is the result of a redirect (that is, its URL list has more than one entry). */\n  redirected: boolean;\n  /** The status code of the response. (This will be 200 for a success). */\n  status: number;\n  /** The status message corresponding to the status code. (e.g., OK for 200). */\n  statusText: string;\n  /** The URL of the response. */\n  url: string;\n};\n\n/**\n * Response data returned from the NHSTA API.\n *\n * @memberof module:api/Fetch\n * @alias NhtsaResponse\n */\nexport type NhtsaResponse = {\n  /** The number of items returned in the Results object. */\n  Count: number;\n  /** A message describing the Results. */\n  Message: string;\n  /** Search terms (VIN, WMI, etc) used in the request URL. */\n  SearchCriteria: string;\n  /** An array of Results returned by NHSTA, specific to each individual API Action. */\n  Results: Array<any>;\n};\n\n/**\n * Complete response returned by {@link module:api/Fetch.Fetch#get}.\n *\n * @see {@link module:api/Fetch.NhtsaResponse}\n * @see {@link module:api/Fetch.FetchResponse}\n * @memberof module:api/Fetch\n * @alias ApiResponse\n */\nexport type ApiResponse = {\n  /** The number of items returned in the Results object. */\n  Count: number;\n  /** A message describing the Results. */\n  Message: string;\n  /** Search terms (VIN, WMI, etc) used in the request URL. */\n  SearchCriteria: string;\n  /** An array of Results returned by NHSTA, specific to each individual API Action. */\n  Results: Array<any>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) Properties. */\n  FetchResponse: FetchResponse;\n};\n","import { getTypeof } from './getTypeof';\n\n/**\n * @module utils/makeQueryString\n * @category Utils\n */\n\n/**\n * Utility method to generate a query string compatible with the NHSTA API, for use in an API URL string.\n *\n * @async\n *\n * @param {object} params - Object of Type [QueryStringParameters](module-utils_makeQueryString.html#.QueryStringParameters).\n * @param {boolean} [allowEmptyStringValues=false] - Set to `true` to add empty parameter values to the returned query string.\n * - Given params of `{ paramName: \"\" }` , setting this to true will use 'paramName=' in the final query string.\n * - GetCanadianVehicleSpecifications is the only API Action that requires this functionality.\n *\n * @returns {Promise<string>|Error} A query string of search parameters for use in a final Fetch.get URL.\n *\n * @example <caption>When loaded from the browser via html script tags</caption>\n * // <script type=\"text/javascript\" src=\"https://www.npmjs.com/package/@shaggytools/nhtsa-api-wrapper\"></script>\n * const qs = await NHTSA.makeQueryString({ modelYear: 2010 }).catch(error => error)\n * console.log(qs) // \"?modelYear=2010\"\n *\n * @example <caption>When loaded as a module</caption>\n * import { makeQueryString } from '@shaggytools/nhtsa-api-wrapper'\n * const qs = await makeQueryString({ modelYear: 2010 }).catch(error => error)\n * console.log(qs) // \"?modelYear=2010\"\n *\n * @example <caption>Single Param:</caption>\n * const qs = await makeQueryString({\n *   modelYear: 2019\n * }).catch(error => error)\n * console.log(qs) // \"?modelYear=2019\"\n *\n * @example <caption>Multiple Params:</caption>\n * const qs = await makeQueryString({\n *   whatever: 'some value',\n *   modelYear: 2006,\n *   page: \"2\"\n * }).catch(error => error)\n *\n * console.log(qs) // \"?whatever=some%20value&modelYear=2006&page=2\"\n *\n * @example <caption>Empty Params Object:</caption>\n * const qs = await makeQueryString({}).catch(error => error)\n *\n * console.log(qs) // \"\"\n *\n * @example <caption>Using allowEmptyStringValues option:</caption>\n * const qs = await makeQueryString({\n *   year: 2016,\n *   vehicleType: '',\n *   make: 'Audi'\n * }, true).catch(error => error)\n *\n * console.log(qs) // \"?year=2016&vehicleType=&make=Audi\"\n *\n */\nexport function makeQueryString(\n  params: QueryStringParameters = {},\n  allowEmptyStringValues = false\n): Promise<string | Error> {\n  /* Beginning of error message string */\n  const errorBase =\n    'queryString(params) - expected params in the form of an object, got:';\n\n  /* Runtime type guard params argument, must be of type object */\n  if (getTypeof(params) !== 'object') {\n    return Promise.reject(new Error(`${errorBase} ${params}`));\n  }\n\n  /* Setup QueryString for Array mapping */\n  const entries = Object.entries(params);\n  const paramsLength = entries.length;\n\n  /* Return an empty string if params are an empty object */\n  if (paramsLength < 1) return Promise.resolve('');\n\n  /* Used to check if we've already prepended a valid query param */\n  let isPrepended = false;\n\n  /* Map [key]:value entries to \"key=value\" strings in an array */\n  const queryStringArray = entries.map(([key, value], index) => {\n    let prepend = '';\n    let append = '';\n\n    const typeofValue = getTypeof(value);\n\n    /* Convert any number values to a string */\n    if (value && typeofValue === 'number') {\n      value = value.toString();\n    }\n\n    /* Skip any invalid values, only string and number value types are valid */\n    if (\n      (value || allowEmptyStringValues) &&\n      (typeofValue === 'string' || typeofValue === 'number')\n    ) {\n      /* if this is the first param we need to prepend the '?' char */\n      if (!isPrepended) {\n        prepend = '?';\n        isPrepended = true;\n      }\n      /* if there is another param coming after this one we need to append the '&' char */\n      if (index < paramsLength - 1) {\n        append = '&';\n      }\n\n      /* Add the completed partial query string to queryStringArray */\n      return `${prepend}${key}=${value}${append}`;\n    }\n    return;\n  });\n\n  /* Join and return the completed query string after URI encoding */\n  return Promise.resolve(encodeURI(queryStringArray.join('')));\n}\n\n/**\n * Object containing Key:Value pairs to build the URL query string with.\n * - Parameter values may be either strings or numbers.\n *\n * @memberof module:utils/makeQueryString\n * @alias QueryStringParameters\n * @example\n * {\n * modelYear: 2009,\n * whatever: 'something'\n * }\n *\n */\nexport type QueryStringParameters = {\n  [propName: string]: string | number | undefined;\n};\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__self__","root","F","this","fetch","DOMException","prototype","self","exports","support","Symbol","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","shift","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","Error","arrayBuffer","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","module","getTypeof","DEFAULT_CONFIG","apiResponseFormat","baseUrl","Fetch","[object Object]","userConfig","finalConfig","params","allowEmptyStringValues","format","paramsLength","isPrepended","queryStringArray","index","prepend","typeofValue","encodeURI","makeQueryString","typeofUrl","typeofOptions","combinedOptions","catch","NhtsaResponse","finalResult","FetchResponse","redirected"],"mappings":";;;;;;;;;;;;;;AAmEO,SAASA,EAAUC,EAASC,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAAUA,EAAOC,KAAOT,EAAQQ,EAAOL,OAAS,IAAIN,GAAE,SAAUG,GAAWA,EAAQQ,EAAOL,UAAWO,KAAKR,EAAWK,GACnIH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,iPCxEtE,IAAIO,EAAW,SAAWC,GAC1B,SAASC,IACTC,KAAKC,OAAQ,EACbD,KAAKE,aAAeJ,EAAKI,aAGzB,OADAH,EAAEI,UAAYL,EACP,IAAIC,EANI,CAOI,oBAATK,KAAuBA,KAAOJ,IACxC,SAAUI,IAEQ,SAAUC,GAC1B,IAAIC,EACY,oBAAqBF,EADjCE,EAEQ,WAAYF,GAAQ,aAAcG,OAF1CD,EAIA,eAAgBF,GAChB,SAAUA,GACV,WACE,IAEE,OADA,IAAII,MACG,EACP,MAAOjB,GACP,OAAO,GALX,GANAe,EAcQ,aAAcF,EAdtBE,EAeW,gBAAiBF,EAOhC,GAAIE,EACF,IAAIG,EAAc,CAChB,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEC,EACFC,YAAYC,QACZ,SAASC,GACP,OAAOA,GAAOJ,EAAYK,QAAQC,OAAOZ,UAAUa,SAASC,KAAKJ,KAAS,GAIhF,SAASK,EAAcC,GAIrB,GAHoB,iBAATA,IACTA,EAAOC,OAAOD,IAEZ,4BAA4BE,KAAKF,GACnC,MAAM,IAAIG,UAAU,0CAEtB,OAAOH,EAAKI,cAGd,SAASC,EAAepC,GAItB,MAHqB,iBAAVA,IACTA,EAAQgC,OAAOhC,IAEVA,EAIT,SAASqC,EAAYC,GACnB,IAAIC,EAAW,CACbrC,KAAM,WACJ,IAAIF,EAAQsC,EAAME,QAClB,MAAO,CAAClC,UAAgBmC,IAAVzC,EAAqBA,MAAOA,KAU9C,OANIkB,IACFqB,EAASpB,OAAOoB,UAAY,WAC1B,OAAOA,IAIJA,EAGT,SAASG,EAAQC,GACf/B,KAAKgC,IAAM,GAEPD,aAAmBD,EACrBC,EAAQE,SAAQ,SAAS7C,EAAO+B,GAC9BnB,KAAKkC,OAAOf,EAAM/B,KACjBY,MACMmC,MAAMC,QAAQL,GACvBA,EAAQE,SAAQ,SAASI,GACvBrC,KAAKkC,OAAOG,EAAO,GAAIA,EAAO,MAC7BrC,MACM+B,GACThB,OAAOuB,oBAAoBP,GAASE,SAAQ,SAASd,GACnDnB,KAAKkC,OAAOf,EAAMY,EAAQZ,MACzBnB,MAgEP,SAASuC,EAASC,GAChB,GAAIA,EAAKC,SACP,OAAOzD,QAAQE,OAAO,IAAIoC,UAAU,iBAEtCkB,EAAKC,UAAW,EAGlB,SAASC,EAAgBC,GACvB,OAAO,IAAI3D,SAAQ,SAASC,EAASC,GACnCyD,EAAOC,OAAS,WACd3D,EAAQ0D,EAAOlD,SAEjBkD,EAAOE,QAAU,WACf3D,EAAOyD,EAAOG,WAKpB,SAASC,EAAsBC,GAC7B,IAAIL,EAAS,IAAIM,WACbC,EAAUR,EAAgBC,GAE9B,OADAA,EAAOQ,kBAAkBH,GAClBE,EAoBT,SAASE,EAAYC,GACnB,GAAIA,EAAIC,MACN,OAAOD,EAAIC,MAAM,GAEjB,IAAIC,EAAO,IAAIC,WAAWH,EAAII,YAE9B,OADAF,EAAKG,IAAI,IAAIF,WAAWH,IACjBE,EAAKI,OAIhB,SAASC,IA0FP,OAzFA5D,KAAKyC,UAAW,EAEhBzC,KAAK6D,UAAY,SAASrB,GAhM5B,IAAoB3B,EAiMhBb,KAAK8D,UAAYtB,EACZA,EAEsB,iBAATA,EAChBxC,KAAK+D,UAAYvB,EACRlC,GAAgBE,KAAKL,UAAU6D,cAAcxB,GACtDxC,KAAKiE,UAAYzB,EACRlC,GAAoB4D,SAAS/D,UAAU6D,cAAcxB,GAC9DxC,KAAKmE,cAAgB3B,EACZlC,GAAwB8D,gBAAgBjE,UAAU6D,cAAcxB,GACzExC,KAAK+D,UAAYvB,EAAKxB,WACbV,GAAuBA,KA5MlBO,EA4M6C2B,IA3MjD6B,SAASlE,UAAU6D,cAAcnD,KA4M3Cb,KAAKsE,iBAAmBlB,EAAYZ,EAAKmB,QAEzC3D,KAAK8D,UAAY,IAAItD,KAAK,CAACR,KAAKsE,oBACvBhE,IAAwBK,YAAYR,UAAU6D,cAAcxB,IAAS9B,EAAkB8B,IAChGxC,KAAKsE,iBAAmBlB,EAAYZ,GAEpCxC,KAAK+D,UAAYvB,EAAOzB,OAAOZ,UAAUa,SAASC,KAAKuB,GAhBvDxC,KAAK+D,UAAY,GAmBd/D,KAAK+B,QAAQwC,IAAI,kBACA,iBAAT/B,EACTxC,KAAK+B,QAAQ2B,IAAI,eAAgB,4BACxB1D,KAAKiE,WAAajE,KAAKiE,UAAUO,KAC1CxE,KAAK+B,QAAQ2B,IAAI,eAAgB1D,KAAKiE,UAAUO,MACvClE,GAAwB8D,gBAAgBjE,UAAU6D,cAAcxB,IACzExC,KAAK+B,QAAQ2B,IAAI,eAAgB,qDAKnCpD,IACFN,KAAKgD,KAAO,WACV,IAAIxD,EAAW+C,EAASvC,MACxB,GAAIR,EACF,OAAOA,EAGT,GAAIQ,KAAKiE,UACP,OAAOjF,QAAQC,QAAQe,KAAKiE,WACvB,GAAIjE,KAAKsE,iBACd,OAAOtF,QAAQC,QAAQ,IAAIuB,KAAK,CAACR,KAAKsE,oBACjC,GAAItE,KAAKmE,cACd,MAAM,IAAIM,MAAM,wCAEhB,OAAOzF,QAAQC,QAAQ,IAAIuB,KAAK,CAACR,KAAK+D,cAI1C/D,KAAK0E,YAAc,WACjB,OAAI1E,KAAKsE,iBACA/B,EAASvC,OAAShB,QAAQC,QAAQe,KAAKsE,kBAEvCtE,KAAKgD,OAAOrD,KAAKoD,KAK9B/C,KAAK2E,KAAO,WACV,IA3FoB3B,EAClBL,EACAO,EAyFE1D,EAAW+C,EAASvC,MACxB,GAAIR,EACF,OAAOA,EAGT,GAAIQ,KAAKiE,UACP,OAjGkBjB,EAiGIhD,KAAKiE,UAhG3BtB,EAAS,IAAIM,WACbC,EAAUR,EAAgBC,GAC9BA,EAAOiC,WAAW5B,GACXE,EA8FE,GAAIlD,KAAKsE,iBACd,OAAOtF,QAAQC,QA5FrB,SAA+BoE,GAI7B,IAHA,IAAIE,EAAO,IAAIC,WAAWH,GACtBwB,EAAQ,IAAI1C,MAAMoB,EAAKuB,QAElBC,EAAI,EAAGA,EAAIxB,EAAKuB,OAAQC,IAC/BF,EAAME,GAAK3D,OAAO4D,aAAazB,EAAKwB,IAEtC,OAAOF,EAAMI,KAAK,IAqFSC,CAAsBlF,KAAKsE,mBAC7C,GAAItE,KAAKmE,cACd,MAAM,IAAIM,MAAM,wCAEhB,OAAOzF,QAAQC,QAAQe,KAAK+D,YAI5BzD,IACFN,KAAKmF,SAAW,WACd,OAAOnF,KAAK2E,OAAOhF,KAAKyF,KAI5BpF,KAAKqF,KAAO,WACV,OAAOrF,KAAK2E,OAAOhF,KAAK2F,KAAKC,QAGxBvF,KA1MT8B,EAAQ3B,UAAU+B,OAAS,SAASf,EAAM/B,GACxC+B,EAAOD,EAAcC,GACrB/B,EAAQoC,EAAepC,GACvB,IAAIoG,EAAWxF,KAAKgC,IAAIb,GACxBnB,KAAKgC,IAAIb,GAAQqE,EAAWA,EAAW,KAAOpG,EAAQA,GAGxD0C,EAAQ3B,UAAkB,OAAI,SAASgB,UAC9BnB,KAAKgC,IAAId,EAAcC,KAGhCW,EAAQ3B,UAAUoE,IAAM,SAASpD,GAE/B,OADAA,EAAOD,EAAcC,GACdnB,KAAKyF,IAAItE,GAAQnB,KAAKgC,IAAIb,GAAQ,MAG3CW,EAAQ3B,UAAUsF,IAAM,SAAStE,GAC/B,OAAOnB,KAAKgC,IAAI0D,eAAexE,EAAcC,KAG/CW,EAAQ3B,UAAUuD,IAAM,SAASvC,EAAM/B,GACrCY,KAAKgC,IAAId,EAAcC,IAASK,EAAepC,IAGjD0C,EAAQ3B,UAAU8B,QAAU,SAAS0D,EAAU/G,GAC7C,IAAK,IAAIuC,KAAQnB,KAAKgC,IAChBhC,KAAKgC,IAAI0D,eAAevE,IAC1BwE,EAAS1E,KAAKrC,EAASoB,KAAKgC,IAAIb,GAAOA,EAAMnB,OAKnD8B,EAAQ3B,UAAUyF,KAAO,WACvB,IAAIlE,EAAQ,GAIZ,OAHA1B,KAAKiC,SAAQ,SAAS7C,EAAO+B,GAC3BO,EAAMmE,KAAK1E,MAENM,EAAYC,IAGrBI,EAAQ3B,UAAU2F,OAAS,WACzB,IAAIpE,EAAQ,GAIZ,OAHA1B,KAAKiC,SAAQ,SAAS7C,GACpBsC,EAAMmE,KAAKzG,MAENqC,EAAYC,IAGrBI,EAAQ3B,UAAU4F,QAAU,WAC1B,IAAIrE,EAAQ,GAIZ,OAHA1B,KAAKiC,SAAQ,SAAS7C,EAAO+B,GAC3BO,EAAMmE,KAAK,CAAC1E,EAAM/B,OAEbqC,EAAYC,IAGjBpB,IACFwB,EAAQ3B,UAAUI,OAAOoB,UAAYG,EAAQ3B,UAAU4F,SAqJzD,IAAIC,EAAU,CAAC,SAAU,MAAO,OAAQ,UAAW,OAAQ,OAO3D,SAASC,EAAQC,EAAOC,GAEtB,IAPuBC,EACnBC,EAMA7D,GADJ2D,EAAUA,GAAW,IACF3D,KAEnB,GAAI0D,aAAiBD,EAAS,CAC5B,GAAIC,EAAMzD,SACR,MAAM,IAAInB,UAAU,gBAEtBtB,KAAKsG,IAAMJ,EAAMI,IACjBtG,KAAKuG,YAAcL,EAAMK,YACpBJ,EAAQpE,UACX/B,KAAK+B,QAAU,IAAID,EAAQoE,EAAMnE,UAEnC/B,KAAKoG,OAASF,EAAME,OACpBpG,KAAKwG,KAAON,EAAMM,KAClBxG,KAAKyG,OAASP,EAAMO,OACfjE,GAA2B,MAAnB0D,EAAMpC,YACjBtB,EAAO0D,EAAMpC,UACboC,EAAMzD,UAAW,QAGnBzC,KAAKsG,IAAMlF,OAAO8E,GAYpB,GATAlG,KAAKuG,YAAcJ,EAAQI,aAAevG,KAAKuG,aAAe,eAC1DJ,EAAQpE,SAAY/B,KAAK+B,UAC3B/B,KAAK+B,QAAU,IAAID,EAAQqE,EAAQpE,UAErC/B,KAAKoG,QAjCkBA,EAiCOD,EAAQC,QAAUpG,KAAKoG,QAAU,MAhC3DC,EAAUD,EAAOM,cACdV,EAAQlF,QAAQuF,IAAY,EAAIA,EAAUD,GAgCjDpG,KAAKwG,KAAOL,EAAQK,MAAQxG,KAAKwG,MAAQ,KACzCxG,KAAKyG,OAASN,EAAQM,QAAUzG,KAAKyG,OACrCzG,KAAK2G,SAAW,MAEK,QAAhB3G,KAAKoG,QAAoC,SAAhBpG,KAAKoG,SAAsB5D,EACvD,MAAM,IAAIlB,UAAU,6CAEtBtB,KAAK6D,UAAUrB,GAOjB,SAAS4C,EAAO5C,GACd,IAAIoE,EAAO,IAAI1C,SAYf,OAXA1B,EACGqE,OACAC,MAAM,KACN7E,SAAQ,SAAS8E,GAChB,GAAIA,EAAO,CACT,IAAID,EAAQC,EAAMD,MAAM,KACpB3F,EAAO2F,EAAMlF,QAAQoF,QAAQ,MAAO,KACpC5H,EAAQ0H,EAAM7B,KAAK,KAAK+B,QAAQ,MAAO,KAC3CJ,EAAK1E,OAAO+E,mBAAmB9F,GAAO8F,mBAAmB7H,QAGxDwH,EAqBT,SAASM,EAASC,EAAUhB,GACrBA,IACHA,EAAU,IAGZnG,KAAKwE,KAAO,UACZxE,KAAKoH,YAA4BvF,IAAnBsE,EAAQiB,OAAuB,IAAMjB,EAAQiB,OAC3DpH,KAAKqH,GAAKrH,KAAKoH,QAAU,KAAOpH,KAAKoH,OAAS,IAC9CpH,KAAKsH,WAAa,eAAgBnB,EAAUA,EAAQmB,WAAa,KACjEtH,KAAK+B,QAAU,IAAID,EAAQqE,EAAQpE,SACnC/B,KAAKsG,IAAMH,EAAQG,KAAO,GAC1BtG,KAAK6D,UAAUsD,GAjDjBlB,EAAQ9F,UAAUoH,MAAQ,WACxB,OAAO,IAAItB,EAAQjG,KAAM,CAACwC,KAAMxC,KAAK8D,aAmCvCF,EAAK3C,KAAKgF,EAAQ9F,WAgBlByD,EAAK3C,KAAKiG,EAAS/G,WAEnB+G,EAAS/G,UAAUoH,MAAQ,WACzB,OAAO,IAAIL,EAASlH,KAAK8D,UAAW,CAClCsD,OAAQpH,KAAKoH,OACbE,WAAYtH,KAAKsH,WACjBvF,QAAS,IAAID,EAAQ9B,KAAK+B,SAC1BuE,IAAKtG,KAAKsG,OAIdY,EAASpE,MAAQ,WACf,IAAI0E,EAAW,IAAIN,EAAS,KAAM,CAACE,OAAQ,EAAGE,WAAY,KAE1D,OADAE,EAAShD,KAAO,QACTgD,GAGT,IAAIC,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5CP,EAASQ,SAAW,SAASpB,EAAKc,GAChC,IAA0C,IAAtCK,EAAiB3G,QAAQsG,GAC3B,MAAM,IAAIO,WAAW,uBAGvB,OAAO,IAAIT,EAAS,KAAM,CAACE,OAAQA,EAAQrF,QAAS,CAAC6F,SAAUtB,MAGjEjG,EAAQH,aAAeE,EAAKF,aAC5B,IACE,IAAIG,EAAQH,aACZ,MAAO2H,GACPxH,EAAQH,aAAe,SAAS4H,EAAS3G,GACvCnB,KAAK8H,QAAUA,EACf9H,KAAKmB,KAAOA,EACZ,IAAI2B,EAAQ2B,MAAMqD,GAClB9H,KAAK+H,MAAQjF,EAAMiF,OAErB1H,EAAQH,aAAaC,UAAYY,OAAOiH,OAAOvD,MAAMtE,WACrDE,EAAQH,aAAaC,UAAU8H,YAAc5H,EAAQH,aAGvD,SAASD,EAAMiG,EAAOgC,GACpB,OAAO,IAAIlJ,SAAQ,SAASC,EAASC,GACnC,IAAIiJ,EAAU,IAAIlC,EAAQC,EAAOgC,GAEjC,GAAIC,EAAQ1B,QAAU0B,EAAQ1B,OAAO2B,QACnC,OAAOlJ,EAAO,IAAImB,EAAQH,aAAa,UAAW,eAGpD,IAAImI,EAAM,IAAIC,eAEd,SAASC,IACPF,EAAIG,QAGNH,EAAIzF,OAAS,WACX,IAxFgB6F,EAChB1G,EAuFIoE,EAAU,CACZiB,OAAQiB,EAAIjB,OACZE,WAAYe,EAAIf,WAChBvF,SA3Fc0G,EA2FQJ,EAAIK,yBAA2B,GA1FvD3G,EAAU,IAAID,EAGQ2G,EAAWzB,QAAQ,eAAgB,KACzCF,MAAM,SAAS7E,SAAQ,SAAS0G,GAClD,IAAIC,EAAQD,EAAK7B,MAAM,KACnB+B,EAAMD,EAAMhH,QAAQiF,OACxB,GAAIgC,EAAK,CACP,IAAIzJ,EAAQwJ,EAAM3D,KAAK,KAAK4B,OAC5B9E,EAAQG,OAAO2G,EAAKzJ,OAGjB2C,IAgFHoE,EAAQG,IAAM,gBAAiB+B,EAAMA,EAAIS,YAAc3C,EAAQpE,QAAQwC,IAAI,iBAC3E,IAAI/B,EAAO,aAAc6F,EAAMA,EAAIb,SAAWa,EAAIU,aAClD9J,EAAQ,IAAIiI,EAAS1E,EAAM2D,KAG7BkC,EAAIxF,QAAU,WACZ3D,EAAO,IAAIoC,UAAU,4BAGvB+G,EAAIW,UAAY,WACd9J,EAAO,IAAIoC,UAAU,4BAGvB+G,EAAIY,QAAU,WACZ/J,EAAO,IAAImB,EAAQH,aAAa,UAAW,gBAG7CmI,EAAIa,KAAKf,EAAQ/B,OAAQ+B,EAAQ7B,KAAK,GAEV,YAAxB6B,EAAQ5B,YACV8B,EAAIc,iBAAkB,EACW,SAAxBhB,EAAQ5B,cACjB8B,EAAIc,iBAAkB,GAGpB,iBAAkBd,GAAO/H,IAC3B+H,EAAIe,aAAe,QAGrBjB,EAAQpG,QAAQE,SAAQ,SAAS7C,EAAO+B,GACtCkH,EAAIgB,iBAAiBlI,EAAM/B,MAGzB+I,EAAQ1B,SACV0B,EAAQ1B,OAAO6C,iBAAiB,QAASf,GAEzCF,EAAIkB,mBAAqB,WAEA,IAAnBlB,EAAImB,YACNrB,EAAQ1B,OAAOgD,oBAAoB,QAASlB,KAKlDF,EAAIqB,UAAkC,IAAtBvB,EAAQrE,UAA4B,KAAOqE,EAAQrE,cAIvE7D,EAAM0J,UAAW,EAEZvJ,EAAKH,QACRG,EAAKH,MAAQA,EACbG,EAAK0B,QAAUA,EACf1B,EAAK6F,QAAUA,EACf7F,EAAK8G,SAAWA,GAGlB7G,EAAQyB,QAAUA,EAClBzB,EAAQ4F,QAAUA,EAClB5F,EAAQ6G,SAAWA,EACnB7G,EAAQJ,MAAQA,GAIhB,IA/gBF,CAghBGJ,UACIA,EAASI,MAAM0J,UACtBtJ,EAAUR,EAASI,eACDJ,EAASI,MAC3BI,QAAgBR,EAASI,MACzBI,UAAkBR,EAASiC,QAC3BzB,UAAkBR,EAASoG,QAC3B5F,WAAmBR,EAASqH,SAC5B0C,UAAiBvJ,qDCphBDwJ,EAAUzK,GACxB,MAAM4B,EAAmBD,OAAOZ,UAAUa,SACvCC,KAAK7B,GACLmC,cACH,OAAOP,EAASsC,MAAM,EAAGtC,EAAS8D,OAAS,GCkBtC,MAQMgF,EAA8B,CACzCC,kBAAmB,OACnBC,QAVsB,0CAWtB7D,QAAS,UAiBE8D,EAKXC,YAAYC,GACV,IAAIC,EAIFA,EADED,GAAwC,WAA1BN,EAAUM,gDAErBL,GACAK,IACHhE,uCAAc2D,EAAe3D,SAAYgE,EAAWhE,4BAGnC2D,GAIrB9J,KAAK+J,kBAAoB,OAEzB/J,KAAKgK,QAAUI,EAAYJ,QAE3BhK,KAAKmG,QAAUiE,EAAYjE,QAYvB+D,iBACJG,EACAC,GAAyB,4CAgBzB,OAJED,EALGA,GAAgC,WAAtBR,EAAUQ,kCAKTA,IAAQE,OAAQvK,KAAK+J,oBAJ1B,CACPQ,OAAQvK,KAAK+J,kCCjDnBM,EAAgC,GAChCC,GAAyB,GAOzB,GAA0B,WAAtBT,EAAUQ,GACZ,OAAOrL,QAAQE,OAAO,IAAIuF,MAAM,wEAAgB4F,MAIlD,MAAMtE,EAAUhF,OAAOgF,QAAQsE,GACzBG,EAAezE,EAAQjB,OAG7B,GAAI0F,EAAe,EAAG,OAAOxL,QAAQC,QAAQ,IAG7C,IAAIwL,GAAc,EAGlB,MAAMC,EAAmB3E,EAAQ/D,IAAI,EAAE6G,EAAKzJ,GAAQuL,KAClD,IAAIC,EAAU,GACV1I,EAAS,GAEb,MAAM2I,EAAchB,EAAUzK,GAQ9B,GALIA,GAAyB,WAAhByL,IACXzL,EAAQA,EAAM4B,aAKb5B,GAASkL,KACO,WAAhBO,GAA4C,WAAhBA,GAa7B,OAVKJ,IACHG,EAAU,IACVH,GAAc,GAGZE,EAAQH,EAAe,IACzBtI,EAAS,KAIJ,GAAG0I,IAAU/B,KAAOzJ,IAAQ8C,MAMvC,OAAOlD,QAAQC,QAAQ6L,UAAUJ,EAAiBzF,KAAK,MDAxC8F,CAAgBV,EAAQC,MAYjCJ,IACJ5D,EACAH,EAA+B,6CAG/B,MAAM6E,EAAYnB,EAAUvD,GAC5B,GAAkB,WAAd0E,EACF,OAAOhM,QAAQE,OACb,IAAIuF,MACF,8DAA8DuG,MAIpE,MAAMC,EAAgBpB,EAAU1D,GAChC,GAAsB,WAAlB8E,EACF,OAAOjM,QAAQE,OACb,IAAIuF,MACF,2EAA2EwG,MAMjF,MAAMC,iCAAuBlL,KAAKmG,SAAYA,GAGxCqB,QAA2BvH,EAAMqG,EAAK4E,GACzCvL,KAAKF,IACJ,KAAKA,MAAAA,SAAAA,EAAQ2H,SAAU3H,EAAO2H,QAAU,IACtC,MAAM,IAAI3C,MACR,mCAAmChF,MAAAA,SAAAA,EAAQ2H,iBAAiB3H,MAAAA,SAAAA,EAAQ6H,wBAAwB7H,MAAAA,SAAAA,EAAQsC,WAEjG,OAAOtC,IAEf0L,MAAMtD,GACL7I,QAAQE,OAAO,IAAIuF,MAAM,2BAA2BoD,OAIlDuD,QAAqC5D,EACxCnC,OACA1F,KAAM0F,GAAuCA,GAG1CgG,iCACDD,IACHE,cAAe,CACbvJ,QAASyF,EAASzF,QAClBsF,GAAIG,EAASH,GACbkE,WAAY/D,EAAS+D,WACrBnE,OAAQI,EAASJ,OACjBE,WAAYE,EAASF,WACrBhB,IAAKkB,EAASlB,OAKlB,OAAOtH,QAAQC,QAAQoM"}