{"version":3,"file":"GetVehicleTypesForMake.js","sources":["../../src/api/actions/GetVehicleTypesForMake.ts"],"sourcesContent":["/**\r\n * @module api/actions/GetVehicleTypesForMake\r\n * @category Actions\r\n * @description GetVehicleTypesForMake NHSTA Api Action.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [GetVehicleTypesForMake](module-api_actions_GetVehicleTypesForMake.GetVehicleTypesForMake.html)\r\n * >\r\n * > **Types**\r\n * > - Type: [GetVehicleTypesForMakeResponse](#GetVehicleTypesForMakeResponse)\r\n * > - Type: [GetVehicleTypesForMakeResults](#GetVehicleTypesForMakeResults)\r\n *\r\n */\r\n\r\n/* Parent Class and Fetch Types */\r\nimport {\r\n  Fetch /* Class */,\r\n  FetchConfig /* Type */,\r\n  FetchResponse /* Type */\r\n} from '../Fetch';\r\n\r\n/* Utility Functions */\r\nimport { getTypeof } from '../../utils';\r\n\r\n/**\r\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\r\n *\r\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\r\n *\r\n * @category Actions\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n */\r\nexport class GetVehicleTypesForMake extends Fetch {\r\n  constructor(userConfig?: FetchConfig) {\r\n    super(userConfig);\r\n  }\r\n\r\n  /**\r\n   * This returns all the Vehicle Types in the vPIC dataset for a specified Make,\r\n   * whose name is LIKE the make name in the vPIC Dataset.\r\n   * - `makeName` can be a partial name, or a full name for more specificity\r\n   *   (e.g., \"Merc\", \"Mercedes Benz\", etc.).\r\n   *\r\n   * @async\r\n   * @param {string} makeName - Name of the vehicle make to search.\r\n   * @returns {(Promise<GetVehicleTypesForMakeResponse | Error>)} Api Response object.\r\n   */\r\n  async GetVehicleTypesForMake(\r\n    makeName: string\r\n  ): Promise<GetVehicleTypesForMakeResponse | Error> {\r\n    const action = 'GetVehicleTypesForMake';\r\n\r\n    /* Runtime typechecking */\r\n    const typeofMakeName = getTypeof(makeName);\r\n    if (typeofMakeName !== 'string') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"makeName\" argument is required and must be of type string, got: ` +\r\n            `<${typeofMakeName}> ${makeName}`\r\n        )\r\n      );\r\n    }\r\n\r\n    /* Build the 'default' query string to be appended to the URL*/\r\n    const queryString = await this.buildQueryString().catch(err =>\r\n      Promise.reject(\r\n        new Error(`${action}, Error building query string: ${err}`)\r\n      )\r\n    );\r\n\r\n    /* Build the final request URL*/\r\n    const url = `${this.baseUrl}/${action}/${makeName}${queryString}`;\r\n\r\n    /* Return the result */\r\n    return await this.get(url)\r\n      .then(response => response)\r\n      .catch(err =>\r\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\r\n      );\r\n  }\r\n}\r\n\r\n/**\r\n * Type representing the structure of objects found in the '{@link GetVehicleTypesForMakeResponse}.Results' array.\r\n *\r\n * @memberof module:api/actions/GetVehicleTypesForMake\r\n * @alias GetVehicleTypesForMakeResults\r\n */\r\nexport type GetVehicleTypesForMakeResults = {\r\n  MakeId: number;\r\n  MakeName: string;\r\n  VehicleTypeId: number;\r\n  VehicleTypeName: string;\r\n};\r\n\r\n/**\r\n * Type representing the complete response returned by the GetVehicleTypesForMake API Action.\r\n *\r\n * @memberof module:api/actions/GetVehicleTypesForMake\r\n * @alias GetVehicleTypesForMakeResponse\r\n */\r\nexport type GetVehicleTypesForMakeResponse = {\r\n  /** A count of the items returned in the Results array. */\r\n  Count: number;\r\n  /** A message describing the Results array. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** The search results returned by the NHSTA API request. */\r\n  Results: Array<GetVehicleTypesForMakeResults>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,sBAAuB,SAAQA,WAAK;IAC/C,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;IAYK,sBAAsB,CAC1B,QAAgB;;YAEhB,MAAM,MAAM,GAAG,wBAAwB,CAAC;;YAGxC,MAAM,cAAc,GAAGC,eAAS,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,cAAc,KAAK,QAAQ,EAAE;gBAC/B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,qEAAqE;oBAC5E,IAAI,cAAc,KAAK,QAAQ,EAAE,CACpC,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,IACzD,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;;YAGlE,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;iBAC1B,KAAK,CAAC,GAAG,IACR,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}