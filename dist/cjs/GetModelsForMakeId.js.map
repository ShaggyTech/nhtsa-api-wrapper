{"version":3,"file":"GetModelsForMakeId.js","sources":["../../src/api/actions/GetModelsForMakeId.ts"],"sourcesContent":["/**\r\n * @module api/actions/GetModelsForMakeId\r\n * @category Actions\r\n * @description GetModelsForMakeId NHSTA Api Action.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [GetModelsForMakeId](module-api_actions_GetModelsForMakeId.GetModelsForMakeId.html)\r\n * >\r\n * > **Types**\r\n * > - Type: [GetModelsForMakeIdResponse](#GetModelsForMakeIdResponse)\r\n * > - Type: [GetModelsForMakeIdResults](#GetModelsForMakeIdResults)\r\n *\r\n */\r\n\r\n/* Parent Class and Fetch Types */\r\nimport {\r\n  Fetch /* Class */,\r\n  FetchConfig /* Type */,\r\n  FetchResponse /* Type */\r\n} from '../Fetch';\r\n\r\n/* Utility Functions */\r\nimport { getTypeof } from '../../utils';\r\n\r\n/**\r\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\r\n *\r\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\r\n *\r\n * @category Actions\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n */\r\nexport class GetModelsForMakeId extends Fetch {\r\n  constructor(userConfig?: FetchConfig) {\r\n    super(userConfig);\r\n  }\r\n\r\n  /**\r\n   * This returns the Models in the vPIC dataset for a specified Make\r\n   * whose Id is equal to the `makeId` in the vPIC Dataset.\r\n   *\r\n   * @async\r\n   * @param {number} makeID - Vehicle make ID (number).\r\n   * @returns {(Promise<GetModelsForMakeIdResponse | Error>)} Api Response object.\r\n   */\r\n  async GetModelsForMakeId(\r\n    makeID: number\r\n  ): Promise<GetModelsForMakeIdResponse | Error> {\r\n    const action = 'GetModelsForMakeId';\r\n\r\n    /* Runtime typechecking */\r\n    const typeofMakeId = getTypeof(makeID);\r\n    if (typeofMakeId !== 'number') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"makeId\" argument is required and must be of type number, got: ` +\r\n            `<${typeofMakeId}> ${makeID}`\r\n        )\r\n      );\r\n    }\r\n\r\n    /* Build the 'default' query string to be appended to the URL*/\r\n    const queryString = await this.buildQueryString({}).catch((err: Error) =>\r\n      Promise.reject(\r\n        new Error(`${action}, Error building query string: ${err}`)\r\n      )\r\n    );\r\n\r\n    /* Build the final request URL*/\r\n    const url = `${this.baseUrl}/${action}/${makeID}${queryString}`;\r\n\r\n    /* Return the result */\r\n    return await this.get(url)\r\n      .then(response => response)\r\n      .catch((err: Error) =>\r\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\r\n      );\r\n  }\r\n}\r\n\r\n/**\r\n * Type representing the structure of objects found in the '{@link GetModelsForMakeIdResponse}.Results' array.\r\n *\r\n * @memberof module:api/actions/GetModelsForMakeId\r\n * @alias GetModelsForMakeIdResults\r\n */\r\nexport type GetModelsForMakeIdResults = {\r\n  Make_ID: number;\r\n  Make_Name: string;\r\n  Model_ID: number;\r\n  Model_Name: string;\r\n};\r\n\r\n/**\r\n * Type representing the complete response returned by the GetModelsForMakeId API Action.\r\n *\r\n * @memberof module:api/actions/GetModelsForMakeId\r\n * @alias GetModelsForMakeIdResponse\r\n */\r\nexport type GetModelsForMakeIdResponse = {\r\n  /** A count of the items returned in the Results array. */\r\n  Count: number;\r\n  /** A message describing the Results array. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** The search results returned by the NHSTA API request. */\r\n  Results: Array<GetModelsForMakeIdResults>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,kBAAmB,SAAQA,WAAK;IAC3C,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;IAUK,kBAAkB,CACtB,MAAc;;YAEd,MAAM,MAAM,GAAG,oBAAoB,CAAC;;YAGpC,MAAM,YAAY,GAAGC,eAAS,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,YAAY,KAAK,QAAQ,EAAE;gBAC7B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,mEAAmE;oBAC1E,IAAI,YAAY,KAAK,MAAM,EAAE,CAChC,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAU,KACnE,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,MAAM,GAAG,WAAW,EAAE,CAAC;;YAGhE,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;iBAC1B,KAAK,CAAC,CAAC,GAAU,KAChB,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}