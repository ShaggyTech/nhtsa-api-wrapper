{"version":3,"file":"GetManufacturerDetails.js","sources":["../../src/api/actions/GetManufacturerDetails.ts"],"sourcesContent":["/**\r\n * @module api/actions/GetManufacturerDetails\r\n * @category Actions\r\n * @description GetManufacturerDetails NHSTA Api Action.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [GetManufacturerDetails](module-api_actions_GetManufacturerDetails.GetManufacturerDetails.html)\r\n * >\r\n * > **Types**\r\n * > - Type: [GetManufacturerDetailsResponse](#GetManufacturerDetailsResponse)\r\n * > - Type: [GetManufacturerDetailsResults](#GetManufacturerDetailsResults)\r\n *\r\n */\r\n\r\n/* Parent Class and Fetch Types */\r\nimport {\r\n  Fetch /* Class */,\r\n  FetchConfig /* Type */,\r\n  FetchResponse /* Type */\r\n} from '../Fetch';\r\n\r\n/* Utility Functions */\r\nimport { getTypeof } from '../../utils';\r\n\r\n/**\r\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\r\n *\r\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\r\n *\r\n * @category Actions\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n */\r\nexport class GetManufacturerDetails extends Fetch {\r\n  constructor(userConfig?: FetchConfig) {\r\n    super(userConfig);\r\n  }\r\n\r\n  /**\r\n   * This provides the details for a specific manufacturer that is requested.\r\n   * - If supplied `manufacturer` is a number - method will do exact match on Manufacturer's Id.\r\n   * - If supplied `manufacturer` is a string - it will look for manufacturers whose name is LIKE the provided name,\r\n   *   (it accepts a partial manufacturer name as an input).\r\n   * - Multiple results are returned in case of multiple matches.\r\n   *\r\n   * @async\r\n   * @param {string|number} manufacturer - Manufacturer Name (string) or Manufacturer ID (number).\r\n   * @returns {(Promise<GetManufacturerDetailsResponse | Error>)} Api Response object.\r\n   */\r\n  public async GetManufacturerDetails(\r\n    manufacturer: string | number\r\n  ): Promise<GetManufacturerDetailsResponse | Error> {\r\n    const action = 'GetManufacturerDetails';\r\n\r\n    /* Runtime typechecking */\r\n    const typeofManufacturer = getTypeof(manufacturer);\r\n    if (typeofManufacturer !== 'string' && typeofManufacturer !== 'number') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"manufacturer\" argument is required and must be of type string or number, got: ` +\r\n            `<${typeofManufacturer}> ${manufacturer}`\r\n        )\r\n      );\r\n    }\r\n\r\n    /* Build the 'default' query string to be appended to the URL*/\r\n    const queryString = await this.buildQueryString().catch(err =>\r\n      Promise.reject(\r\n        new Error(`${action}, Error building query string: ${err}`)\r\n      )\r\n    );\r\n\r\n    /* Build the final request URL*/\r\n    const url = `${this.baseUrl}/${action}/${manufacturer}${queryString}`;\r\n\r\n    /* Return the result */\r\n    return await this.get(url)\r\n      .then(response => response)\r\n      .catch(err =>\r\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\r\n      );\r\n  }\r\n}\r\n\r\n/**\r\n * Type representing the structure of objects found in the '{@link GetManufacturerDetailsResponse}.Results' array.\r\n *\r\n * @memberof module:api/actions/GetManufacturerDetails\r\n * @alias GetManufacturerDetailsResults\r\n */\r\nexport type GetManufacturerDetailsResults = {\r\n  Address: string;\r\n  Address2: string;\r\n  City: string;\r\n  ContactEmail: string;\r\n  ContactFax: string;\r\n  ContactPhone: string;\r\n  Country: string;\r\n  DBAs: string;\r\n  EquipmentItems: Array<object>;\r\n  LastUpdated: string;\r\n  ManufacturerTypes: Array<{\r\n    Name: string;\r\n  }>;\r\n  Mfr_CommonName: string;\r\n  Mfr_ID: number;\r\n  Mfr_Name: string;\r\n  OtherManufacturerDetails: string;\r\n  PostalCode: string;\r\n  PrimaryProduct: string;\r\n  PrincipalFirstName: string;\r\n  PrincipalLastName: string;\r\n  PrincipalPosition: string;\r\n  StateProvince: string;\r\n  SubmittedName: string;\r\n  SubmittedOn: string;\r\n  SubmittedPosition: string;\r\n  VehicleTypes: Array<{\r\n    GVWRFrom: string;\r\n    GVWRTo: string;\r\n    IsPrimary: boolean;\r\n    Name: string;\r\n  }>;\r\n};\r\n\r\n/**\r\n * Type representing the complete response returned by the GetManufacturerDetails API Action.\r\n *\r\n * @memberof module:api/actions/GetManufacturerDetails\r\n * @alias GetManufacturerDetailsResponse\r\n */\r\nexport type GetManufacturerDetailsResponse = {\r\n  /** A count of the items returned in the Results array. */\r\n  Count: number;\r\n  /** A message describing the Results array. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** The search results returned by the NHSTA API request. */\r\n  Results: Array<GetManufacturerDetailsResults>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["GetManufacturerDetails","Fetch","[object Object]","userConfig","super","manufacturer","action","typeofManufacturer","getTypeof","Promise","reject","Error","queryString","this","buildQueryString","catch","err","url","baseUrl","get","then","response"],"mappings":"iGAgCaA,UAA+BC,EAC1CC,YAAYC,GACVC,MAAMD,GAcKD,uBACXG,4CAEA,MAAMC,EAAS,yBAGTC,EAAqBC,EAAUH,GACrC,GAA2B,WAAvBE,GAA0D,WAAvBA,EACrC,OAAOE,QAAQC,OACb,IAAIC,MACF,GAAGL,qFACD,IAAIC,MAAuBF,MAMnC,MAAMO,QAAoBC,KAAKC,mBAAmBC,MAAMC,GACtDP,QAAQC,OACN,IAAIC,MAAM,GAAGL,mCAAwCU,OAKnDC,EAAM,GAAGJ,KAAKK,WAAWZ,KAAUD,IAAeO,IAGxD,aAAaC,KAAKM,IAAIF,GACnBG,KAAKC,GAAYA,GACjBN,MAAMC,GACLP,QAAQC,OAAO,IAAIC,MAAM,GAAGL,yBAA8BU"}