import{F as e,_ as r,g as t}from"./Fetch-d0e51133.js";class o extends e{constructor(e){super(e)}DecodeWMI(e){return r(this,void 0,void 0,(function*(){const r=t(e);if("string"!==r)return Promise.reject(new Error(`DecodeWMI, "WMI" argument is required and must be of type string, got: <${r}> ${e}`));const o=yield this.buildQueryString().catch((e=>Promise.reject(new Error(`DecodeWMI, Error building query string: ${e}`)))),s=`${this.baseUrl}/DecodeWMI/${e}${o}`;return yield this.get(s).then((e=>e)).catch((e=>Promise.reject(new Error(`DecodeWMI, Fetch.get() error: ${e}`))))}))}}export{o as DecodeWMI};
//# sourceMappingURL=DecodeWMI.js.map
