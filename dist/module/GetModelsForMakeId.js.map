{"version":3,"file":"GetModelsForMakeId.js","sources":["../../src/api/actions/GetModelsForMakeId.ts"],"sourcesContent":["/**\n * @module api/actions/GetModelsForMakeId\n * @category Actions\n * @description GetModelsForMakeId NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetModelsForMakeId](module-api_actions_GetModelsForMakeId.GetModelsForMakeId.html)\n * >\n * > **Types**\n * > - Type: [GetModelsForMakeIdResponse](#GetModelsForMakeIdResponse)\n * > - Type: [GetModelsForMakeIdResults](#GetModelsForMakeIdResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetModelsForMakeId extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This returns the Models in the vPIC dataset for a specified Make\n   * whose Id is equal to the `makeId` in the vPIC Dataset.\n   *\n   * @async\n   * @param {number} makeID - Vehicle make ID (number).\n   * @returns {(Promise<GetModelsForMakeIdResponse>)} Api Response object.\n   */\n  async GetModelsForMakeId(\n    makeID: number\n  ): Promise<GetModelsForMakeIdResponse> {\n    const action = 'GetModelsForMakeId';\n\n    /* Runtime typechecking */\n    const typeofMakeId = getTypeof(makeID);\n    if (typeofMakeId !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"makeId\" argument is required and must be of type number, got: ` +\n            `<${typeofMakeId}> ${makeID}`\n        )\n      );\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString({}).catch((err: Error) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${makeID}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err: Error) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetModelsForMakeIdResponse}.Results' array.\n *\n * @memberof module:api/actions/GetModelsForMakeId\n * @alias GetModelsForMakeIdResults\n */\nexport type GetModelsForMakeIdResults = {\n  Make_ID: number;\n  Make_Name: string;\n  Model_ID: number;\n  Model_Name: string;\n};\n\n/**\n * Type representing the complete response returned by the GetModelsForMakeId API Action.\n *\n * @memberof module:api/actions/GetModelsForMakeId\n * @alias GetModelsForMakeIdResponse\n */\nexport type GetModelsForMakeIdResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetModelsForMakeIdResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["GetModelsForMakeId","Fetch","constructor","userConfig","super","makeID","action","typeofMakeId","getTypeof","Promise","reject","Error","queryString","this","buildQueryString","catch","err","url","baseUrl","get","then","response"],"mappings":"4DAgCaA,UAA2BC,EACtCC,YAAYC,GACVC,MAAMD,GAWFH,mBACJK,4CAEA,MAAMC,EAAS,qBAGTC,EAAeC,EAAUH,GAC/B,GAAqB,WAAjBE,EACF,OAAOE,QAAQC,OACb,IAAIC,MACF,GAAGL,sEACGC,MAAiBF,MAM7B,MAAMO,QAAoBC,KAAKC,iBAAiB,IAAIC,OAAOC,GACzDP,QAAQC,OACN,IAAIC,MAAM,GAAGL,mCAAwCU,QAKnDC,EAAM,GAAGJ,KAAKK,WAAWZ,KAAUD,IAASO,IAGlD,aAAaC,KAAKM,IAAIF,GACnBG,MAAMC,GAAaA,IACnBN,OAAOC,GACNP,QAAQC,OAAO,IAAIC,MAAM,GAAGL,yBAA8BU"}