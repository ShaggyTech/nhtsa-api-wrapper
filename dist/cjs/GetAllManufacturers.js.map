{"version":3,"file":"GetAllManufacturers.js","sources":["../../src/api/actions/GetAllManufacturers.ts"],"sourcesContent":["/**\n * @module api/actions/GetAllManufacturers\n * @category Actions\n * @description GetAllManufacturers NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetAllManufacturers](module-api_actions_GetAllManufacturers.GetAllManufacturers.html)\n * >\n * > **Types**\n * > - Type: [GetAllManufacturersResponse](#GetAllManufacturersResponse)\n * > - Type: [GetAllManufacturersResults](#GetAllManufacturersResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetAllManufacturers extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This provides a list of all the Manufacturers available in vPIC Dataset.\n   * - `params.manufacturerType` allows the user to filter the list based on manufacturer type,\n   *   ('Incomplete Vehicles', 'Completed Vehicle Manufacturer', 'Incomplete Vehicle Manufacturer',\n   *   'Intermediate Manufacturer', 'Final-Stage Manufacturer', 'Alterer', or any partial match of those strings).\n   * - You can get a list of all manufacturer types with the following API Action:\n   *   `GetVehicleVariableValuesList('manufacturer type')`\n   * - Results are provided in pages of 100 items.\n   * - Provide a number value for `params.page` to specify 1st (default), 2nd, 3rd, Nth, etc page.\n   *\n   * @async\n   * @param {object} [params={}] - Query Search Parameters to append to the URL.\n   * @param {string} [params.manufacturerType] - See method description.\n   * @param {number} [params.page] - Specify the page number (results returned 100 at a time).\n   * @returns {(Promise<module:api.ApiResponse>)} Api Response object.\n   */\n  async GetAllManufacturers(\n    params: {\n      manufacturerType?: string;\n      page?: number;\n    } = {}\n  ): Promise<GetAllManufacturersResponse> {\n    const action = 'GetAllManufacturers';\n\n    /* Runtime typechecking */\n    const typeofParams = getTypeof(params);\n    if (typeofParams !== 'object') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params\" argument must be of type object, got: ` +\n            `<${typeofParams}> ${params}`\n        )\n      );\n    }\n\n    const typeofManufacturerType = getTypeof(params.manufacturerType);\n    if (params.manufacturerType && typeofManufacturerType !== 'string') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.manufacturerType\" argument must be of type string, got: ` +\n            `<${typeofManufacturerType}> ${params.manufacturerType}`\n        )\n      );\n    }\n\n    const typeofPage = getTypeof(params.page);\n    if (params.page && typeofPage !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"params.page\" argument must be of type number, got: ` +\n            `<${typeofPage}> ${params.page}`\n        )\n      );\n    }\n\n    /* Build the query string to be appended to the URL*/\n    const queryString = await this.buildQueryString(params).catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetAllManufacturersResponse}.Results' array.\n *\n * @memberof module:api/actions/GetAllManufacturers\n * @alias GetAllManufacturersResults\n */\nexport type GetAllManufacturersResults = {\n  Country: string;\n  Mfr_CommonName: string;\n  Mfr_ID: number;\n  Mfr_Name: string;\n  VehicleTypes: Array<{ isPrimary?: boolean; name?: string }>;\n};\n\n/**\n * Type representing the complete response returned by the GetAllManufacturers API Action.\n *\n * @memberof module:api/actions/GetAllManufacturers\n * @alias GetAllManufacturersResponse\n */\nexport type GetAllManufacturersResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetAllManufacturersResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,mBAAoB,SAAQA,WAAK;IAC5C,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;;;;;;;IAkBK,mBAAmB,CACvB,SAGI,EAAE;;YAEN,MAAM,MAAM,GAAG,qBAAqB,CAAC;;YAGrC,MAAM,YAAY,GAAGC,eAAS,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,YAAY,KAAK,QAAQ,EAAE;gBAC7B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,mDAAmD;oBAC1D,IAAI,YAAY,KAAK,MAAM,EAAE,CAChC,CACF,CAAC;aACH;YAED,MAAM,sBAAsB,GAAGA,eAAS,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAClE,IAAI,MAAM,CAAC,gBAAgB,IAAI,sBAAsB,KAAK,QAAQ,EAAE;gBAClE,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,oEAAoE;oBAC3E,IAAI,sBAAsB,KAAK,MAAM,CAAC,gBAAgB,EAAE,CAC3D,CACF,CAAC;aACH;YAED,MAAM,UAAU,GAAGA,eAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,MAAM,CAAC,IAAI,IAAI,UAAU,KAAK,QAAQ,EAAE;gBAC1C,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,wDAAwD;oBAC/D,IAAI,UAAU,KAAK,MAAM,CAAC,IAAI,EAAE,CACnC,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,KAChE,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,GAAG,WAAW,EAAE,CAAC;;YAGtD,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;iBAC5B,KAAK,CAAC,CAAC,GAAG,KACT,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}