import{F as e,_ as r,g as t}from"./Fetch-d0e51133.js";class o extends e{constructor(e){super(e)}GetModelsForMakeId(e){return r(this,void 0,void 0,(function*(){const r="GetModelsForMakeId",o=t(e);if("number"!==o)return Promise.reject(new Error(`${r}, "makeId" argument is required and must be of type number, got: <${o}> ${e}`));const s=yield this.buildQueryString({}).catch((e=>Promise.reject(new Error(`${r}, Error building query string: ${e}`)))),i=`${this.baseUrl}/${r}/${e}${s}`;return yield this.get(i).then((e=>e)).catch((e=>Promise.reject(new Error(`${r}, Fetch.get() error: ${e}`))))}))}}export{o as GetModelsForMakeId};
//# sourceMappingURL=GetModelsForMakeId.js.map
