"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const a=({args:e,mode:r="default"})=>{if(g(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(r==="default")e.forEach(t=>{v(t)});else if(r==="atLeast"&&!e.find(n=>!!n.value))throw Error(`must provide at least one of the following arguments: ${e.map(n=>n.name).join(", ")}`)},v=({name:e,value:r,required:t,types:n,errorMode:l="error"})=>{if(g(e)!=="string")throw Error("'name', is required and must be of type string");let s="";const d=g(r),o=`error validating argument named "${e}",`,i=`received value: ${r} - of type: <${d}>`;if(n&&g(n)!=="array"&&!n.length)throw Error(`${o} 'types' must be an array of strings`);const m=n?`<${n.join(" | ")}>`:"";if(t&&!n?r||(s=`${o} is required, ${i}`):n&&!t?r!==void 0&&!n.includes(d)&&(s=`${o} must be of type(s) ${m}, ${i}`):t&&n&&(!r||!n.includes(d))&&(s=`${o} is required and must be of type(s) ${m}, ${i}`),s.length){if(l==="boolean")return!1;throw Error(s)}return!0},G=e=>g(e)==="error",q=e=>{let r="an unknown error occurred.";return G(e)?e:(g(e)==="string"&&(r=e),Error(r))},c=async e=>(G(e)||(e=q(e)),Promise.reject(e)),g=e=>{const r=Object.prototype.toString.call(e).toLowerCase();return r.slice(8,r.length-1)},$={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},A=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function N(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const r=e.split(""),t=r[8];if(isNaN(parseInt(t))&&t!=="X")return!1;const n=t==="X"?10:parseInt(t);return r.map((s,d)=>{let o;isNaN(parseInt(s))?o=$[s]:o=parseInt(s);const i=A[d];return o*i}).reduce((s,d)=>s+d,0)%11===n}const j="https://vpic.nhtsa.dot.gov/api/vehicles",k="json",I=(e={},r=!1)=>{v({name:"params",value:e,types:["object"]});const t=M({...e,format:k});return"?"+Object.entries(t).map(([n,l],s,d)=>l.length||r&&l===""?`${n}=${l}${s<d.length-1?"&":""}`:"").join("")},M=e=>Object.entries(e).filter(([t,n])=>v({name:t,types:["string","number","boolean"],value:n,errorMode:"boolean"})).reduce((t,[n,l])=>(t[n]=encodeURIComponent(l),t),{}),E=async(e,r)=>{const t="DecodeVin";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return a({args:n}),u().get({endpointName:t,path:e,params:r})}catch(n){return c(n)}},F=async(e,r)=>{const t="DecodeVinExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return a({args:n}),u().get({endpointName:t,path:e,params:r})}catch(n){return c(n)}},S=async(e,r)=>{const t="DecodeVinValues";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return a({args:n}),u().get({endpointName:t,path:e,params:r})}catch(n){return c(n)}},D=async e=>{const r="DecodeVinValuesBatch";try{return a({args:[{name:"inputString",value:e,required:!0,types:["string"]}]}),u().post({endpointName:r},{body:e})}catch(t){return c(t)}},Y=async(e,r)=>{const t="DecodeVinValuesExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return a({args:n}),u().get({endpointName:t,path:e,params:r})}catch(n){return c(n)}},w=async e=>{const r="DecodeWMI";try{return a({args:[{name:"WMI",value:e,required:!0,types:["string"]}]}),u().get({endpointName:r,path:e})}catch(t){return c(t)}},P=async()=>{const e="GetAllMakes";try{return u().get({endpointName:e})}catch(r){return c(r)}},U=async e=>{const r="GetAllManufacturers";try{const t=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];return a({args:t}),u().get({endpointName:r,params:e})}catch(t){return c(t)}},L=async e=>{const r="GetCanadianVehicleSpecifications";try{const t=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];return a({args:t}),u().get({endpointName:r,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0})}catch(t){return c(t)}},R=async e=>{const r="GetEquipmentPlantCodes";try{const t=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];return a({args:t}),u().get({endpointName:r,params:e})}catch(t){return c(t)}},O=async e=>{const r="GetMakeForManufacturer";try{return a({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]}),u().get({endpointName:r,path:e.toString()})}catch(t){return c(t)}},C=async(e,r)=>{const t="GetMakesForManufacturerAndYear";try{const n=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:r,required:!0,types:["object"]},{name:"year",value:r.year,required:!0,types:["string","number"]}];return a({args:n}),u().get({endpointName:t,path:e.toString(),params:r})}catch(n){return c(n)}},_=async e=>{const r="GetMakesForVehicleType";try{return a({args:[{name:"typeName",value:e,required:!0,types:["string"]}]}),u().get({endpointName:r,path:e})}catch(t){return c(t)}},W=async e=>{const r="GetManufacturerDetails";try{return a({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]}),u().get({endpointName:r,path:e.toString()})}catch(t){return c(t)}},x=async e=>{const r="GetModelsForMake";try{return a({args:[{name:"makeName",value:e,required:!0,types:["string"]}]}),u().get({endpointName:r,path:e})}catch(t){return c(t)}},B=async e=>{const r="GetModelsForMakeId";try{return a({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]}),u().get({endpointName:r,path:e.toString()})}catch(t){return c(t)}},H=async e=>{const r="GetModelsForMakeIdYear";try{const t=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...t];a({args:n}),a({args:t,mode:"atLeast"});const{makeId:l,modelYear:s,vehicleType:d}=M(e);let o=`/make/${l}/`;return o+=s?`modelYear/${s}`:"",o+=d?`${s?"/":""}vehicleType/${d}/`:"",u().get({endpointName:r,path:o})}catch(t){return c(t)}},J=async e=>{const r="GetModelsForMakeYear";try{const t=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...t];a({args:n}),a({args:t,mode:"atLeast"});const{make:l,modelYear:s,vehicleType:d}=M(e);let o=`/make/${l}/`;return o+=s?`modelYear/${s}`:"",o+=d?`${s?"/":""}vehicleType/${d}/`:"",u().get({endpointName:r,path:o})}catch(t){return c(t)}},Q=async e=>{const r="GetParts";try{const t=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];return a({args:t}),u().get({endpointName:r,params:e})}catch(t){return c(t)}},X=async e=>{const r="GetVehicleTypesForMake";try{return a({args:[{name:"makeName",value:e,required:!0,types:["string"]}]}),u().get({endpointName:r,path:e})}catch(t){return c(t)}},K=async e=>{const r="GetVehicleTypesForMakeId";try{return a({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]}),u().get({endpointName:r,path:e.toString()})}catch(t){return c(t)}},Z=async()=>{const e="GetVehicleVariableList";try{return u().get({endpointName:e})}catch(r){return c(r)}},z=async e=>{const r="GetVehicleVariableValuesList";try{return a({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]}),u().get({endpointName:r,path:e.toString()})}catch(t){return c(t)}},ee=async e=>{const r="GetWMIsForManufacturer";try{const t=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],n=[{name:"params",value:e,required:!0,types:["object"]},...t];a({args:n}),a({args:t,mode:"atLeast"});const l=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",s=(e==null?void 0:e.vehicleType)||"";return u().get({endpointName:r,path:l,params:{vehicleType:s}})}catch(t){return c(t)}},u=()=>{let e;const r=()=>e,t=o=>encodeURI(`DATA=${o}&format=${k}`),n=({endpointName:o,allowEmptyParams:i=!1,includeQueryString:m=!0,path:y="",params:h,saveUrl:p=!0})=>{if(!o)throw Error("Endpoint name is required to create URL string");const b=m?I(h,i):"",f=encodeURI(`${j}/${o}/${y}${b}`);return p&&(e=f),f},l=o=>n({...o,saveUrl:!1}),s=async(o,i={saveUrl:!0})=>(o&&g(o)==="object"&&(o=n({...o,saveUrl:i.saveUrl})),o=g(o)==="string"?o:r(),a({args:[{name:"url",value:o,required:!0,types:["string"]},{name:"options",value:i,types:["object"]}]}),i.saveUrl&&(e=o),await fetch(o,i).then(async y=>{if(!y)throw Error("APi responded with an error, no response object returned");const h=y.headers.get("content-type"),p=`content-type: ${h},responseStatus: ${y.status},responseUrl: ${y.url}`;if(!y.ok)throw Error(`APi responded with an error, got ${p}`);if(!["application/json","text/json"].some(T=>h==null?void 0:h.includes(T)))throw Error(`API response is not in JSON format, got ${p}`);const V=await y.json();if(V)return V;throw Error(`API response OK but returned no data, got ${p}`)}).catch(y=>(y.message=`There was an error fetching API data: ${y.message}`,c(y))));return{getUrl:r,cacheUrl:n,createUrl:l,createPostBody:t,get:s,post:async(o,i={saveUrl:!0})=>(o&&g(o)==="object"&&(o=n({...o,saveUrl:i.saveUrl,includeQueryString:!1})),o=g(o)==="string"?o:r(),a({args:[{name:"url",value:o,required:!0,types:["string"]},{name:"options",value:i,types:["object"]},{name:"options.body",value:i.body,types:["string"]}]}),await s(o,{...i,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:t(i.body)}))}};exports.DecodeVin=E;exports.DecodeVinExtended=F;exports.DecodeVinValues=S;exports.DecodeVinValuesBatch=D;exports.DecodeVinValuesExtended=Y;exports.DecodeWMI=w;exports.GetAllMakes=P;exports.GetAllManufacturers=U;exports.GetCanadianVehicleSpecifications=L;exports.GetEquipmentPlantCodes=R;exports.GetMakeForManufacturer=O;exports.GetMakesForManufacturerAndYear=C;exports.GetMakesForVehicleType=_;exports.GetManufacturerDetails=W;exports.GetModelsForMake=x;exports.GetModelsForMakeId=B;exports.GetModelsForMakeIdYear=H;exports.GetModelsForMakeYear=J;exports.GetParts=Q;exports.GetVehicleTypesForMake=X;exports.GetVehicleTypesForMakeId=K;exports.GetVehicleVariableList=Z;exports.GetVehicleVariableValuesList=z;exports.GetWMIsForManufacturer=ee;exports.isValidVin=N;exports.useNHTSA=u;
//# sourceMappingURL=nhtsa-api-wrapper.js.map
