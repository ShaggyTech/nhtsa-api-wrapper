import{_ as e}from"./tslib.es6-e8a9b979.js";import{F as r,g as t}from"./Fetch-980165d1.js";class o extends r{constructor(e){super(e)}DecodeVinValuesExtended(r,o){var i,n;return e(this,void 0,void 0,(function*(){const e="DecodeVinValuesExtended",s=t(o);if(o&&"object"!==s)return Promise.reject(new Error(`${e}, "params" argument must be of type object, got: `+`<${s}> ${o}`));const d=t(r);if("string"!==d)return Promise.reject(new Error(`${e}, "vin" argument is required and must be of type string, got: `+`<${d}> ${r}`));const u=t(null===(i=o)||void 0===i?void 0:i.modelYear);if((null===(n=o)||void 0===n?void 0:n.modelYear)&&"number"!==u)return Promise.reject(new Error(`${e}, "params.modelYear" argument is required and must be of type string or number, got: `+`<${u}> ${o.modelYear}`));const a=yield this.buildQueryString(o).catch(r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`))),c=`${this.baseUrl}/${e}/${r}${a}`;return yield this.get(c).then(e=>e).catch(r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`)))}))}}export{o as DecodeVinValuesExtended};
//# sourceMappingURL=DecodeVinValuesExtended.js.map
