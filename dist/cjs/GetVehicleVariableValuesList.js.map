{"version":3,"file":"GetVehicleVariableValuesList.js","sources":["../../src/api/actions/GetVehicleVariableValuesList.ts"],"sourcesContent":["/**\r\n * @module api/actions/GetVehicleVariableValuesList\r\n * @category Actions\r\n * @description GetVehicleVariableValuesList NHSTA Api Action.\r\n *\r\n * > **Module Exports**:\r\n * > - Class: [GetVehicleVariableValuesList](module-api_actions_GetVehicleVariableValuesList.GetVehicleVariableValuesList.html)\r\n * >\r\n * > **Types**\r\n * > - Type: [GetVehicleVariableValuesListResponse](#GetVehicleVariableValuesListResponse)\r\n * > - Type: [GetVehicleVariableValuesListResults](#GetVehicleVariableValuesListResults)\r\n *\r\n */\r\n\r\n/* Parent Class and Fetch Types */\r\nimport {\r\n  Fetch /* Class */,\r\n  FetchConfig /* Type */,\r\n  FetchResponse /* Type */\r\n} from '../Fetch';\r\n\r\n/* Utility Functions */\r\nimport { getTypeof } from '../../utils';\r\n\r\n/**\r\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\r\n *\r\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\r\n *\r\n * @category Actions\r\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\r\n */\r\nexport class GetVehicleVariableValuesList extends Fetch {\r\n  constructor(userConfig?: FetchConfig) {\r\n    super(userConfig);\r\n  }\r\n\r\n  /**\r\n   * This provides a list of all the accepted values for a given variable that are stored in the vPIC dataset.\r\n   *\r\n   * This applies to only \"Look up\" type of variables.\r\n   * - `variableValue` can either be a:\r\n   *   - Variable Name (\"battery type\" in first example, please use full name, not just part of it),\r\n   *   - or Variable ID (number).\r\n   *\r\n   * @async\r\n   * @param {string|number} variableValue - The variable you want to get a values list of.\r\n   * @returns {(Promise<GetVehicleVariableValuesListResponse | Error>)} Api Response object.\r\n   */\r\n  async GetVehicleVariableValuesList(\r\n    variableValue: string | number\r\n  ): Promise<GetVehicleVariableValuesListResponse | Error> {\r\n    const action = 'GetVehicleVariableValuesList';\r\n\r\n    /* Runtime typechecking */\r\n    const typeofVariableValue = getTypeof(variableValue);\r\n    if (typeofVariableValue !== 'string' && typeofVariableValue !== 'number') {\r\n      return Promise.reject(\r\n        new Error(\r\n          `${action}, \"variableValue\" argument is required and must be of type string or number, got: ` +\r\n            `<${typeofVariableValue}> ${variableValue}`\r\n        )\r\n      );\r\n    }\r\n    /* Encode to a valid URI string (space chars, etc.) if variableValue is a string*/\r\n    if (typeofVariableValue === 'string') {\r\n      variableValue = encodeURI(variableValue as string);\r\n    }\r\n\r\n    /* Build the 'default' query string to be appended to the URL*/\r\n    const queryString = await this.buildQueryString().catch(err =>\r\n      Promise.reject(\r\n        new Error(`${action}, Error building query string: ${err}`)\r\n      )\r\n    );\r\n\r\n    /* Build the final request URL*/\r\n    const url = `${this.baseUrl}/${action}/${variableValue}${queryString}`;\r\n\r\n    /* Return the result */\r\n    return await this.get(url)\r\n      .then(response => response)\r\n      .catch(err =>\r\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\r\n      );\r\n  }\r\n}\r\n\r\n/**\r\n * Type representing the structure of objects found in the '{@link GetVehicleVariableValuesListResponse}.Results' array.\r\n *\r\n * @memberof module:api/actions/GetVehicleVariableValuesList\r\n * @alias GetVehicleVariableValuesListResults\r\n */\r\nexport type GetVehicleVariableValuesListResults = {\r\n  ElementName: string;\r\n  Id: number;\r\n  Name: string;\r\n};\r\n\r\n/**\r\n * Type representing the complete response returned by the GetVehicleVariableValuesList API Action.\r\n *\r\n * @memberof module:api/actions/GetVehicleVariableValuesList\r\n * @alias GetVehicleVariableValuesListResponse\r\n */\r\nexport type GetVehicleVariableValuesListResponse = {\r\n  /** A count of the items returned in the Results array. */\r\n  Count: number;\r\n  /** A message describing the Results array. */\r\n  Message: string;\r\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\r\n  SearchCriteria: string;\r\n  /** The search results returned by the NHSTA API request. */\r\n  Results: Array<GetVehicleVariableValuesListResults>;\r\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\r\n  FetchResponse: FetchResponse;\r\n};\r\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,4BAA6B,SAAQA,WAAK;IACrD,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;;;IAcK,4BAA4B,CAChC,aAA8B;;YAE9B,MAAM,MAAM,GAAG,8BAA8B,CAAC;;YAG9C,MAAM,mBAAmB,GAAGC,eAAS,CAAC,aAAa,CAAC,CAAC;YACrD,IAAI,mBAAmB,KAAK,QAAQ,IAAI,mBAAmB,KAAK,QAAQ,EAAE;gBACxE,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,oFAAoF;oBAC3F,IAAI,mBAAmB,KAAK,aAAa,EAAE,CAC9C,CACF,CAAC;aACH;;YAED,IAAI,mBAAmB,KAAK,QAAQ,EAAE;gBACpC,aAAa,GAAG,SAAS,CAAC,aAAuB,CAAC,CAAC;aACpD;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,IACzD,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,aAAa,GAAG,WAAW,EAAE,CAAC;;YAGvE,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC;iBAC1B,KAAK,CAAC,GAAG,IACR,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}