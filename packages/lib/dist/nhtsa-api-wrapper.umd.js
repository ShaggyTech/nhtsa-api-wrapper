(function(o,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(o=typeof globalThis<"u"?globalThis:o||self,s(o.NHTSA={}))})(this,function(o){"use strict";const s=({args:e,mode:r="default"})=>{if(h(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(r==="default")e.forEach(t=>{p(t)});else if(r==="atLeast"&&!e.find(n=>!!n.value))throw Error(`must provide at least one of the following arguments: ${e.map(n=>n.name).join(", ")}`)},p=({name:e,value:r,required:t,types:n,errorMode:d="error"})=>{if(h(e)!=="string")throw Error("'name', is required and must be of type string");let c="";const y=h(r),a=`error validating argument named "${e}",`,l=`received value: ${r} - of type: <${y}>`;if(n&&h(n)!=="array"&&!n.length)throw Error(`${a} 'types' must be an array of strings`);const f=n?`<${n.join(" | ")}>`:"";if(t&&!n?r||(c=`${a} is required, ${l}`):n&&!t?r!==void 0&&!n.includes(y)&&(c=`${a} must be of type(s) ${f}, ${l}`):t&&n&&(!r||!n.includes(y))&&(c=`${a} is required and must be of type(s) ${f}, ${l}`),c.length){if(d==="boolean")return!1;throw Error(c)}return!0},V=e=>h(e)==="error",q=e=>{let r="an unknown error occurred.";return V(e)?e:(h(e)==="string"&&(r=e),Error(r))},u=async e=>(V(e)||(e=q(e)),Promise.reject(e)),h=e=>{const r=Object.prototype.toString.call(e).toLowerCase();return r.slice(8,r.length-1)},$={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},A=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function N(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const r=e.split(""),t=r[8];if(isNaN(parseInt(t))&&t!=="X")return!1;const n=t==="X"?10:parseInt(t);return r.map((c,y)=>{let a;isNaN(parseInt(c))?a=$[c]:a=parseInt(c);const l=A[y];return a*l}).reduce((c,y)=>c+y,0)%11===n}const j="https://vpic.nhtsa.dot.gov/api/vehicles",G="json",I=(e={},r=!1)=>{p({name:"params",value:e,types:["object"]});const t=b({...e,format:G});return"?"+Object.entries(t).map(([n,d],c,y)=>d.length||r&&d===""?`${n}=${d}${c<y.length-1?"&":""}`:"").join("")},b=e=>Object.entries(e).filter(([t,n])=>p({name:t,types:["string","number","boolean"],value:n,errorMode:"boolean"})).reduce((t,[n,d])=>(t[n]=encodeURIComponent(d),t),{}),E=async(e,r)=>{const t="DecodeVin";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return s({args:n}),i().get({endpointName:t,path:e,params:r})}catch(n){return u(n)}},F=async(e,r)=>{const t="DecodeVinExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return s({args:n}),i().get({endpointName:t,path:e,params:r})}catch(n){return u(n)}},S=async(e,r)=>{const t="DecodeVinValues";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return s({args:n}),i().get({endpointName:t,path:e,params:r})}catch(n){return u(n)}},D=async e=>{const r="DecodeVinValuesBatch";try{return s({args:[{name:"inputString",value:e,required:!0,types:["string"]}]}),i().post({endpointName:r},{body:e})}catch(t){return u(t)}},Y=async(e,r)=>{const t="DecodeVinValuesExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:r,types:["object"]},{name:"modelYear",value:r==null?void 0:r.modelYear,types:["string","number"]}];return s({args:n}),i().get({endpointName:t,path:e,params:r})}catch(n){return u(n)}},w=async e=>{const r="DecodeWMI";try{return s({args:[{name:"WMI",value:e,required:!0,types:["string"]}]}),i().get({endpointName:r,path:e})}catch(t){return u(t)}},P=async()=>{const e="GetAllMakes";try{return i().get({endpointName:e})}catch(r){return u(r)}},U=async e=>{const r="GetAllManufacturers";try{const t=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];return s({args:t}),i().get({endpointName:r,params:e})}catch(t){return u(t)}},L=async e=>{const r="GetCanadianVehicleSpecifications";try{const t=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];return s({args:t}),i().get({endpointName:r,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0})}catch(t){return u(t)}},R=async e=>{const r="GetEquipmentPlantCodes";try{const t=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];return s({args:t}),i().get({endpointName:r,params:e})}catch(t){return u(t)}},O=async e=>{const r="GetMakeForManufacturer";try{return s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]}),i().get({endpointName:r,path:e.toString()})}catch(t){return u(t)}},C=async(e,r)=>{const t="GetMakesForManufacturerAndYear";try{const n=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:r,required:!0,types:["object"]},{name:"year",value:r.year,required:!0,types:["string","number"]}];return s({args:n}),i().get({endpointName:t,path:e.toString(),params:r})}catch(n){return u(n)}},_=async e=>{const r="GetMakesForVehicleType";try{return s({args:[{name:"typeName",value:e,required:!0,types:["string"]}]}),i().get({endpointName:r,path:e})}catch(t){return u(t)}},W=async e=>{const r="GetManufacturerDetails";try{return s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]}),i().get({endpointName:r,path:e.toString()})}catch(t){return u(t)}},B=async e=>{const r="GetModelsForMake";try{return s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]}),i().get({endpointName:r,path:e})}catch(t){return u(t)}},H=async e=>{const r="GetModelsForMakeId";try{return s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]}),i().get({endpointName:r,path:e.toString()})}catch(t){return u(t)}},J=async e=>{const r="GetModelsForMakeIdYear";try{const t=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...t];s({args:n}),s({args:t,mode:"atLeast"});const{makeId:d,modelYear:c,vehicleType:y}=b(e);let a=`/make/${d}/`;return a+=c?`modelYear/${c}`:"",a+=y?`${c?"/":""}vehicleType/${y}/`:"",i().get({endpointName:r,path:a})}catch(t){return u(t)}},Q=async e=>{const r="GetModelsForMakeYear";try{const t=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...t];s({args:n}),s({args:t,mode:"atLeast"});const{make:d,modelYear:c,vehicleType:y}=b(e);let a=`/make/${d}/`;return a+=c?`modelYear/${c}`:"",a+=y?`${c?"/":""}vehicleType/${y}/`:"",i().get({endpointName:r,path:a})}catch(t){return u(t)}},X=async e=>{const r="GetParts";try{const t=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];return s({args:t}),i().get({endpointName:r,params:e})}catch(t){return u(t)}},K=async e=>{const r="GetVehicleTypesForMake";try{return s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]}),i().get({endpointName:r,path:e})}catch(t){return u(t)}},Z=async e=>{const r="GetVehicleTypesForMakeId";try{return s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]}),i().get({endpointName:r,path:e.toString()})}catch(t){return u(t)}},z=async()=>{const e="GetVehicleVariableList";try{return i().get({endpointName:e})}catch(r){return u(r)}},x=async e=>{const r="GetVehicleVariableValuesList";try{return s({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]}),i().get({endpointName:r,path:e.toString()})}catch(t){return u(t)}},ee=async e=>{const r="GetWMIsForManufacturer";try{const t=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],n=[{name:"params",value:e,required:!0,types:["object"]},...t];s({args:n}),s({args:t,mode:"atLeast"});const d=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",c=(e==null?void 0:e.vehicleType)||"";return i().get({endpointName:r,path:d,params:{vehicleType:c}})}catch(t){return u(t)}},i=()=>{let e;const r=()=>e,t=a=>encodeURI(`DATA=${a}&format=${G}`),n=({endpointName:a,allowEmptyParams:l=!1,includeQueryString:f=!0,path:g="",params:m,saveUrl:v=!0})=>{if(!a)throw Error("Endpoint name is required to create URL string");const T=f?I(m,l):"",M=encodeURI(`${j}/${a}/${g}${T}`);return v&&(e=M),M},d=a=>n({...a,saveUrl:!1}),c=async(a,l={saveUrl:!0})=>(a&&h(a)==="object"&&(a=n({...a,saveUrl:l.saveUrl})),a=h(a)==="string"?a:r(),s({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:l,types:["object"]}]}),l.saveUrl&&(e=a),await fetch(a,l).then(async g=>{if(!g)throw Error("APi responded with an error, no response object returned");const m=g.headers.get("content-type"),v=`content-type: ${m},responseStatus: ${g.status},responseUrl: ${g.url}`;if(!g.ok)throw Error(`APi responded with an error, got ${v}`);if(!["application/json","text/json"].some(te=>m==null?void 0:m.includes(te)))throw Error(`API response is not in JSON format, got ${v}`);const k=await g.json();if(k)return k;throw Error(`API response OK but returned no data, got ${v}`)}).catch(g=>(g.message=`There was an error fetching API data: ${g.message}`,u(g))));return{getUrl:r,cacheUrl:n,createUrl:d,createPostBody:t,get:c,post:async(a,l={saveUrl:!0})=>(a&&h(a)==="object"&&(a=n({...a,saveUrl:l.saveUrl,includeQueryString:!1})),a=h(a)==="string"?a:r(),s({args:[{name:"url",value:a,required:!0,types:["string"]},{name:"options",value:l,types:["object"]},{name:"options.body",value:l.body,types:["string"]}]}),await c(a,{...l,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:t(l.body)}))}};o.DecodeVin=E,o.DecodeVinExtended=F,o.DecodeVinValues=S,o.DecodeVinValuesBatch=D,o.DecodeVinValuesExtended=Y,o.DecodeWMI=w,o.GetAllMakes=P,o.GetAllManufacturers=U,o.GetCanadianVehicleSpecifications=L,o.GetEquipmentPlantCodes=R,o.GetMakeForManufacturer=O,o.GetMakesForManufacturerAndYear=C,o.GetMakesForVehicleType=_,o.GetManufacturerDetails=W,o.GetModelsForMake=B,o.GetModelsForMakeId=H,o.GetModelsForMakeIdYear=J,o.GetModelsForMakeYear=Q,o.GetParts=X,o.GetVehicleTypesForMake=K,o.GetVehicleTypesForMakeId=Z,o.GetVehicleVariableList=z,o.GetVehicleVariableValuesList=x,o.GetWMIsForManufacturer=ee,o.isValidVin=N,o.useNHTSA=i,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=nhtsa-api-wrapper.umd.js.map
