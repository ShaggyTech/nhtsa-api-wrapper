"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const s=({args:e,mode:t="default"})=>{if(g(e)!=="array"&&!e.length)throw Error('catchInvalidArguments requires "args" that must be an array of IArgToValidate objects');if(t==="default")e.forEach(r=>{v(r)});else if(t==="atLeast"&&!e.find(n=>!!n.value))throw Error(`must provide at least one of the following arguments: ${e.map(n=>n.name).join(", ")}`)},v=({name:e,value:t,required:r,types:n,errorMode:o="error"})=>{if(g(e)!=="string")throw Error("'name', is required and must be of type string");let a="";const l=g(t),c=`error validating argument named "${e}",`,d=`received value: ${t} - of type: <${l}>`;if(n&&g(n)!=="array"&&!n.length)throw Error(`${c} 'types' must be an array of strings`);const y=n?`<${n.join(" | ")}>`:"";if(r&&!n?t||(a=`${c} is required, ${d}`):n&&!r?t!==void 0&&!n.includes(l)&&(a=`${c} must be of type(s) ${y}, ${d}`):r&&n&&(!t||!n.includes(l))&&(a=`${c} is required and must be of type(s) ${y}, ${d}`),a.length){if(o==="boolean")return!1;throw Error(a)}return!0},M=e=>g(e)==="error",G=e=>{let t="an unknown error occurred.";return M(e)?e:(g(e)==="string"&&(t=e),Error(t))},u=async e=>(M(e)||(e=G(e)),Promise.reject(e)),g=e=>{const t=Object.prototype.toString.call(e).toLowerCase();return t.slice(8,t.length-1)},k={A:1,B:2,C:3,D:4,E:5,F:6,G:7,H:8,J:1,K:2,L:3,M:4,N:5,P:7,R:9,S:2,T:3,U:4,V:5,W:6,X:7,Y:8,Z:9},T=[8,7,6,5,4,3,2,10,0,9,8,7,6,5,4,3,2];function q(e){if(typeof e!="string"||e.length!=17)return!1;e=e.toUpperCase();const t=e.split(""),r=t[8];if(isNaN(parseInt(r))&&r!=="X")return!1;const n=r==="X"?10:parseInt(r);return t.map((a,l)=>{let c;isNaN(parseInt(a))?c=k[a]:c=parseInt(a);const d=T[l];return c*d}).reduce((a,l)=>a+l,0)%11===n}const $="https://vpic.nhtsa.dot.gov/api/vehicles",b="json",i=()=>{let e;const t=({endpointName:o,allowEmptyParams:a=!1,includeQueryString:l=!0,path:c="",params:d,saveUrl:y=!0})=>{if(!o)throw Error("Endpoint name is required to create URL string");const m=l?U(d,a):"",h=encodeURI(`${$}/${o}/${c}${m}`);return y&&(e=h),h},r=async(o,a={saveUrl:!0})=>(o=o??e,s({args:[{name:"url",value:o,required:!0,types:["string"]},{name:"options",value:a,types:["object"]}]}),a.saveUrl&&(e=o),await fetch(o,a).then(async c=>{if(!c.ok)throw Error(`${c.status} ${c.url}`);const d=c.headers.get("content-type"),m=["application/json","text/json"].some(V=>d==null?void 0:d.includes(V)),h=`content-type: ${d},responseStatus: ${c.status},responseUrl: ${c.url}`;if(!m)throw Error(`API response is not in JSON format, got ${h}`);const f=await c.json();if(!f)throw Error(`API responded but returned no data, got ${h}`);return f}).catch(c=>(c.message=`There was an error fetching API data: ${c.message}`,u(c))));return{createUrl:t,get:r,post:async(o,a={saveUrl:!0})=>(o=o??e,s({args:[{name:"url",value:o,required:!0,types:["string"]},{name:"options",value:a,types:["object"]},{name:"options.body",value:a,types:["string"]}]}),await r(o,{...a,method:"POST",headers:{"content-type":"application/x-www-form-urlencoded"},body:encodeURI(`${a==null?void 0:a.body}&format=${b}`)}))}},U=(e,t=!1)=>{const r={format:b},n=g(e)==="object"?{...e,...r}:r;return"?"+Object.entries(p(n)).map(([a,l],c,d)=>l.length||t&&l===""?`${a}=${l}${c<d.length-1?"&":""}`:"").join("")},p=e=>Object.entries(e).filter(([t,r])=>v({name:t,types:["string","number","boolean"],value:r,errorMode:"boolean"})).reduce((t,[r,n])=>(t[r]=encodeURIComponent(n),t),{}),I=async(e,t)=>{const r="DecodeVin";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:o,get:a}=i();return o({endpointName:r,path:e,params:t}),a()}catch(n){return u(n)}},N=async(e,t)=>{const r="DecodeVinExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:o,get:a}=i();return o({endpointName:r,path:e,params:t}),a()}catch(n){return u(n)}},F=async(e,t)=>{const r="DecodeVinValues";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:o,get:a}=i();return o({endpointName:r,path:e,params:t}),await a()}catch(n){return u(n)}},j=async e=>{const t="DecodeVinValuesBatch";try{s({args:[{name:"inputString",value:e,required:!0,types:["string"]}]});const n=`DATA=${e}`,{createUrl:o,post:a}=i();return o({endpointName:t,includeQueryString:!1}),a(void 0,{body:n})}catch(r){return u(r)}},A=async(e,t)=>{const r="DecodeVinValuesExtended";try{const n=[{name:"vin",value:e,required:!0,types:["string"]},{name:"params",value:t,types:["object"]},{name:"modelYear",value:t==null?void 0:t.modelYear,types:["string","number"]}];s({args:n});const{createUrl:o,get:a}=i();return o({endpointName:r,path:e,params:t}),await a()}catch(n){return u(n)}},E=async e=>{const t="DecodeWMI";try{s({args:[{name:"WMI",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e}),o()}catch(r){return u(r)}},S=async()=>{const e="GetAllMakes";try{const{createUrl:t,get:r}=i();return t({endpointName:e}),r()}catch(t){return u(t)}},D=async e=>{const t="GetAllManufacturers";try{const r=[{name:"params",value:e,types:["object"]},{name:"manufacturerType",value:e==null?void 0:e.manufacturerType,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];s({args:r});const{createUrl:n,get:o}=i();return n({endpointName:t,params:e}),o()}catch(r){return u(r)}},Y=async e=>{const t="GetCanadianVehicleSpecifications";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"make",value:e.make,types:["string"]},{name:"model",value:e.model,types:["string"]},{name:"units",value:e.units,types:["string"]}];s({args:r});const{createUrl:n,get:o}=i();return n({endpointName:t,params:{make:"",model:"",units:"",...e},allowEmptyParams:!0}),o()}catch(r){return u(r)}},w=async e=>{const t="GetEquipmentPlantCodes";try{const r=[{name:"params",value:e,required:!0,types:["object"]},{name:"year",value:e.year,required:!0,types:["string","number"]},{name:"equipmentType",value:e.equipmentType,required:!0,types:["string","number"]},{name:"reportType",value:e.reportType,required:!0,types:["string"]}];s({args:r});const{createUrl:n,get:o}=i();return n({endpointName:t,params:e}),o()}catch(r){return u(r)}},L=async e=>{const t="GetMakeForManufacturer";try{s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e.toString()}),o()}catch(r){return u(r)}},P=async(e,t)=>{const r="GetMakesForManufacturerAndYear";try{const n=[{name:"manufacturer",value:e,required:!0,types:["string","number"]},{name:"params",value:t,required:!0,types:["object"]},{name:"year",value:t.year,required:!0,types:["string","number"]}];s({args:n});const{createUrl:o,get:a}=i();return o({endpointName:r,path:e.toString(),params:t}),a()}catch(n){return u(n)}},R=async e=>{const t="GetMakesForVehicleType";try{s({args:[{name:"typeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e}),o()}catch(r){return u(r)}},O=async e=>{const t="GetManufacturerDetails";try{s({args:[{name:"manufacturer",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e.toString()}),o()}catch(r){return u(r)}},C=async e=>{const t="GetModelsForMake";try{s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e}),o()}catch(r){return u(r)}},W=async e=>{const t="GetModelsForMakeId";try{s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e.toString()}),o()}catch(r){return u(r)}},x=async e=>{const t="GetModelsForMakeIdYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"makeId",value:e.makeId,required:!0,types:["string"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const{makeId:o,modelYear:a,vehicleType:l}=p(e);let c=`/make/${o}/`;c+=a?`modelYear/${a}`:"",c+=l?`${a?"/":""}vehicleType/${l}/`:"";const{createUrl:d,get:y}=i();return d({endpointName:t,path:c}),y()}catch(r){return u(r)}},_=async e=>{const t="GetModelsForMakeYear";try{const r=[{name:"modelYear",value:e.modelYear,types:["string","number"]},{name:"vehicleType",value:e.vehicleType,types:["string"]}],n=[{name:"params",value:e,required:!0,types:["object"]},{name:"make",value:e.make,required:!0,types:["string"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const{make:o,modelYear:a,vehicleType:l}=p(e);let c=`/make/${o}/`;c+=a?`modelYear/${a}`:"",c+=l?`${a?"/":""}vehicleType/${l}/`:"";const{createUrl:d,get:y}=i();return d({endpointName:t,path:c}),y()}catch(r){return u(r)}},B=async e=>{const t="GetParts";try{const r=[{name:"params",value:e,types:["object"]},{name:"type",value:e==null?void 0:e.type,types:["string","number"]},{name:"fromDate",value:e==null?void 0:e.fromDate,types:["string"]},{name:"toDate",value:e==null?void 0:e.toDate,types:["string"]},{name:"page",value:e==null?void 0:e.page,types:["string","number"]}];s({args:r});const{createUrl:n,get:o}=i();return n({endpointName:t,params:e}),o()}catch(r){return u(r)}},H=async e=>{const t="GetVehicleTypesForMake";try{s({args:[{name:"makeName",value:e,required:!0,types:["string"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e}),o()}catch(r){return u(r)}},J=async e=>{const t="GetVehicleTypesForMakeId";try{s({args:[{name:"makeId",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e.toString()}),o()}catch(r){return u(r)}},Q=async()=>{const e="GetVehicleVariableList";try{const{createUrl:t,get:r}=i();return t({endpointName:e}),r()}catch(t){return u(t)}},X=async e=>{const t="GetVehicleVariableValuesList";try{s({args:[{name:"variableValue",value:e,required:!0,types:["string","number"]}]});const{createUrl:n,get:o}=i();return n({endpointName:t,path:e.toString()}),o()}catch(r){return u(r)}},K=async e=>{const t="GetWMIsForManufacturer";try{const r=[{name:"manufacturer",value:e==null?void 0:e.manufacturer,types:["string","number"]},{name:"vehicleType",value:e==null?void 0:e.vehicleType,types:["string","number"]}],n=[{name:"params",value:e,required:!0,types:["object"]},...r];s({args:n}),s({args:r,mode:"atLeast"});const o=e!=null&&e.manufacturer?encodeURIComponent(e.manufacturer):"",a=(e==null?void 0:e.vehicleType)||"",{createUrl:l,get:c}=i();return l({endpointName:t,path:o,params:{vehicleType:a}}),c()}catch(r){return u(r)}};exports.DecodeVin=I;exports.DecodeVinExtended=N;exports.DecodeVinValues=F;exports.DecodeVinValuesBatch=j;exports.DecodeVinValuesExtended=A;exports.DecodeWMI=E;exports.GetAllMakes=S;exports.GetAllManufacturers=D;exports.GetCanadianVehicleSpecifications=Y;exports.GetEquipmentPlantCodes=w;exports.GetMakeForManufacturer=L;exports.GetMakesForManufacturerAndYear=P;exports.GetMakesForVehicleType=R;exports.GetManufacturerDetails=O;exports.GetModelsForMake=C;exports.GetModelsForMakeId=W;exports.GetModelsForMakeIdYear=x;exports.GetModelsForMakeYear=_;exports.GetParts=B;exports.GetVehicleTypesForMake=H;exports.GetVehicleTypesForMakeId=J;exports.GetVehicleVariableList=Q;exports.GetVehicleVariableValuesList=X;exports.GetWMIsForManufacturer=K;exports.isValidVin=q;
//# sourceMappingURL=nhtsa-api-wrapper.js.map
