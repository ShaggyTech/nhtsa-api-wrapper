import{F as r,_ as e,g as t}from"./Fetch-86b867a6.js";import"./isValidVin.js";class o extends r{constructor(r){super(r)}DecodeVinValues(r,o){return e(this,void 0,void 0,(function*(){const e="DecodeVinValues",i=t(o);if(o&&"object"!==i)return Promise.reject(new Error(`${e}, "params" argument must be of type object, got: `+`<${i}> ${o}`));const n=t(r);if("string"!==n)return Promise.reject(new Error(`${e}, "vin" argument is required and must be of type string, got: `+`<${n}> ${r}`));const s=t(null==o?void 0:o.modelYear);if((null==o?void 0:o.modelYear)&&"string"!==s&&"number"!==s)return Promise.reject(new Error(`${e}, "params.modelYear" argument is required and must be of type string or number, got: `+`<${s}> ${o.modelYear}`));const u=yield this.buildQueryString(o).catch(r=>Promise.reject(new Error(`${e}, Error building query string: ${r}`))),a=`${this.baseUrl}/${e}/${r}${u}`;return yield this.get(a).then(r=>r).catch(r=>Promise.reject(new Error(`${e}, Fetch.get() error: ${r}`)))}))}}export{o as DecodeVinValues};
//# sourceMappingURL=DecodeVinValues.js.map
