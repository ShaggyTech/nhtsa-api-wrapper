{"version":3,"file":"GetVehicleTypesForMake.js","sources":["../../src/api/actions/GetVehicleTypesForMake.ts"],"sourcesContent":["/**\n * @module api/actions/GetVehicleTypesForMake\n * @category Actions\n * @description GetVehicleTypesForMake NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetVehicleTypesForMake](module-api_actions_GetVehicleTypesForMake.GetVehicleTypesForMake.html)\n * >\n * > **Types**\n * > - Type: [GetVehicleTypesForMakeResponse](#GetVehicleTypesForMakeResponse)\n * > - Type: [GetVehicleTypesForMakeResults](#GetVehicleTypesForMakeResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetVehicleTypesForMake extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This returns all the Vehicle Types in the vPIC dataset for a specified Make,\n   * whose name is LIKE the make name in the vPIC Dataset.\n   * - `makeName` can be a partial name, or a full name for more specificity\n   *   (e.g., \"Merc\", \"Mercedes Benz\", etc.).\n   *\n   * @async\n   * @param {string} makeName - Name of the vehicle make to search.\n   * @returns {(Promise<GetVehicleTypesForMakeResponse>)} Api Response object.\n   */\n  async GetVehicleTypesForMake(\n    makeName: string\n  ): Promise<GetVehicleTypesForMakeResponse> {\n    const action = 'GetVehicleTypesForMake';\n\n    /* Runtime typechecking */\n    const typeofMakeName = getTypeof(makeName);\n    if (typeofMakeName !== 'string') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"makeName\" argument is required and must be of type string, got: ` +\n            `<${typeofMakeName}> ${makeName}`\n        )\n      );\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString().catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${makeName}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetVehicleTypesForMakeResponse}.Results' array.\n *\n * @memberof module:api/actions/GetVehicleTypesForMake\n * @alias GetVehicleTypesForMakeResults\n */\nexport type GetVehicleTypesForMakeResults = {\n  MakeId: number;\n  MakeName: string;\n  VehicleTypeId: number;\n  VehicleTypeName: string;\n};\n\n/**\n * Type representing the complete response returned by the GetVehicleTypesForMake API Action.\n *\n * @memberof module:api/actions/GetVehicleTypesForMake\n * @alias GetVehicleTypesForMakeResponse\n */\nexport type GetVehicleTypesForMakeResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetVehicleTypesForMakeResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,sBAAuB,SAAQA,WAAK;IAC/C,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;IAYK,sBAAsB,CAC1B,QAAgB;;YAEhB,MAAM,MAAM,GAAG,wBAAwB,CAAC;;YAGxC,MAAM,cAAc,GAAGC,eAAS,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,cAAc,KAAK,QAAQ,EAAE;gBAC/B,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,qEAAqE;oBAC5E,IAAI,cAAc,KAAK,QAAQ,EAAE,CACpC,CACF,CAAC;aACH;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,KAC1D,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;;YAGlE,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;iBAC5B,KAAK,CAAC,CAAC,GAAG,KACT,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}