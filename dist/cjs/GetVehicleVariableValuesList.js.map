{"version":3,"file":"GetVehicleVariableValuesList.js","sources":["../../src/api/actions/GetVehicleVariableValuesList.ts"],"sourcesContent":["/**\n * @module api/actions/GetVehicleVariableValuesList\n * @category Actions\n * @description GetVehicleVariableValuesList NHSTA Api Action.\n *\n * > **Module Exports**:\n * > - Class: [GetVehicleVariableValuesList](module-api_actions_GetVehicleVariableValuesList.GetVehicleVariableValuesList.html)\n * >\n * > **Types**\n * > - Type: [GetVehicleVariableValuesListResponse](#GetVehicleVariableValuesListResponse)\n * > - Type: [GetVehicleVariableValuesListResults](#GetVehicleVariableValuesListResults)\n *\n */\n\n/* Parent Class and Fetch Types */\nimport {\n  Fetch /* Class */,\n  FetchConfig /* Type */,\n  FetchResponse /* Type */,\n} from '../Fetch';\n\n/* Utility Functions */\nimport { getTypeof } from '../../utils';\n\n/**\n * Implemented by [NHTSA](module-api_NHTSA-NHTSA.html).\n *\n * Extends [api/Fetch.Fetch](module-api_Fetch.Fetch.html).\n *\n * @category Actions\n * @param {FetchConfig} [userConfig] - User configuration options to construct the class with.\n */\nexport class GetVehicleVariableValuesList extends Fetch {\n  constructor(userConfig?: FetchConfig) {\n    super(userConfig);\n  }\n\n  /**\n   * This provides a list of all the accepted values for a given variable that are stored in the vPIC dataset.\n   *\n   * This applies to only \"Look up\" type of variables.\n   * - `variableValue` can either be a:\n   *   - Variable Name (\"battery type\" in first example, please use full name, not just part of it),\n   *   - or Variable ID (number).\n   *\n   * @async\n   * @param {string|number} variableValue - The variable you want to get a values list of.\n   * @returns {(Promise<GetVehicleVariableValuesListResponse>)} Api Response object.\n   */\n  async GetVehicleVariableValuesList(\n    variableValue: string | number\n  ): Promise<GetVehicleVariableValuesListResponse> {\n    const action = 'GetVehicleVariableValuesList';\n\n    /* Runtime typechecking */\n    const typeofVariableValue = getTypeof(variableValue);\n    if (typeofVariableValue !== 'string' && typeofVariableValue !== 'number') {\n      return Promise.reject(\n        new Error(\n          `${action}, \"variableValue\" argument is required and must be of type string or number, got: ` +\n            `<${typeofVariableValue}> ${variableValue}`\n        )\n      );\n    }\n    /* Encode to a valid URI string (space chars, etc.) if variableValue is a string*/\n    if (typeofVariableValue === 'string') {\n      variableValue = encodeURI(variableValue as string);\n    }\n\n    /* Build the 'default' query string to be appended to the URL*/\n    const queryString = await this.buildQueryString().catch((err) =>\n      Promise.reject(\n        new Error(`${action}, Error building query string: ${err}`)\n      )\n    );\n\n    /* Build the final request URL*/\n    const url = `${this.baseUrl}/${action}/${variableValue}${queryString}`;\n\n    /* Return the result */\n    return await this.get(url)\n      .then((response) => response)\n      .catch((err) =>\n        Promise.reject(new Error(`${action}, Fetch.get() error: ${err}`))\n      );\n  }\n}\n\n/**\n * Type representing the structure of objects found in the '{@link GetVehicleVariableValuesListResponse}.Results' array.\n *\n * @memberof module:api/actions/GetVehicleVariableValuesList\n * @alias GetVehicleVariableValuesListResults\n */\nexport type GetVehicleVariableValuesListResults = {\n  ElementName: string;\n  Id: number;\n  Name: string;\n};\n\n/**\n * Type representing the complete response returned by the GetVehicleVariableValuesList API Action.\n *\n * @memberof module:api/actions/GetVehicleVariableValuesList\n * @alias GetVehicleVariableValuesListResponse\n */\nexport type GetVehicleVariableValuesListResponse = {\n  /** A count of the items returned in the Results array. */\n  Count: number;\n  /** A message describing the Results array. */\n  Message: string;\n  /** Search terms (VIN, WMI, manufacturer, etc.) used in the request URL. */\n  SearchCriteria: string;\n  /** The search results returned by the NHSTA API request. */\n  Results: Array<GetVehicleVariableValuesListResults>;\n  /** [Fetch API Response](https://github.github.io/fetch/#Response) properties. */\n  FetchResponse: FetchResponse;\n};\n"],"names":["Fetch","getTypeof"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;AAwBA;;;;;;;;MAQa,4BAA6B,SAAQA,WAAK;IACrD,YAAY,UAAwB;QAClC,KAAK,CAAC,UAAU,CAAC,CAAC;KACnB;;;;;;;;;;;;;IAcK,4BAA4B,CAChC,aAA8B;;YAE9B,MAAM,MAAM,GAAG,8BAA8B,CAAC;;YAG9C,MAAM,mBAAmB,GAAGC,eAAS,CAAC,aAAa,CAAC,CAAC;YACrD,IAAI,mBAAmB,KAAK,QAAQ,IAAI,mBAAmB,KAAK,QAAQ,EAAE;gBACxE,OAAO,OAAO,CAAC,MAAM,CACnB,IAAI,KAAK,CACP,GAAG,MAAM,oFAAoF;oBAC3F,IAAI,mBAAmB,KAAK,aAAa,EAAE,CAC9C,CACF,CAAC;aACH;;YAED,IAAI,mBAAmB,KAAK,QAAQ,EAAE;gBACpC,aAAa,GAAG,SAAS,CAAC,aAAuB,CAAC,CAAC;aACpD;;YAGD,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,KAC1D,OAAO,CAAC,MAAM,CACZ,IAAI,KAAK,CAAC,GAAG,MAAM,kCAAkC,GAAG,EAAE,CAAC,CAC5D,CACF,CAAC;;YAGF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,aAAa,GAAG,WAAW,EAAE,CAAC;;YAGvE,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;iBACvB,IAAI,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC;iBAC5B,KAAK,CAAC,CAAC,GAAG,KACT,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,wBAAwB,GAAG,EAAE,CAAC,CAAC,CAClE,CAAC;SACL;KAAA;;;;;"}